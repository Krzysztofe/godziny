{"version":3,"file":"static/js/869.277ae63e.chunk.js","mappings":"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","sources":["pages/hoursPanel/DayPrintData.tsx","pages/hoursPanel/useDataBaseValues.tsx","pages/hoursPanel/utils.tsx","pages/hoursPanel/Day.tsx","pages/hoursPanel/Column.tsx","components/inputs/TextInput.tsx","pages/hoursPanel/HeaderInPanel.tsx","components/inputs/RadioInput.tsx","pages/hoursPanel/dayForm/dataDayForm.tsx","pages/hoursPanel/dayForm/validationDayForm.tsx","pages/hoursPanel/dayForm/useDayForm.tsx","pages/hoursPanel/dayForm/DayForm.tsx","pages/hoursPanel/IndexHoursPanel.tsx"],"sourcesContent":["interface Props {\r\n  day: any;\r\n}\r\n\r\nconst DayPrintData = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <small>Imię:{props.day.userName}</small>\r\n      <small>{props.day.date}</small>\r\n      <small>Godz.: {props.day.hours}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayPrintData;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  useColumnsQuery,\r\n  useAddDaysMutation,\r\n  useUpdateColumnsMutation,\r\n} from \"../../services/apiSlice\";\r\nimport { addDaysToEmptyColumns } from \"./utils\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleEidtisLoading } from \"../../redux/storeFeatures/hoursPanelSlice\";\r\n\r\nconst defaultValue = null;\r\ninterface DatabaseColumns {\r\n  allHours: any;\r\n  columns: any[];\r\n}\r\n\r\nconst useDataBaseValues = (values: any = defaultValue) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error } = useColumnsQuery(undefined);\r\n  const [addDays, success] = useAddDaysMutation();\r\n  const [updateColumns] = useUpdateColumnsMutation();\r\n\r\n  const dataBaseColumnsId = data && Object.keys(data).join();\r\n\r\n  const dataBaseAllData = data\r\n    ? Object.values(data).flat()\r\n    : ([] as DatabaseColumns[]);\r\n\r\n  const dataBaseAllHours =\r\n    data && dataBaseAllData.length > 0\r\n      ? (dataBaseAllData[0] as any)?.allHours\r\n      : \"\";\r\n\r\n  const dataBasePendingHours =\r\n    data && dataBaseAllData.length > 0\r\n      ? (dataBaseAllData[0] as any)?.pendingHours\r\n      : \"\";\r\n\r\n  const dataBaseColumnsWithoutDays =\r\n    data && dataBaseAllData.length > 0\r\n      ? (dataBaseAllData[0] as any)?.columns\r\n      : [];\r\n\r\n  const databaseColumns = addDaysToEmptyColumns(dataBaseColumnsWithoutDays);\r\n\r\n  const updatedColumnsWithAddedDays = data ? [...databaseColumns] : [];\r\n  updatedColumnsWithAddedDays[0] = data &&\r\n    dataBaseColumnsWithoutDays?.length > 0 && {\r\n      ...databaseColumns?.[0],\r\n      days: [...databaseColumns?.[0]?.days, ...[values]],\r\n    };\r\n\r\n  const newColumnsFromDatabase = data ? [...databaseColumns] : [];\r\n\r\n  const usersHoursSum =\r\n    data && dataBaseAllData.length > 0\r\n      ? databaseColumns[0].days.reduce((sum: any, day: any) => {\r\n          return sum + day?.hours;\r\n        }, 0)\r\n      : [];\r\n\r\n  useEffect(() => {\r\n    dispatch(handleEidtisLoading(success.isLoading));\r\n  }, [success.isLoading, dispatch]);\r\n\r\n  console.log(\"\", usersHoursSum);\r\n\r\n  return {\r\n    dataBaseAllHours,\r\n    dataBasePendingHours,\r\n    dataBaseColumnsId,\r\n    updatedColumnsWithAddedDays,\r\n    newColumnsFromDatabase,\r\n    databaseColumns,\r\n    usersHoursSum,\r\n    data,\r\n    error,\r\n    success,\r\n    updateColumns,\r\n    addDays,\r\n  };\r\n};\r\n\r\nexport default useDataBaseValues;\r\n","export const addDaysToEmptyColumns = (arr: any) => {\r\n  return arr?.map((obj: any) => {\r\n    if (!obj.hasOwnProperty(\"days\")) {\r\n      return { ...obj, days: [] };\r\n    }\r\n    return obj;\r\n  });\r\n};\r\n\r\nexport const handleDragDrop = (results: any, columns: any, setColumns: any) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = [...columns[sourceColumnIdx].days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n\r\n// const firebasey = {\r\n//   uwrahts: {\r\n//     allHours: 50,\r\n//     columns: [\r\n//       {\r\n//         name: \"ppp\",\r\n//         id: \"22\",\r\n//         days: [\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//         ],\r\n//       },\r\n//       {\r\n//         name: \"zatwierdzone\",\r\n//         id: \"22\",\r\n//         days: [\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 20 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//         ],\r\n//       },\r\n//     ],\r\n//   },\r\n// };\r\n\r\n// const count = (obj: any) => {\r\n//   const allHours = obj.uwrahts.allHours;\r\n\r\n// if (\r\n//   obj &&\r\n//   obj.uwrahts &&\r\n//   obj.uwrahts.columns &&\r\n//   obj.uwrahts.columns.length > 1\r\n// ) {\r\n//   const secondObject = obj.uwrahts.columns[1];\r\n//   if (secondObject && secondObject.days) {\r\n//     return secondObject.days.reduce((sum:any, day:any) => sum + day.hours, 0);\r\n//   }\r\n// }\r\n\r\n// return 0;\r\n// };\r\n\r\n// console.log(\"ooo\", count(firebasey));\r\n","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport DayPrintData from \"./DayPrintData\";\r\nimport useDataBaseValues from \"./useDataBaseValues\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\ninterface Props {\r\n  day: any;\r\n  index: any;\r\n}\r\n\r\nconst Day = (props: Props) => {\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n  const {\r\n    dataBaseColumnsId,\r\n    newColumnsFromDatabase,\r\n    usersHoursSum,\r\n    dataBaseAllHours,\r\n    updateColumns,\r\n  } = useDataBaseValues();\r\n\r\n  const handleUpdate = async (id: any) => {\r\n    const updatedColumnsWithDeletedDays = newColumnsFromDatabase.map(\r\n      (column: any) => {\r\n        if (column && column.days) {\r\n          return {\r\n            ...column,\r\n            days: column.days.filter((day: any) => day.id !== id),\r\n          };\r\n        }\r\n        return column;\r\n      }\r\n    );\r\n\r\n    await updateColumns({\r\n      id: dataBaseColumnsId,\r\n      columns: {\r\n        allHours: dataBaseAllHours,\r\n        pendingHours: usersHoursSum,\r\n        columns: updatedColumnsWithDeletedDays,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"1px solid black\" }}>\r\n      <Draggable\r\n        draggableId={props.day && props?.day?.id.toString()}\r\n        index={props.index}\r\n      >\r\n        {provided => {\r\n          return (\r\n            <div\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <strong>{props.day.content}</strong>\r\n              <DayPrintData day={props.day} />\r\n              <button onClick={() => handleUpdate(props.day.id)}>\r\n                <FaTrashAlt />\r\n              </button>\r\n            </div>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport Day from \"./Day\";\r\n\r\ninterface Props {\r\n  column: any;\r\n\r\n}\r\n\r\nconst Column = (props: Props) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h4>{props.column.columnName} </h4>\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={{\r\n                border: \"1px solid black\",\r\n                width: \"30vw\",\r\n                minHeight: \"100vh\",\r\n                height: \"fit-content\",\r\n              }}\r\n            >\r\n              {props.column.days && props.column.days.length >0 &&\r\n                props.column?.days?.map((day: any, idx: any) => {\r\n                  return (\r\n                    <Day day={day} index={idx} key={crypto.randomUUID()} \r\n                    />\r\n                  );\r\n                })}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","export interface Props {\r\n  type: string;\r\n  name: string;\r\n  value: string | number;\r\n  label: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleBlur?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst TextInput = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n      <input\r\n        id={props.name}\r\n        type={props.type}\r\n        name={props.name}\r\n        value={props.value}\r\n        onChange={props.handleChange}\r\n        onBlur={props.handleBlur}\r\n        placeholder={props.placeholder}\r\n        style={{ width: 50 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from \"../../components/inputs/TextInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  useAddDaysMutation,\r\n  useColumnsQuery,\r\n  useDeleteAllColumnsMutation,\r\n} from \"../../services/apiSlice\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { handleChange } from \"../../redux/storeFeatures/hoursPanelSlice\";\r\nimport useDataBaseValues from \"./useDataBaseValues\";\r\n\r\nconst HeaderInPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const [deleteAllColumns, isLoading] = useDeleteAllColumnsMutation();\r\n\r\n  const {\r\n    dataBaseColumnsId,\r\n    dataBaseAllHours,\r\n    dataBasePendingHours,\r\n    updatedColumnsWithAddedDays,\r\n    databaseColumns,\r\n    data,\r\n\r\n    updateColumns,\r\n  } = useDataBaseValues();\r\n\r\n  const columnsIdFRomDatabase = data && Object.keys(data).join();\r\n\r\n\r\n\r\n  const handleDelete = async () => {\r\n    await deleteAllColumns(columnsIdFRomDatabase);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    dispatch(handleChange(value));\r\n  };\r\n\r\n  const handleAddHours = async () => {\r\n    await updateColumns({\r\n      id: dataBaseColumnsId,\r\n      columns: {\r\n        allHours: +numberOfDays,\r\n        pendingHours: dataBasePendingHours,\r\n        columns: updatedColumnsWithAddedDays,\r\n      },\r\n    });\r\n  \r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <TextInput\r\n        type=\"number\"\r\n        name=\"numberOfDays\"\r\n        value={numberOfDays}\r\n        label=\"Godziny w miesiącu \"\r\n        placeholder=\"Dni\"\r\n        handleChange={handleInputChange}\r\n      />\r\n      <button onClick={handleAddHours}>Dodaj godziny</button>\r\n\r\n      <button onClick={handleDelete}> usuń wszystko</button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderInPanel;\r\n","import { ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  containerClass?: string;\r\n  inuptClass?: string;\r\n  labelClass?: string;\r\n  label?: ReactNode;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        className={props.inuptClass}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.labelClass}>\r\n       <small> {props.label ? props.label : props.value}</small>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","export const initialValues = {\r\n  id: crypto.randomUUID(),\r\n  date: \"\",\r\n  hours: \"\",\r\n  userName: \"\",\r\n  place: \"\",\r\n};\r\n\r\ninterface DayModel {\r\n  id?: string;\r\n  userName: string;\r\n  date: string;\r\n  hours: string | number;\r\n  place: string;\r\n}\r\n\r\ninterface ColumnModel {\r\n  id: string;\r\n  columnName: string;\r\n  days?: DayModel[];\r\n}\r\n\r\nconst columns: ColumnModel[] = [\r\n  {\r\n    id: \"miesiac\",\r\n    columnName: \"Miesiąc\",\r\n    days: [],\r\n  },\r\n  {\r\n    id: \"oczekujące\",\r\n    columnName: \"Oczekujące\",\r\n  },\r\n  {\r\n    id: \"zatwierdzone\",\r\n    columnName: \"Zatwierdzone\",\r\n  },\r\n];\r\n\r\nexport const addedColumnsWithDays = {\r\n  allHours: 0,\r\n  pendingHours: 0,\r\n  columns: columns,\r\n};\r\n\r\n// export const addedColumnsWithDays:ColumnModel[] = [\r\n//   {\r\n//     id: \"miesiac\",\r\n//     columnName: \"Miesiąc\",\r\n//     days: [],\r\n//   },\r\n//   {\r\n//     id: \"oczekujące\",\r\n//     columnName: \"Oczekujące\",\r\n//   },\r\n//   {\r\n//     id: \"zatwierdzone\",\r\n//     columnName: \"Zatwierdzone\",\r\n//   },\r\n// ];\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n  userName: yup.string().required(\"Podaj imię\"),\r\n  date: yup.string().required(\"Podaj datę\"),\r\n  hours: yup.number().required(\"Podaj liczbę godzin\").moreThan(0, \"Liczba godzin musi być większa od 0\"),\r\n  place: yup.string().required(\"Podaj lokalizację\"),\r\n});\r\n","import { useFormik } from \"formik\";\r\nimport useDataBaseValues from \"../useDataBaseValues\";\r\nimport { addedColumnsWithDays, initialValues } from \"./dataDayForm\";\r\nimport { validationSchema } from \"./validationDayForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface FormValues {\r\n  date: string;\r\n  hours: number | string;\r\n  userName: string;\r\n  place: string;\r\n}\r\n\r\nconst useDayForm = () => {\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const formik = useFormik<FormValues>({\r\n    initialValues: initialValues,\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async values => {\r\n      formik.setFieldValue(\"id\", crypto.randomUUID());\r\n      addedColumnsWithDays.columns[0].days = [values];\r\n\r\n      data === null\r\n        ? await addDays(addedColumnsWithDays)\r\n        : await updateColumns({\r\n            id: dataBaseColumnsId,\r\n            columns: {\r\n              allHours: dataBaseAllHours,\r\n              pendingHours: usersHoursSum,\r\n              columns: updatedColumnsWithAddedDays,\r\n            },\r\n          });\r\n    },\r\n  });\r\n\r\n  const {\r\n    dataBaseAllHours,\r\n    dataBasePendingHours,\r\n    dataBaseColumnsId,\r\n    updatedColumnsWithAddedDays,\r\n    data,\r\n    usersHoursSum,\r\n    success,\r\n    updateColumns,\r\n    addDays,\r\n  } = useDataBaseValues(formik.values);\r\n\r\n  // console.log(\"\", success.isLoading);\r\n\r\n  return { formik };\r\n};\r\n\r\nexport default useDayForm;\r\n","import { FcApproval } from \"react-icons/fc\";\r\nimport RadioInput from \"../../../components/inputs/RadioInput\";\r\nimport TextInput from \"../../../components/inputs/TextInput\";\r\nimport useDayForm from \"./useDayForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst DayForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { requestState } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const { formik } = useDayForm();\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} style={{ marginTop: 20 }}>\r\n      {[\r\n        { type: \"text\", value: \"userName\", label: \"Imię\" },\r\n        { type: \"date\", value: \"date\", label: \"Dzień\" },\r\n        { type: \"number\", value: \"hours\", label: \"Godz.\" },\r\n      ].map(({ type, value, label }) => {\r\n        return (\r\n          <div key={value}>\r\n            <TextInput\r\n              type={type}\r\n              name={value}\r\n              value={formik.values[value as keyof typeof formik.values]}\r\n              label={label}\r\n              placeholder={label}\r\n              handleChange={formik.handleChange}\r\n              handleBlur={formik.handleBlur}\r\n            />\r\n            <div style={{ color: \"red\" }}>\r\n              {formik.touched[value as keyof typeof formik.values] &&\r\n                formik.errors[value as keyof typeof formik.values] && (\r\n                  <small>\r\n                    {formik.errors[value as keyof typeof formik.values]}\r\n                  </small>\r\n                )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {[\"Wewnątrz\", \"Poza\"].map(place => {\r\n        return (\r\n          <RadioInput\r\n            key={place}\r\n            value={place}\r\n            name={\"place\"}\r\n            handleChange={formik.handleChange}\r\n            checked={formik.values.place === place}\r\n          />\r\n        );\r\n      })}\r\n      <div style={{ color: \"red\" }}>\r\n        {formik.touched.place && formik.errors.place && (\r\n          <small>{formik.errors.place}</small>\r\n        )}\r\n      </div>\r\n\r\n      <>{requestState.edit.isLoading ? \"loading\" : \"uu\"}</>\r\n      \r\n      <button type={\"submit\"}>\r\n        <FcApproval />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DayForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport Column from \"./Column\";\r\nimport HeaderInPanel from \"./HeaderInPanel\";\r\nimport DayForm from \"./dayForm/DayForm\";\r\nimport useDataBaseValues from \"./useDataBaseValues\";\r\nimport { handleDragDrop } from \"./utils\";\r\n\r\nconst IndexHoursPanel = () => {\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const {\r\n    dataBaseAllHours,\r\n    dataBasePendingHours,\r\n    dataBaseColumnsId,\r\n    databaseColumns,\r\n    usersHoursSum,\r\n    data,\r\n    updateColumns,\r\n  } = useDataBaseValues();\r\n\r\n  const [allHours, setAllHours] = useState(0);\r\n  const [pendingHours, setPendingHours] = useState(0)\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAllHours(dataBaseAllHours);\r\n  }, [data]);\r\n\r\n useEffect(() => {\r\n   setPendingHours(dataBasePendingHours);\r\n }, [data]);\r\n\r\n\r\n  useEffect(() => {\r\n    setColumns(databaseColumns);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    dataBaseColumnsId &&\r\n      updateColumns({\r\n        id: dataBaseColumnsId,\r\n        columns: {\r\n          allHours: allHours,\r\n          pendingHours: usersHoursSum,\r\n          columns: columns,\r\n        },\r\n      });\r\n  }, [columns, numberOfDays]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderInPanel />\r\n      <DayForm />\r\n      <div>\r\n        <p>wszystkie godziny: {dataBaseAllHours - dataBasePendingHours} </p>\r\n        <p>oczekujące godziny: {pendingHours}</p>\r\n        <div style={{ display: \"flex\" }}>\r\n          <DragDropContext\r\n            onDragEnd={results => handleDragDrop(results, columns, setColumns)}\r\n          >\r\n            {columns &&\r\n              columns.length > 0 &&\r\n              columns.map((column: any, idx: any) => {\r\n                return <Column column={column} key={column.id} />;\r\n              })}\r\n          </DragDropContext>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexHoursPanel;\r\n"],"names":["props","_jsxs","children","day","userName","_jsx","date","hours","_dataBaseAllData$","_dataBaseAllData$2","_dataBaseAllData$3","_databaseColumns$","arr","values","arguments","length","undefined","dispatch","useDispatch","_useColumnsQuery","useColumnsQuery","data","error","_useAddDaysMutation","useAddDaysMutation","_useAddDaysMutation2","_slicedToArray","addDays","success","_useUpdateColumnsMuta","useUpdateColumnsMutation","updateColumns","dataBaseColumnsId","Object","keys","join","dataBaseAllData","flat","dataBaseAllHours","allHours","dataBasePendingHours","pendingHours","dataBaseColumnsWithoutDays","columns","databaseColumns","map","obj","hasOwnProperty","_objectSpread","days","updatedColumnsWithAddedDays","_toConsumableArray","concat","newColumnsFromDatabase","usersHoursSum","reduce","sum","useEffect","handleEidtisLoading","isLoading","console","log","useSelector","state","hoursPanel","numberOfDays","_props$day","_useDataBaseValues","useDataBaseValues","handleUpdate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","updatedColumnsWithDeletedDays","wrap","_context","prev","next","column","filter","stop","_x","apply","style","border","Draggable","draggableId","toString","index","provided","draggableProps","dragHandleProps","ref","innerRef","content","DayPrintData","onClick","FaTrashAlt","columnName","Droppable","droppableId","snapshot","_props$column","_props$column$days","droppableProps","width","minHeight","height","idx","Day","crypto","randomUUID","placeholder","htmlFor","name","label","type","value","onChange","handleChange","onBlur","handleBlur","_useDeleteAllColumnsM","useDeleteAllColumnsMutation","_useDeleteAllColumnsM2","deleteAllColumns","columnsIdFRomDatabase","handleDelete","handleAddHours","_ref2","_callee2","_context2","TextInput","e","target","className","containerClass","checked","inuptClass","labelClass","initialValues","place","addedColumnsWithDays","validationSchema","yup","required","moreThan","formik","useFormik","onSubmit","_onSubmit","setFieldValue","requestState","useDayForm","handleSubmit","marginTop","color","touched","errors","RadioInput","_Fragment","edit","FcApproval","_useState","useState","_useState2","setAllHours","_useState3","_useState4","setPendingHours","_useState5","_useState6","setColumns","HeaderInPanel","DayForm","display","DragDropContext","onDragEnd","results","source","destination","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","Column"],"sourceRoot":""}