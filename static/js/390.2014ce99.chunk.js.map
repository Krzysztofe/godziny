{"version":3,"file":"static/js/390.2014ce99.chunk.js","mappings":"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","sources":["components/BorderInline.tsx","components/alert/buttonsAlert/ButtonAlertAccept.tsx","components/alert/buttonsAlert/ButtonAlertDelete.tsx","components/alert/Alert.tsx","components/buttonForm/ButtonForm.tsx","components/collapseContainer/collapseArrow/CollapseArrow.tsx","components/icons/IconTrash.tsx","components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/indexContainer/IndexContainer.tsx","components/inputs/inputError/InputError.tsx","components/inputs/inputsText/labelCover/InputsCover.tsx","components/inputs/inputsText/InputsTextLabel.tsx","components/inputs/inputsText/InputsText.tsx","components/listContainer/ListItemNoData.tsx","components/listContainer/stylesListContainer.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useBtnContent.tsx","components/listContainer/ListContainer.tsx","pages/settings/listMonths/useMonthDate.tsx","pages/settings/listMonths/buttonDeleteMonth/useDeleteMonthAsync.tsx","pages/settings/listMonths/buttonDeleteMonth/ButtonDeleteMonth.tsx","pages/settings/listMonths/monthTitle/IconArrowLeft.tsx","pages/settings/listMonths/monthTitle/MonthTitle.tsx","hooks/updateReduxDatabase/useReduxCalcHours.tsx","components/inputs/inputsRange/InputsRange.tsx","pages/settings/listMonths/formHours/FormHoursError.tsx","pages/settings/listMonths/formHours/formHoursTop/FormHoursTop.tsx","pages/settings/listMonths/formHours/useFormikHours.tsx","pages/settings/listMonths/formHours/FormHoursContext.tsx","pages/settings/listMonths/formHours/utilsRequestContainer.scss/utilsRequestContainer.tsx","pages/settings/listMonths/formHours/FormHoursContainer.tsx","pages/settings/listMonths/collapseFormHours/CollapseContent.tsx","pages/settings/listMonths/collapseFormHours/CollapseFormHours.tsx","data/dataPolishMonths.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/listUsers/buttonDeleteUser/useDeleteUserAsync.tsx","pages/settings/listUsers/buttonDeleteUser/ButtonDeleteUser.tsx","pages/settings/listUsers/ListUsers.tsx","components/HeaderList.tsx","pages/settings/settingsContent/SettingsContent.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["const BorderInline = () => {\r\n  return <div className=\"border d-md-none\"></div>;\r\n};\r\n\r\nexport default BorderInline;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertAccept = (props: Props) => {\r\n\r\n\r\n  return (\r\n    <Button\r\n      id=\"noButton\"\r\n      className=\"_radius bg-primary border-0 px-5 ms-4\"\r\n      onClick={props.action}\r\n    >\r\n      Ok\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertAccept;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertDelete = (props: Props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button id=\"noButton\" className=\"_radius bg-dark border-0 px-4 px-sm-5\">\r\n        Nie\r\n      </Button>\r\n      <Button\r\n        onClick={props.action}\r\n        className=\"_radius bg-primary border-0 px-4 px-sm-5 ms-4\"\r\n      >\r\n        Tak\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertDelete;\r\n","import { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./_alert.scss\";\r\nimport ButtonAlertAccept from \"./buttonsAlert/ButtonAlertAccept\";\r\nimport ButtonAlertDelete from \"./buttonsAlert/ButtonAlertDelete\";\r\nimport { memo, useEffect } from \"react\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = memo((props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  if (!props.isPrinted) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"opacityContainer\"\r\n        className=\"fixed-top _d-center _alert\"\r\n        onClick={handleClose}\r\n      >\r\n        <div\r\n          className={`p-5 bg-white _radius text-center fs-2 fw-medium _anim-dropDown`}\r\n        >\r\n          {props.header}\r\n          <div className=\"_w-fitContent m-auto mt-4\">\r\n            {props.header.includes(\"Usunąć\") ? (\r\n              <ButtonAlertDelete action={props.action} />\r\n            ) : (\r\n              <ButtonAlertAccept action={props.action} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Alert;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport \"./_buttonForm.scss\";\r\nimport useBtnContent from \"../../hooks/useBtnContent\";\r\nimport \"./_buttonForm.scss\";\r\nimport { memo } from \"react\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  text?: string;\r\n  styles?: string;\r\n};\r\n\r\nconst ButtonForm = memo((props: Props) => {\r\n  const buttonText = props.text ? <div>{props.text}</div> : <div>Zapisz</div>;\r\n  const { btnContent } = useBtnContent(props?.isLoading, buttonText);\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      variant=\"primary\"\r\n      disabled={props?.isLoading}\r\n      className={`_d-center w-50 p-0 py-1 mt-2 ms-auto _radius  _fw-semiBold _fs-primary _buttonForm position-relative ${props.styles}`}\r\n    >\r\n      <div className=\"invisible\">Z</div>\r\n      <div className=\"_buttonForm__content _d-center\">{btnContent}</div>\r\n    </Button>\r\n  );\r\n});\r\n\r\nexport default ButtonForm;\r\n","import { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport \"./_collapseArrow.scss\";\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n};\r\n\r\nconst CollapseArrow = (props: Props) => {\r\n  return (\r\n    <MdOutlineKeyboardArrowDown\r\n      className={`fs-1 _fw-light _collapseArrow h-100 ${\r\n        props.isOpen ? \"_collapseArrow--rotate\" : \"\"\r\n      }`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollapseArrow;\r\n","import { RiDeleteBin6Line } from \"react-icons/ri\";\r\n\r\nconst IconTrash = () => {\r\n  return <RiDeleteBin6Line className=\"text-light-emphasis  fs-2 ms-auto\" />;\r\n};\r\n\r\nexport default IconTrash;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst dataRemainingSeconds = 61;\r\n\r\nconst useAutoLogout = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [secondsRemaining, setSecondsRemaining] =\r\n    useState(dataRemainingSeconds);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      localStorage.removeItem(\"token\");\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\nimport \"./_autoLogout.scss\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n\r\n  if (secondsRemaining + 1 > 60) return null;\r\n\r\n  return (\r\n    <div className=\"fixed-top _d-center p-5 _autoLogout\">\r\n      <div className=\"p-4 bg-white text-center rounded-1 _fs-primary fw-semiBold _anim-dropDown\">\r\n        Wylogowanie nastąpi za\r\n        <div className=\"d-flex mx-auto _w-fitContent\">\r\n          {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport AutoLogout from \"../autoLogout/AutoLogout\";\r\nimport \"./_indexContainer.scss\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  return (\r\n    <main className=\"d-flex m-0  bg-secondary _indexContainer \">\r\n      <aside className=\"_indexContainer__aside\"></aside>\r\n\r\n      <div className=\"_indexContainer__rightSide bg-secondary\">\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport \"./_inputError.scss\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\n\r\nconst InputError = (props: Props) => {\r\n\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-5 ps-2 _inputError\">\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputError;\r\n","import { useContext, useState } from \"react\";\r\nimport \"./_inputsCover.scss\";\r\nimport { LabelContext } from \"../InputsText\";\r\n\r\nconst InputsCover = () => {\r\n  const [isPrinted, setPrinted] = useState(true);\r\n  const { labelCover } = useContext(LabelContext);\r\n\r\n  const handleDelete = () => {\r\n    setPrinted(false);\r\n  };\r\n\r\n  if (!isPrinted) return null;\r\n\r\n  return (\r\n    <div\r\n      onClick={handleDelete}\r\n      className=\"_inputsCover w-100 p-2  bg-secondary-light _fs-primary text-light-emphasis  _radius border\"\r\n    >\r\n      {labelCover}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputsCover;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport InputsCover from \"./labelCover/InputsCover\";\r\nimport { useContext } from \"react\";\r\nimport { LabelContext } from \"./InputsText\";\r\n\r\n\r\nconst InputsTextLabel = () => {\r\n  const { value } = useContext(LabelContext);\r\n\r\n  return (\r\n    <Form.Label htmlFor={value} className=\"position-absolute w-100\">\r\n      <InputsCover />\r\n    </Form.Label>\r\n  );\r\n};\r\n\r\nexport default InputsTextLabel;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport InputError from \"../inputError/InputError\";\r\nimport InputsTextLabel from \"./InputsTextLabel\";\r\nimport \"./_inputsText.scss\";\r\nimport { createContext } from \"react\";\r\n\r\ntype ContextType = {\r\n  value: string;\r\n  labelCover?: string;\r\n};\r\n\r\nexport const LabelContext = createContext<ContextType>({} as ContextType);\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    labelCover?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n    styles?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({\r\n          value,\r\n          labelCover,\r\n          type,\r\n          isErrorPrint,\r\n          min,\r\n          max,\r\n          placeholder,\r\n          styles,\r\n        }) => {\r\n          return (\r\n            <Form.Group key={value} className=\" mt-2 position-relative\">\r\n              <LabelContext.Provider value={{ value, labelCover }}>\r\n                {labelCover && <InputsTextLabel />}\r\n              </LabelContext.Provider>\r\n\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                autoComplete=\"new-password\"\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className={`text-light-emphasis bg-secondary-light _radius w-100 _cursor-pointer _fs-primary\r\n                   ${type === \"color\" ? \"_inputsColor p-0\" : \"py-2\"} ${styles}\r\n                    ${value === \"userName\" && \"text-capitalize\" }\r\n                `}\r\n              />\r\n\r\n              {isErrorPrint && (\r\n                <InputError value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { dataStylesListItem } from \"./stylesListContainer\";\r\n\r\ntype Props = {\r\n  styles?: string;\r\n};\r\n\r\nconst ListItemNoData = (props: Props) => {\r\n  \r\n  \r\n  return (\r\n    <ListGroup.Item\r\n      className={`${dataStylesListItem} ${props.styles} text-danger`}\r\n    >\r\n      Brak danych\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nexport default ListItemNoData;\r\n","\r\n\r\nexport const dataStylesListItem =\r\n  \"p-0 mb-3 ps-2 pe-0 py-2 _fs-primary _radius\";\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger fs-1 text-center\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"primary\" className=\"fs-5\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { useState } from \"react\";\r\nimport Alert from \"../components/alert/Alert\";\r\n\r\n\r\nconst useAlertDelete = (action: any, header: string) => {\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = () => {\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const alert = (\r\n    <Alert\r\n      action={action}\r\n      isPrinted={isAlertPrinted}\r\n      setIsPrinted={setIsAlertPrinted}\r\n      header={header}\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleAlert,\r\n    alert,\r\n  };\r\n};\r\n\r\nexport default useAlertDelete;\r\n","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst useBtnContent = (isLoading: boolean, btn: JSX.Element) => {\r\n  let btnContent: JSX.Element = btn;\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"primary\"\r\n        className=\"text-dark\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useBtnContent;\r\n","import { ReactNode } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport ListItemNoData from \"./ListItemNoData\";\r\n\r\ntype Props = {\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  const noData = !props.listContent || props.listContent?.length === 0;\r\n\r\n\r\n  return (\r\n    <ListGroup>\r\n      {noData && <ListItemNoData/>}\r\n      {props.children}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useMonthDate = (idx: number) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const monthDate = listMonths && listMonths[idx];\r\n\r\n  return { monthDate };\r\n};\r\n\r\nexport default useMonthDate;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUpdateMonthError } from \"../../../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useDeleteMonthMutation } from \"../../../../services/apiSliceMonths\";\r\n\r\nconst useDeleteMonthAsync = (monthIdx: string) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n\r\n  const deleteMonthAsync = async () => {\r\n      await deleteMonth(monthIdx);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    dispatch(getUpdateMonthError(success.isError));\r\n  }, [success.isError]);\r\n\r\n  return { deleteMonthAsync, success };\r\n};\r\n\r\nexport default useDeleteMonthAsync;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useBtnContent from \"../../../../hooks/useBtnContent\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport useAlertDelete from \"../../../../hooks/useAlertDelete\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport useDeleteMonthAsync from \"./useDeleteMonthAsync\";\r\nimport IconTrash from \"../../../../components/icons/IconTrash\";\r\nimport { useContext } from \"react\";\r\nimport { MonthItemContext } from \"../ListMonths\";\r\n\r\nconst ButtonDeleteMonth = () => {\r\n  const {monthIdx, id} = useContext(MonthItemContext);\r\n  const { deleteMonthAsync, success } = useDeleteMonthAsync(id);\r\n  const { btnContent } = useBtnContent(success.isLoading, <IconTrash />);\r\n  const { monthDate } = useMonthDate(monthIdx);\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const { handleAlert, alert } = useAlertDelete(\r\n    deleteMonthAsync,\r\n    \"Usunąć miesiąc?\"\r\n  );\r\n\r\n\r\n  const print = listMonths && monthDate === listMonths[monthIdx];\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={handleAlert}\r\n        className=\"py-0 _d-center ms-auto bg-transparent border-0\"\r\n      >\r\n        {print ? btnContent : <IconTrash />}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteMonth;\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\n\r\nconst IconArrowLeft = () => {\r\n  return <ImArrowLeft className=\"text-light-emphasis  me-1\" />;\r\n};\r\n\r\nexport default IconArrowLeft;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MonthItemContext } from \"../ListMonths\";\r\nimport IconArrowLeft from \"./IconArrowLeft\";\r\nimport \"./_monthTitle.scss\";\r\n\r\nconst MonthTitle = () => {\r\n  const { monthLabel, year, month } = useContext(MonthItemContext);\r\n\r\n  const monthLink = month < 10 ? \"0\" + month : month;\r\n\r\n\r\n  return (\r\n    <div className=\"_monthTitle _fs-primary\">\r\n      <Link\r\n        to={`/${year}-${monthLink}`}\r\n        className=\"text-decoration-none _fw-regular text-dark _align-center\"\r\n      >\r\n        <IconArrowLeft />\r\n        <div className=\"_text-noWrap\">{monthLabel}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCalcHoursQuery } from \"../../services/apiSliceMonths\";\r\nimport {\r\n  getCalcHours,\r\n  getCalcHoursError,\r\n  getCalcHoursIsLoading,\r\n} from \"../../redux/storeFeatures/calcHoursSlice\";\r\n\r\nconst useReduxCalcHours = (yearValue: string, monthValue: string) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    data: calcHours,\r\n    isLoading,\r\n    error,\r\n  } = useCalcHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getCalcHours(calcHours));\r\n    dispatch(getCalcHoursError(error));\r\n    dispatch(getCalcHoursIsLoading(isLoading));\r\n  }, [calcHours, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxCalcHours;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./_inputsRange..scss\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst maxiHoursDivided = 3.2;\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / maxiHoursDivided;\r\n  const gradientBackground: string = `linear-gradient(to right,  rgb(110, 110, 110)${gradientValue}%, rgb(239, 239, 239) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range _inputsRange medium position-relative\"\r\n              style={{\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\n\r\nconst FormHoursError = () => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { calcHours } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n  let content = \"\";\r\n\r\n  if (calcHours) {\r\n    if (\r\n      calcHours?.submittedHours + calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        calcHours?.submittedHours + calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-5\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import { useSelector } from \"react-redux\";\r\nimport InputsText from \"../../../../../components/inputs/inputsText/InputsText\";\r\nimport { RootState } from \"../../../../../redux/store\";\r\nimport \"./_formHoursTop.scss\";\r\n\r\nconst dataInputsText = [\r\n  {\r\n    value: \"allHours\",\r\n    type: \"number\",\r\n    isErrorPrint: false,\r\n    styles: \"ps-1 pt-0 pb-0 pl-0 fs-4 mt-0 _fw-semiBold\",\r\n    min: \"0\",\r\n    max: \"320\",\r\n  },\r\n];\r\n\r\nconst FormHoursTop = () => {\r\n  const { calcHours } = useSelector((state: RootState) => state.calcHours);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"_d-between align-items-center fs-4 mb-3 position-relative\">\r\n        <div className=\"\">0 h </div>\r\n        <div className=\"_formHoursTop__summary\">\r\n          Zapisane: {calcHours?.allHours} h\r\n        </div>\r\n        <div className=\"d-flex align-items-center ms-sm-4 _formHoursTop__input\">\r\n          <InputsText inputsData={dataInputsText} /> &nbsp;\r\n          <div className=\"align-self-center mt-2\">h</div>\r\n        </div>\r\n        <div>320 h</div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { usePatchAllHoursMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { useContext } from \"react\";\r\nimport { MonthItemContext } from \"../ListMonths\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = () => {\r\n  const [patchAllHours, success] = usePatchAllHoursMutation();\r\n  const { calcHours } = useSelector((state: RootState) => state.calcHours);\r\n\r\n  const { id } = useContext(MonthItemContext);\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (!calcHours) return;\r\n    const { acceptedHours, submittedHours } = calcHours;\r\n\r\n    if (calcHours) {\r\n      if (submittedHours + acceptedHours > +values?.allHours) return;\r\n    }\r\n\r\n    const currentHours =\r\n      calcHours.submittedHours === 0 && calcHours.acceptedHours === 0\r\n        ? values.allHours\r\n        : values.allHours - calcHours.submittedHours - calcHours.acceptedHours;\r\n\r\n\r\n    await patchAllHours({\r\n      id,\r\n      body: {\r\n        allHours: values.allHours,\r\n        currentHours,\r\n      },\r\n    });\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport ButtonForm from \"../../../../components/buttonForm/ButtonForm\";\r\nimport InputsRange from \"../../../../components/inputs/inputsRange/InputsRange\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./formHoursTop/FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\n\r\nconst FormHoursContext = () => {\r\n\r\n  const { initialValues, onSubmit, success } = useFormikHours();\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop />\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n        <div className=\"_d-between align-items-center mt-2 \">\r\n          <div className=\"mt-2\">\r\n            <FormHoursError />\r\n          </div>\r\n          <ButtonForm isLoading={success.isLoading} />\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","import \"./_utilsRequestContainer.scss\";\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div className=\"_d-center fs-6 _requestContainer\">{contentJSX}</div>\r\n);\r\n","import { useContext } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RequestError from \"../../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../../components/requestStates/RequestLoading\";\r\nimport useReduxCalcHours from \"../../../../hooks/updateReduxDatabase/useReduxCalcHours\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { MonthItemContext } from \"../ListMonths\";\r\nimport FormHoursContext from \"./FormHoursContext\";\r\nimport { requestContainer } from \"./utilsRequestContainer.scss/utilsRequestContainer\";\r\n\r\nconst FormHoursContainer = () => {\r\n  const { year, month} = useContext(MonthItemContext);\r\n\r\n  useReduxCalcHours(year.toString(), month.toString());\r\n\r\n  const { calcHoursIsLoading, calcHoursError } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n\r\n  let content;\r\n\r\n  if (calcHoursIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (calcHoursError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <FormHoursContext />;\r\n  }\r\n\r\n  return <> {content} </>;\r\n\r\n};\r\n\r\nexport default FormHoursContainer;\r\n","import Collapse from \"react-bootstrap/Collapse\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport FormHoursContainer from \"../formHours/FormHoursContainer\";\r\nimport { useContext } from \"react\";\r\nimport { MonthItemContext } from \"../ListMonths\";\r\n\r\nconst CollapseContent = () => {\r\n  const { openCollapseIndex } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const monthIdx = useContext(MonthItemContext);\r\n\r\n  const isOpen = monthIdx.monthIdx === openCollapseIndex;\r\n\r\n  return (\r\n    <Collapse in={isOpen}>\r\n      <div className=\"pe-1\">\r\n        {isOpen ? (\r\n          <FormHoursContainer />\r\n        ) : (\r\n          <div style={{ height: \"88px\" }}></div>\r\n        )}\r\n      </div>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default CollapseContent;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CollapseArrow from \"../../../../components/collapseContainer/collapseArrow/CollapseArrow\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { setCollapseIndex } from \"../../../../redux/storeFeatures/listMonthsSlice\";\r\nimport ButtonDeleteMonth from \"../buttonDeleteMonth/ButtonDeleteMonth\";\r\nimport MonthTitle from \"../monthTitle/MonthTitle\";\r\nimport CollapseContent from \"./CollapseContent\";\r\nimport { useContext } from \"react\";\r\nimport { MonthItemContext } from \"../ListMonths\";\r\n\r\nconst CollapseFormHours = () => {\r\n  const dispatch = useDispatch();\r\n  const { openCollapseIndex } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n  const {monthIdx} = useContext(MonthItemContext);\r\n\r\n  const isOpen = monthIdx === openCollapseIndex;\r\n\r\n  const handleTogle = (idx: number, isOpen: boolean) => {\r\n    dispatch(setCollapseIndex(isOpen ? null : idx));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle />\r\n        <Button\r\n          onClick={() => {\r\n            handleTogle(monthIdx, isOpen);\r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`_radius _text-noWrap _fs-small border-0  ps-2 pe-4 position-relative p-1`}\r\n        >\r\n          Zapisz godziny\r\n          <CollapseArrow isOpen={isOpen} />\r\n        </Button>\r\n        <ButtonDeleteMonth />\r\n      </div>\r\n      <CollapseContent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseFormHours;\r\n","export const polishMonths = [\r\n    \"\",\r\n    \"Styczeń\",\r\n    \"Luty\",\r\n    \"Marzec\",\r\n    \"Kwiecień\",\r\n    \"Maj\",\r\n    \"Czerwiec\",\r\n    \"Lipiec\",\r\n    \"Sierpień\",\r\n    \"Wrzesień\",\r\n    \"Październik\",\r\n    \"Listopad\",\r\n    \"Grudzień\",\r\n  ];","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport CollapseFormHours from \"./collapseFormHours/CollapseFormHours\";\r\nimport { dataStylesListItem } from \"../../../components/listContainer/stylesListContainer\";\r\nimport { createContext } from \"react\";\r\nimport { useAllMonthsQuery } from \"../../../services/apiSliceMonths\";\r\nimport { polishMonths } from \"../../../data/dataPolishMonths\";\r\n\r\ntype ContextType = {\r\n  monthIdx: number;\r\n  monthLabel: string;\r\n  year: number;\r\n  month: number;\r\n  id: string;\r\n};\r\nexport const MonthItemContext = createContext<ContextType>({} as ContextType);\r\n\r\nconst ListMonths = () => {\r\n  const { data: months } = useAllMonthsQuery();\r\n\r\n  const transformedMonths = months?.map(({ _id, year, month }) => {\r\n    const monthNumber = parseInt(month, 10);\r\n    return {\r\n      _id,\r\n      monthLabel: `${polishMonths[monthNumber]} ${year}`,\r\n      year,\r\n      month: monthNumber,\r\n    };\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {transformedMonths?.map((month, monthIdx) => (\r\n        <ListGroup.Item key={month._id} className={dataStylesListItem}>\r\n          <MonthItemContext.Provider\r\n            value={{\r\n              monthIdx,\r\n              monthLabel: month.monthLabel,\r\n              year: month.year,\r\n              month: month.month,\r\n              id: month._id,\r\n            }}\r\n          >\r\n            <CollapseFormHours />\r\n          </MonthItemContext.Provider>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import {\r\n  useDeleteUserMutation,\r\n  useUsersQuery,\r\n} from \"../../../../services/apiSliceUsers\";\r\nimport { ModelUser } from \"../../../../sharedModels/modelUser\";\r\n\r\nconst useDeleteUserAsync = (userName: string) => {\r\n  const { data: listUsers } = useUsersQuery();\r\n\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (!userName || !listUsers) return;\r\n\r\n    const userToDelete = listUsers.find(\r\n      (user: ModelUser) => user.userName === userName\r\n    );\r\n\r\n    if (userToDelete) await deleteUser(userToDelete._id);\r\n  };\r\n\r\n  return { deleteUserAsync, success };\r\n};\r\n\r\nexport default useDeleteUserAsync;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport IconTrash from \"../../../../components/icons/IconTrash\";\r\nimport useAlertDelete from \"../../../../hooks/useAlertDelete\";\r\nimport useBtnContent from \"../../../../hooks/useBtnContent\";\r\nimport { ModelUser } from \"../../../../sharedModels/modelUser\";\r\nimport useDeleteUserAsync from \"./useDeleteUserAsync\";\r\n\r\ntype Props = {\r\n  user: ModelUser;\r\n};\r\n\r\nconst ButtonDeleteUser = (props: Props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const { deleteUserAsync, success } = useDeleteUserAsync(userName);\r\n  const { alert, handleAlert } = useAlertDelete(\r\n    deleteUserAsync,\r\n    `Usunąć użytkownika ?`\r\n  );\r\n  \r\n  const { btnContent } = useBtnContent(success.isLoading, <IconTrash />);\r\n\r\n  const getUserName = (name: string) => setUserName(name);\r\n\r\n  const print = userName === props.user.userName;\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        onClick={() => {\r\n          getUserName(props.user?.userName);\r\n          handleAlert();\r\n        }}\r\n        disabled={success.isLoading}\r\n        className=\"py-0 _d-center ms-auto bg-transparent border-0\"\r\n      >\r\n        {print ? btnContent : <IconTrash />}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteUser;\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport { dataStylesListItem } from \"../../../components/listContainer/stylesListContainer\";\r\nimport { useUsersQuery } from \"../../../services/apiSliceUsers\";\r\nimport ButtonDeleteUser from \"./buttonDeleteUser/ButtonDeleteUser\";\r\n\r\nconst ListUsers = () => {\r\n  const { data: listUsers } = useUsersQuery();\r\n\r\n  return (\r\n    <>\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={`${dataStylesListItem} d-flex _overflow-hidden position-relative`}\r\n            style={{\r\n              color: user.userColor,\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"10px\",\r\n                height: \"100%\",\r\n                backgroundColor: `${user.userColor}`,\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n              }}\r\n            ></div>\r\n            <div className=\"ms-2\">{user.userName}</div>\r\n            <ButtonDeleteUser user={user} />\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import { memo } from \"react\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n};\r\n\r\nconst HeaderList = memo((props: Props) => {\r\n  const headerCounter = !props.listContent ? 0 : props.listContent?.length;\r\n\r\n  return (\r\n    <h3 className=\"fs-2 py-4 text-center _fw-regular\">\r\n      {props.header}: {headerCounter}\r\n    </h3>\r\n  );\r\n});\r\n\r\nexport default HeaderList;\r\n","import { useSelector } from \"react-redux\";\r\nimport BorderInline from \"../../../components/BorderInline\";\r\nimport ListContainer from \"../../../components/listContainer/ListContainer\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useUsersQuery } from \"../../../services/apiSliceUsers\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\nimport ListUsers from \"../listUsers/ListUsers\";\r\nimport \"./_settingsContent.scss\";\r\n\r\n\r\nimport HeaderList from \"../../../components/HeaderList\";\r\nimport { useAllMonthsQuery } from \"../../../services/apiSliceMonths\";\r\n\r\nconst SettingsContent = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const { data: months } = useAllMonthsQuery();\r\n\r\n  const { data: listUsers } = useUsersQuery();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"_settingsContent pb-4\">\r\n        <BorderInline />\r\n        <HeaderList header={\"Zapisane miesiące\"} listContent={listMonths} />\r\n        <ListContainer listContent={months}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <HeaderList header={\"Zapisani użytkownicy\"} listContent={listUsers} />\r\n        <ListContainer listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingsContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/indexContainer/IndexContainer\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useUsersQuery } from \"../../../services/apiSliceUsers\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\nimport SettingsContent from \"../settingsContent/SettingsContent\";\r\n\r\nconst IndexSettings = () => {\r\n  const { error: listUsersError, isLoading: listUsersIsLoading } =\r\n    useUsersQuery();\r\n\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const { updateMonthError } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n\r\n  let content;\r\n\r\n  if (listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (updateMonthError || listMonthsError || listUsersError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <SettingsContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top _d-center fs-4 _requestContainer\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_jsx","className","props","Button","id","onClick","action","children","_jsxs","_Fragment","memo","dispatch","useDispatch","isPrinted","e","_e$target","includes","target","setIsPrinted","printAlert","header","ButtonAlertDelete","ButtonAlertAccept","buttonText","text","btnContent","useBtnContent","isLoading","type","variant","disabled","concat","styles","MdOutlineKeyboardArrowDown","isOpen","RiDeleteBin6Line","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","localStorage","removeItem","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","AutoLogout","touched","value","errors","setPrinted","labelCover","useContext","LabelContext","Form","Label","htmlFor","InputsCover","createContext","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","_ref","isErrorPrint","min","placeholder","Group","Provider","InputsTextLabel","Control","name","onChange","onBlur","autoComplete","size","InputError","ListGroup","Item","dataStylesListItem","Spinner","animation","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","btn","_props$listContent","noData","listContent","length","ListItemNoData","idx","listMonths","useSelector","state","monthDate","monthIdx","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","success","deleteMonthAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","getUpdateMonthError","isError","_useContext","MonthItemContext","_useDeleteMonthAsync","useDeleteMonthAsync","IconTrash","useMonthDate","_useAlertDelete","useAlertDelete","print","ImArrowLeft","monthLabel","year","month","monthLink","Link","to","IconArrowLeft","yearValue","monthValue","_useCalcHoursQuery","useCalcHoursQuery","calcHours","data","error","getCalcHours","getCalcHoursError","getCalcHoursIsLoading","gradientValue","allHours","gradientBackground","inputsValues","Range","style","background","content","submittedHours","acceptedHours","dataInputsText","InputsText","_usePatchAllHoursMuta","usePatchAllHoursMutation","_usePatchAllHoursMuta2","patchAllHours","onSubmit","currentHours","abrupt","body","_x","initialValues","_useFormikHours","useFormikHours","Formik","FormHoursTop","InputsRange","FormHoursError","ButtonForm","requestContainer","contentJSX","useReduxCalcHours","toString","_useSelector","calcHoursIsLoading","calcHoursError","RequestLoading","RequestError","FormHoursContext","openCollapseIndex","Collapse","in","FormHoursContainer","height","MonthTitle","setCollapseIndex","handleTogle","CollapseArrow","ButtonDeleteMonth","CollapseContent","polishMonths","months","useAllMonthsQuery","transformedMonths","_id","monthNumber","parseInt","CollapseFormHours","userName","listUsers","useUsersQuery","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","deleteUserAsync","userToDelete","find","user","setUserName","_useDeleteUserAsync","useDeleteUserAsync","_props$user","color","userColor","width","backgroundColor","position","top","left","ButtonDeleteUser","headerCounter","BorderInline","HeaderList","ListContainer","ListMonths","ListUsers","_useUsersQuery","listUsersError","listUsersIsLoading","listMonthsError","updateMonthError","monthPanel","SettingsContent","IndexContainer","zIndex"],"sourceRoot":""}