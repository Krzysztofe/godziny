{"version":3,"file":"static/js/454.7a939e44.chunk.js","mappings":"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","sources":["components/sidebar/SidebarLogout.tsx","components/sidebar/SidebarList.tsx","components/sidebar/sidebarDayForm/useDataSidebarSelects.tsx","components/sidebar/sidebarDayForm/validationSidebarDayFormik.tsx","components/sidebar/sidebarDayForm/useSidebarDayFormik.tsx","components/sidebar/sidebarDayForm/SidebarDayForm.tsx","pages/monthPanel/monthPanelHeader/formHeaderMonthPanel/useMonthPanelHeaderFormik.tsx","components/sidebar/SidebarHoursForm.tsx","components/sidebar/sidebarHoursForm/SidebarHoursFormCollapse.tsx","components/sidebar/sidebarMonthForm/dataSidebarMonthForm.tsx","components/sidebar/sidebarMonthForm/useValidationSidebarMonthForm.tsx","components/sidebar/sidebarMonthForm/useSidebarMonthFormik.tsx","components/sidebar/sidebarMonthForm/SidebarMonthForm.tsx","components/sidebar/sidebarMonthFormCollapse/SidebarMonthFormColapse.tsx","components/sidebar/useReduxDatabase.tsx","components/sidebar/IndexSidebar.tsx","data/dataCurrentDates.tsx","data/firebaseConfig.tsx","hooks/useHTTPState.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx","pages/monthPanel/monthPanelHeader/MonthPanelHeaderSummary.tsx","utils/alertHelpers.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\nimport { alert } from \"../../utils/alertHelpers\";\r\nimport { RiLogoutBoxLine } from \"react-icons/ri\";\r\n\r\nconst SidebarLogout = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const logout = () => {\r\n    setIsLoading(true);\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch(error => alert(error))\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  let btnContent = (\r\n    <div className=\"d-flex align-center  d-flex align-items-center text-start w-100\">\r\n      <RiLogoutBoxLine className=\"fs-6 me-1 \" />\r\n      Wyloguj\r\n    </div>\r\n  );\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        className=\"mx-auto\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      onClick={logout}\r\n      className=\"fs-6 fw-medium text-info p-0 bg-transparent border-0 w-50\"\r\n      style={{\r\n        cursor: \"pointer\",\r\n        fontSize: \"0.8rem\",\r\n      }}\r\n      disabled={isLoading}\r\n    >\r\n      {btnContent}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SidebarLogout;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { AiTwotoneSetting } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SidebarLogout from \"./SidebarLogout\";\r\n\r\nconst SidebarList = () => {\r\n  const styles = \"bg-transparent border-0 p-0 ps-2\";\r\n\r\n  return (\r\n    <ListGroup className=\"mt-auto fw-medium mb-3\">\r\n      <ListGroup.Item className={styles}>\r\n        <Link to=\"/ustawienia\" className=\"text-info text-decoration-none\">\r\n          <AiTwotoneSetting /> Ustawienia\r\n        </Link>\r\n      </ListGroup.Item>\r\n      <ListGroup.Item className={styles}>\r\n        <SidebarLogout />\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default SidebarList;\r\n","import { useUsersQuery } from \"../../../services/apiSliceUsers\";\r\nimport { ModelUser } from \"../../../pages/settings/settingsUserForm/useSettingsUserFormik\";\r\n\r\nconst useDataSidebarSelects = () => {\r\n  const { data: dataUsers } = useUsersQuery();\r\n\r\n  const users = dataUsers ? dataUsers : [];\r\n\r\n  const names = users?.map(({ userName }: ModelUser) => {\r\n    return userName;\r\n  });\r\n\r\n  const dataSelects = [\r\n    {\r\n      name: \"userName\",\r\n      firstOption: `${names.length === 0 ? \"Ustawienia\" : \"Imię\"}`,\r\n      labelText: \"Podaj imię\",\r\n      options: names,\r\n    },\r\n    {\r\n      name: \"hours\",\r\n      firstOption: \"Godziny\",\r\n      labelText: \"Podaj liczbę godzin\",\r\n      options: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n    },\r\n\r\n    {\r\n      name: \"place\",\r\n      firstOption: \"Lokalizacja\",\r\n      labelText: \"Podaj lokalizację\",\r\n      options: [\"Wewnątrz\", \"Poza\"],\r\n    },\r\n  ];\r\n\r\n  return { dataSelects };\r\n};\r\nexport default useDataSidebarSelects;\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n  userName: yup\r\n    .string()\r\n    .test(\"is-name-valid\", \"Imię wymagane\", value => value !== \"Imię\")\r\n    .required(\"Imię wymagane\"),\r\n  hours: yup\r\n    .string()\r\n    .test(\r\n      \"is-hours-valid\",\r\n      \"Liczba godzin wymagana\",\r\n      value => value !== \"Liczba godzin\"\r\n    )\r\n    .required(\"Liczba godzin wymagana\"),\r\n  place: yup\r\n    .string()\r\n    .test(\r\n      \"is-place-valid\",\r\n      \"Lokalizacja wymagana\",\r\n      value => value !== \"Lokalizacja\"\r\n    )\r\n    .required(\"Lokalizacja wymagana\"),\r\n});\r\n","import { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateInNext14Days } from \"../../../data/dataCurrentDates\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { ModelUser } from \"../../../pages/settings/settingsUserForm/useSettingsUserFormik\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  useAddDayMutation\r\n} from \"../../../services/apiSliceMonths\";\r\nimport { validationSchema } from \"./validationSidebarDayFormik\";\r\n\r\ninterface ModelDay {\r\n  id: string;\r\n  date: string;\r\n  hours: string;\r\n  userName: string;\r\n  place: string;\r\n  userColor: string;\r\n}\r\n\r\nconst useSidebarDayFormik = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const { users } = useSelector((state: RootState) => state.users);\r\n  const [addDay, success] = useAddDayMutation();\r\n  const firstColumn = month && month?.columns?.[0];\r\n\r\n  const formik = useFormik<ModelDay>({\r\n    initialValues: {\r\n      id: \"\",\r\n      date: dateInNext14Days,\r\n      hours: \"\",\r\n      userName: \"Imię\",\r\n      place: \"\",\r\n      userColor: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      if (\r\n        month?.calc?.currentHours - +values.hours < 0 ||\r\n        month?.calc?.currentHours === 0\r\n      )\r\n        return;\r\n\r\n      const userColor = users?.find((user: ModelUser) => {\r\n        return user.userName === values.userName;\r\n      })?.userColor;\r\n\r\n      const valuesToDatabase = {\r\n        ...values,\r\n        id: crypto.randomUUID(),\r\n        hours: +values.hours,\r\n        userColor: userColor || \"\",\r\n      };\r\n\r\n      await addDay({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        firstColumnBody: {\r\n          ...firstColumn,\r\n          days: firstColumn?.days\r\n            ? [...firstColumn.days, valuesToDatabase]\r\n            : [valuesToDatabase],\r\n        },\r\n      });\r\n\r\n    },\r\n  });\r\n\r\n  return { formik, success };\r\n};\r\n\r\nexport default useSidebarDayFormik;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  dateInNext14Days,\r\n  dateInNext60Days,\r\n} from \"../../../data/dataCurrentDates\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_dayForm.scss\";\r\nimport useDataSidebarSelects from \"./useDataSidebarSelects\";\r\nimport useSidebarDayFormik from \"./useSidebarDayFormik\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\n\r\nconst SidebarDayForm = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const { dataSelects } = useDataSidebarSelects();\r\n  const { formik, success } = useSidebarDayFormik();\r\n  const { btnContent } = useHTTPState(success, \"Dodaj dzień\");\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  const allHours = month?.calc?.allHours;\r\n  const currentHours = month?.calc?.currentHours;\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={formik.handleSubmit}\r\n      className={`mt-2 ${!month || !isMonthInURL ? \"d-none\" : \"\"} ${\r\n        allHours === 0 ? \"formContainer\" : \"\"\r\n      }`}\r\n    >\r\n      {dataSelects.map(({ name, firstOption, labelText, options }) => {\r\n        return (\r\n          <Form.Group key={labelText}>\r\n            <Form.Label htmlFor={name} className=\"mb-0 fs-6 fw-medium\">\r\n              {labelText}\r\n            </Form.Label>\r\n\r\n            <Form.Select\r\n              id={name}\r\n              name={name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"sm\"\r\n              className={`p-0 px-1 border border-primary shadow-sm text-capitalize ${\r\n                firstOption === \"Ustawienia\" ? \"text-danger\" : \"\"\r\n              }`}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <option>{firstOption}</option>\r\n\r\n              {options?.map((option: string | number) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Select>\r\n\r\n            <div\r\n              className=\"text-danger d-block mt-0 fs-8\"\r\n              style={{ height: \"0.7rem\" }}\r\n            >\r\n              {formik.touched[name as keyof typeof formik.touched] &&\r\n                formik.errors[name as keyof typeof formik.touched] &&\r\n                formik.errors[name as keyof typeof formik.touched]}\r\n            </div>\r\n          </Form.Group>\r\n        );\r\n      })}\r\n\r\n      <Form.Group>\r\n        <Form.Label htmlFor=\"date\" className=\"mb-0 fs-6 fw-medium\">\r\n          Podaj dzień\r\n        </Form.Label>\r\n        <Form.Control\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={formik.values.date}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          min={dateInNext14Days}\r\n          max={dateInNext60Days}\r\n          placeholder=\"Liczba\"\r\n          size=\"sm\"\r\n          className=\"p-0 px-1 border border-primary shadow-sm\"\r\n          style={{ minHeight: 0, cursor: \"pointer\" }}\r\n        />\r\n        <div\r\n          className=\"text-danger d-block mt-0 fs-8\"\r\n          style={{ height: \"0.7rem\" }}\r\n        >\r\n          {formik.touched.date && formik.errors.date && formik.errors.date}\r\n        </div>\r\n      </Form.Group>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        disabled={success.isLoading}\r\n        className=\"fw-medium w-100 mt-2 bg-info text-white\"\r\n      >\r\n        {btnContent}\r\n      </Button>\r\n\r\n      <div\r\n        className=\"text-danger d-block mt-0 fs-8\"\r\n        style={{ height: \"0.7rem\" }}\r\n      >\r\n        {currentHours - +formik.values.hours < 0 || currentHours === 0\r\n          ? \"Brak dostępnych godzin\"\r\n          : \"\"}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SidebarDayForm;\r\n","import { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useURLValues from \"../../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { useAddAllHoursMutation } from \"../../../../services/apiSliceMonths\";\r\n\r\ninterface ModelFormValues {\r\n  allHours: number;\r\n}\r\n\r\nconst useMonthPanelHeaderFormik = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n\r\n  const submittedHours = month?.calc?.submittedHours;\r\n  const acceptedHours = month?.calc?.acceptedHours;\r\n\r\n  const formik = useFormik<ModelFormValues>({\r\n    initialValues: { allHours: 0 },\r\n\r\n    onSubmit: async values => {\r\n      if (submittedHours + acceptedHours > +formik.values.allHours) return;\r\n\r\n      await addAllHours({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        allHours: +values.allHours,\r\n      });\r\n    },\r\n  });\r\n\r\n  return { formik, success };\r\n};\r\n\r\nexport default useMonthPanelHeaderFormik;\r\n","import React from \"react\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport useMonthPanelHeaderFormik from \"../../pages/monthPanel/monthPanelHeader/formHeaderMonthPanel/useMonthPanelHeaderFormik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst SidebarHoursForm = () => {\r\n  const { formik, success } = useMonthPanelHeaderFormik();\r\n  const { btnContent } = useHTTPState(success, \"Dodaj godziny\");\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n\r\n  const submittedHours = month?.calc.submittedHours;\r\n  const acceptedHours = month?.calc.acceptedHours;\r\n\r\n  const gradientValue = formik.values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} className=\"\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <Form.Control\r\n          type=\"number\"\r\n          name=\"allHours\"\r\n          min={0}\r\n          max={320}\r\n          value={formik.values.allHours}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          placeholder=\"Liczba\"\r\n          size=\"sm\"\r\n          className=\"p-0 px-1 my-2 border border-primary shadow-sm\"\r\n          style={{ minHeight: 0, cursor: \"pointer\", width: \"fit-content\" }}\r\n        />\r\n        <div className=\"fw-medium\"> &nbsp; h</div>\r\n      </div>\r\n\r\n      <Form.Group className=\"mt-2 d-flex align-items-center w-100\">\r\n        <Form.Range\r\n          name=\"allHours\"\r\n          min={0}\r\n          max={320}\r\n          value={formik.values.allHours}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          className=\"form-range custom-range medium\"\r\n          style={{\r\n            height: 10,\r\n            background: gradientBackground,\r\n          }}\r\n        />\r\n      </Form.Group>\r\n\r\n      <div className=\"d-flex justify-content-between\">\r\n        <div className=\"fw-medium\">0 h</div>\r\n\r\n        <div className=\"text-danger  mt-auto fs-8\">\r\n          {submittedHours + acceptedHours > +formik.values.allHours\r\n            ? `Min. ${submittedHours + acceptedHours} h`\r\n            : \"\"}\r\n        </div>\r\n        <div className=\"fw-medium\">320 h</div>\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"info\"\r\n        size=\"sm\"\r\n        className=\"fw-medium w-100\"\r\n        disabled={success.isLoading}\r\n      >\r\n        {btnContent}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SidebarHoursForm;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport SidebarHoursForm from \"../SidebarHoursForm\";\r\n\r\n\r\nconst SidebarHoursFormCollapse = () => {\r\n\r\n const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline-info\"\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n        className=\"fw-medium w-100 mt-2 \"\r\n        // className={`fw-medium w-100 mt-1 d-flex justify-content-center align-items-center bg-primary border-0 p-1 ${\r\n        //   open ? \"rounded-bottom-0\" : \"\"\r\n        // }`}\r\n      >\r\n        Godziny\r\n        <MdOutlineKeyboardArrowDown\r\n          className=\"fs-5 fw-medium\"\r\n          style={{\r\n            transform: `${open ? \"rotate(180deg)\" : \"\"} `,\r\n            transitionDuration: \"320ms\",\r\n          }}\r\n        />\r\n      </Button>\r\n      <Collapse in={open}>\r\n        <div className=\"bg-white p-0\">\r\n          <SidebarHoursForm />\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarHoursFormCollapse;\r\n","export interface ModelDay {\r\n  id: string;\r\n  userName: string;\r\n  userColor: string;\r\n  date: string;\r\n  hours: number;\r\n  place: string;\r\n}\r\n\r\nexport interface ModelColumn {\r\n  id: string;\r\n  days: ModelDay[];\r\n}\r\n\r\nexport interface ModelCalc {\r\n  allHours: number;\r\n  currentHours: number;\r\n  submittedHours: number;\r\n  acceptedHours: number;\r\n  rejectedHours: number;\r\n}\r\n\r\nexport interface ModelMonthPattern {\r\n  id: string;\r\n  columns: ModelColumn[];\r\n  calc: ModelCalc;\r\n}\r\n\r\nexport interface ModelMonthsPatern {\r\n  [key: string]: {\r\n    [key: string]: ModelMonthPattern\r\n  };\r\n}\r\n\r\nconst columns: ModelColumn[] = [\r\n  { id: \"submitted\", days: [] },\r\n  { id: \"accepted\", days: [] },\r\n  { id: \"rejected\", days: [] },\r\n];\r\n\r\nconst calc: ModelCalc = {\r\n  allHours: 0,\r\n  currentHours: 0,\r\n  submittedHours: 0,\r\n  acceptedHours: 0,\r\n  rejectedHours: 0,\r\n};\r\n\r\nexport const monthPattern: ModelMonthPattern = {\r\n  id: \"\",\r\n  columns,\r\n  calc,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useValidationSidebarMonthForm = () => {\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n\r\n  const validationSchema = yup.object({\r\n    monthDate: yup\r\n      .string()\r\n      .test(\r\n        \"is-in-database\",\r\n        \"Miesiąc zapisany\",\r\n        value => value !== undefined && !infoMonths?.includes(value)\r\n      ),\r\n  });\r\n\r\n  return { validationSchema };\r\n};\r\n\r\nexport default useValidationSidebarMonthForm;\r\n","import { useFormik } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  currMonthDigits,\r\n  currYearDigits,\r\n} from \"../../../data/dataCurrentDates\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  useDeleteMonthMutation,\r\n  useUpdateMonthInfoMutation,\r\n  useUpdateMonthMutation\r\n} from \"../../../services/apiSliceMonths\";\r\nimport { alert } from \"../../../utils/alertHelpers\";\r\nimport { ModelMonthPattern, monthPattern } from \"./dataSidebarMonthForm\";\r\nimport useValidationSidebarMonthForm from \"./useValidationSidebarMonthForm\";\r\ninterface ModelFormValues {\r\n  monthDate: string;\r\n}\r\n\r\nconst useSidebarMonthFormik = () => {\r\n  const navigate = useNavigate();\r\n  const [updateMonth, success] = useUpdateMonthMutation()\r\n  const [updateMonthInfo] = useUpdateMonthInfoMutation();\r\n  const [deleteMonth] = useDeleteMonthMutation();\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n  const { validationSchema } = useValidationSidebarMonthForm();\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const formik = useFormik<ModelFormValues>({\r\n    initialValues: { monthDate: `${currYearDigits}-${currMonthDigits}` },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async values => {\r\n      const year = values.monthDate.slice(0, 4);\r\n      const month = values.monthDate.slice(-2);\r\n      const monthBody: ModelMonthPattern = {\r\n        ...monthPattern,\r\n        id: values.monthDate,\r\n      };\r\n\r\n      await updateMonth({ year, month, monthBody });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (success.isSuccess) {\r\n      setIsSuccess(true);\r\n    } else setIsSuccess(false);\r\n  }, [success.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    const executeAddMonthInfo = async () => {\r\n      if (isSuccess) {\r\n        const year = formik.values.monthDate.slice(0, 4);\r\n        const month = formik.values.monthDate.slice(-2);\r\n        const months = infoMonths ? infoMonths : [];\r\n        await updateMonthInfo([...months, `${year}-${month}`]);\r\n        navigate(`/${formik.values.monthDate}`);\r\n      } else if (success.isError) {\r\n        const year = formik.values.monthDate.slice(0, 4);\r\n        const month = formik.values.monthDate.slice(-2);\r\n        await deleteMonth({ year, month });\r\n        alert(\"\");\r\n      }\r\n    };\r\n\r\n    executeAddMonthInfo();\r\n  }, [isSuccess, updateMonthInfo]);\r\n\r\n  return { formik, success };\r\n};\r\n\r\nexport default useSidebarMonthFormik;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {\r\n  currMonthDigits,\r\n  currYearDigits,\r\n} from \"../../../data/dataCurrentDates\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport useSidebarMonthFormik from \"./useSidebarMonthFormik\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\nconst SidebarMonthForm = () => {\r\n  const { formik, success } = useSidebarMonthFormik();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle className=\"text-info\" style={{ fontSize: \"1.4rem\" }} />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formik.handleSubmit} className=\"mt-1\">\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"monthDate\" className=\"mb-0 fs-6 fw-medium\">\r\n            Podaj miesiąc\r\n          </Form.Label>\r\n          <div className=\"d-flex\">\r\n            <Form.Control\r\n              id=\"monthDate\"\r\n              type=\"month\"\r\n              name=\"monthDate\"\r\n              min={`${currYearDigits}-${currMonthDigits}`}\r\n              max=\"2025-12\"\r\n              value={formik.values.monthDate}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"sm\"\r\n              className=\"p-0 px-1 d-block border border-primary shadow-sm text-capitalize\"\r\n              style={{ minHeight: 0, height: \"fit-content\", cursor: \"pointer\" }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={success.isLoading}\r\n              className=\"col-2 d-flex justify-content-center align-items-center m-0 justify-content-center p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n            >\r\n              {btnContent}\r\n            </Button>\r\n          </div>\r\n        </Form.Group>\r\n        <Form.Text\r\n          className=\"text-danger d-block mt-0 lh-0\"\r\n          style={{ fontSize: \"0.6rem\", height: \"0.7rem\" }}\r\n        >\r\n          {formik.touched.monthDate &&\r\n            formik.errors.monthDate &&\r\n            formik.errors.monthDate}\r\n        </Form.Text>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarMonthForm;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport SidebarMonthForm from \"../sidebarMonthForm/SidebarMonthForm\";\r\n\r\n\r\nconst SidebarMonthFormColapse = () => {\r\n const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline-info\"\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n        className=\"fw-medium w-100 mt-2 \"\r\n        // className={`fw-medium w-100 mt-1 d-flex justify-content-center align-items-center bg-primary border-0 p-1 ${\r\n        //   open ? \"rounded-bottom-0\" : \"\"\r\n        // }`}\r\n      >\r\n        Miesiąc\r\n        <MdOutlineKeyboardArrowDown\r\n          className=\"fs-4 fw-medium\"\r\n          style={{\r\n            transform: `${open ? \"rotate(180deg)\" : \"\"} `,\r\n            transitionDuration: \"320ms\",\r\n          }}\r\n        />\r\n      </Button>\r\n      <Collapse in={open}>\r\n        <div className=\"bg-white p-0\">\r\n          <SidebarMonthForm />\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarMonthFormColapse;\r\n","import { useDispatch } from \"react-redux\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport {\r\n  useMonthDataQuery,\r\n  useMonthsInfoQuery,\r\n} from \"../../services/apiSliceMonths\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthsPanelSlice\";\r\nimport { useUsersQuery } from \"../../services/apiSliceUsers\";\r\nimport {\r\n  getUsers,\r\n  getUsersError,\r\n  getUsersIsLoading,\r\n} from \"../../redux/storeFeatures/usersSlice\";\r\nimport {\r\n  getInfoMonths,\r\n  getInfoMonthError,\r\n  getInfoMonthIsLoading,\r\n} from \"../../redux/storeFeatures/infoMonthsSlice\";\r\n\r\nconst useReduxDatabase = () => {\r\n  const dispatch = useDispatch();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n  const {\r\n    data: dataUsers,\r\n    error: errorUsers,\r\n    isLoading: isLoadingUsers,\r\n  } = useUsersQuery();\r\n  const {\r\n    data: dataInfoMonths,\r\n    error: errorInfoMonths,\r\n    isLoading: isLoadingInfoMonths,\r\n  } = useMonthsInfoQuery();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMonth(data));\r\n    dispatch(getMonthError(error));\r\n    dispatch(getMonthIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(dataUsers));\r\n    dispatch(getUsersError(errorUsers));\r\n    dispatch(getUsersIsLoading(isLoadingUsers));\r\n  }, [dataUsers, errorUsers, isLoadingUsers, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getInfoMonths(dataInfoMonths));\r\n    dispatch(getInfoMonthError(errorInfoMonths));\r\n    dispatch(getInfoMonthIsLoading(isLoadingInfoMonths));\r\n  }, [dataInfoMonths, errorInfoMonths, isLoadingInfoMonths, dispatch]);\r\n\r\n  return {};\r\n};\r\n\r\nexport default useReduxDatabase;\r\n","import \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useMonthURLToString from \"../../hooks/useMonthURLToString\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\";\r\nimport MonthPanelHeaderSummary from \"../../pages/monthPanel/monthPanelHeader/MonthPanelHeaderSummary\";\r\nimport \"./../../scss/utilsClasses/_bgImage.scss\";\r\nimport SidebarList from \"./SidebarList\";\r\nimport SidebarDayForm from \"./sidebarDayForm/SidebarDayForm\";\r\nimport SidebarHoursFormCollapse from \"./sidebarHoursForm/SidebarHoursFormCollapse\";\r\nimport SidebarMonthFormColapse from \"./sidebarMonthFormCollapse/SidebarMonthFormColapse\";\r\nimport useReduxDatabase from \"./useReduxDatabase\";\r\n\r\nconst IndexSidebar = () => {\r\n  useReduxDatabase();\r\n  const { isMonthInURL } = useURLValues();\r\n  const { pathname } = useLocation();\r\n  const [show, setShow] = useState(false);\r\n  const { windowWidth } = useWindowWidth();\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const toggleShow = () => setShow(s => !s);\r\n\r\n  useEffect(() => {\r\n    windowWidth > 575 && setShow(true);\r\n  }, [windowWidth]);\r\n\r\n  let offCanvasWidth = \"100%\";\r\n  if (windowWidth >= 576) {\r\n    offCanvasWidth = \"200px\";\r\n  }\r\n  if (windowWidth >= 768) {\r\n    offCanvasWidth = \"230px\";\r\n  }\r\n  if (windowWidth >= 992) {\r\n    offCanvasWidth = \"250px\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {![\"/\"].includes(pathname) ? (\r\n        <aside>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={toggleShow}\r\n            className={`rounded-0 p-0 fw-medium ${\r\n              windowWidth > 575 ? \"d-none\" : \"d-block\"\r\n            }`}\r\n            style={{\r\n              position: \"absolute\",\r\n              height: \"2.5rem\",\r\n              width: \"100%\",\r\n              right: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n           Menu\r\n          </Button>\r\n\r\n          <Offcanvas\r\n            show={show}\r\n            onHide={handleClose}\r\n            name=\"Disable backdrop\"\r\n            scroll={true}\r\n            backdrop={false}\r\n            className={`${windowWidth < 576 && \"backgroundImage\"} ${\r\n              windowWidth < 576 && \"border-0\"\r\n            } p-1 border-white`}\r\n            style={{\r\n              width: offCanvasWidth,\r\n              backgroundColor:\"rgba(255, 255, 255, 0.6)\",\r\n            }}\r\n          >\r\n            {windowWidth < 576 && (\r\n              <Offcanvas.Header closeButton className=\"w-100\">\r\n                <div className=\"text-capitalize fw-medium\">\r\n                  {monthURLStringFormat}\r\n                </div>\r\n              </Offcanvas.Header>\r\n            )}\r\n            {isMonthInURL && (\r\n              <Offcanvas.Body className=\"flex-grow-0 p-2 bg-white rounded\">\r\n                <SidebarMonthFormColapse />\r\n                <SidebarHoursFormCollapse />\r\n                {windowWidth < 576 ? (\r\n                  <Row className=\"w-100 fw-medium \">\r\n                    <MonthPanelHeaderSummary />\r\n                  </Row>\r\n                ) : null}\r\n\r\n                <SidebarDayForm />\r\n              </Offcanvas.Body>\r\n            )}\r\n            <SidebarList />\r\n          </Offcanvas>\r\n        </aside>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexSidebar;\r\n","const today = new Date();\r\n\r\nconst formatDate = (date: Date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst futureDateInNext14Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\r\nconst futureDateInNext60Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\r\n\r\nexport const currYearDigits = today.getFullYear();\r\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\r\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\r\nexport const currDateDigits = formatDate(today);\r\n\r\nexport const dateInNext14Days = formatDate(futureDateInNext14Days);\r\nexport const dateInNext60Days = formatDate(futureDateInNext60Days);\r\n\r\n\r\n\r\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  timeZone: \"UTC\",\r\n}).format(today);\r\n","\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase, ref, get } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAvvdzLRow-8AdA5zJH6uv19MOsPLNwC3A\",\r\n  authDomain: \"godziny-3b30f.firebaseapp.com\",\r\n  projectId: \"godziny-3b30f\",\r\n  storageBucket: \"godziny-3b30f.appspot.com\",\r\n  messagingSenderId: \"367174950216\",\r\n  appId: \"1:367174950216:web:0bd1ea3c1c77b5e797677d\",\r\n};\r\n\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app); \r\nexport const database = getDatabase(app);\r\n","import Swal from \"sweetalert2\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface ModelSuccess {\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  error?: any;\r\n}\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  useEffect(() => {\r\n    if (success.isError) {\r\n      const error = success.error;\r\n      const errMsg = error && \"status\" in error && error.status && error.status;\r\n\r\n      Swal.fire({\r\n        text: `Błąd: ${errMsg || \"\"}`,\r\n        confirmButtonColor: \"rgb(31, 180, 255)\",\r\n      });\r\n    }\r\n  }, [success.isError]);\r\n\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(1);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return {monthURLStringFormat};\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return {monthURLStringFormat};\r\n  }\r\n\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import { useSelector } from \"react-redux\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport SidebarMonthCollapse from \"../MonthPanelMonthsCollapse\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst MonthHoursSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  const styles = \"col-4 col-xxl-3 p-0\";\r\n\r\n  return (\r\n    <>\r\n      <Col className={`${styles} text-end`}>Wszystkie</Col>\r\n      <Col className=\"col-4 col-md-2 col-xxl-1 p-0 text-center\">\r\n        {month?.calc?.allHours} -{\" \"}\r\n        <span\r\n          className={`${month?.calc?.currentHours <= 0 ? \"text-danger\" : \"\"}`}\r\n        >\r\n          {month?.calc?.currentHours}\r\n        </span>\r\n      </Col>\r\n      <Col\r\n        className={`${styles} ${\r\n          month?.calc?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n        }`}\r\n      >\r\n        {month?.calc?.currentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthHoursSummary;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const alertHelper = (message: string) => {\r\n  return {\r\n    title: message,\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Tak\",\r\n    cancelButtonText: \"Nie\",\r\n  };\r\n};\r\n\r\nexport const alert = (error:string) => {\r\n  Swal.fire({\r\n    text: `Błąd ${error}`,\r\n    confirmButtonColor: \"rgb(31, 180, 255)\",\r\n  });\r\n}\r\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","btnContent","_jsxs","className","children","_jsx","RiLogoutBoxLine","Spinner","animation","size","variant","Button","onClick","auth","signOut","then","catch","error","alert","finally","style","cursor","fontSize","disabled","styles","ListGroup","Item","Link","to","AiTwotoneSetting","SidebarLogout","dataUsers","useUsersQuery","data","users","names","map","_ref","userName","dataSelects","name","firstOption","concat","length","labelText","options","validationSchema","yup","test","value","required","hours","place","_month$columns","_useURLValues","useURLValues","yearFromURL","monthFromURL","month","useSelector","state","monthsPanel","_useAddDayMutation","useAddDayMutation","_useAddDayMutation2","addDay","success","firstColumn","columns","formik","useFormik","initialValues","id","date","dateInNext14Days","userColor","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_month$calc","_month$calc2","_users$find","valuesToDatabase","wrap","_context","prev","next","calc","currentHours","abrupt","find","user","_objectSpread","crypto","randomUUID","year","firstColumnBody","days","_toConsumableArray","stop","_x","apply","arguments","useDataSidebarSelects","_useSidebarDayFormik","useSidebarDayFormik","useHTTPState","isMonthInURL","allHours","Form","handleSubmit","Group","Label","htmlFor","Select","onChange","handleChange","onBlur","handleBlur","option","height","touched","errors","Control","type","min","max","dateInNext60Days","placeholder","minHeight","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","submittedHours","acceptedHours","_useMonthPanelHeaderF","useMonthPanelHeaderFormik","gradientValue","gradientBackground","width","Range","background","open","setOpen","_Fragment","MdOutlineKeyboardArrowDown","transform","transitionDuration","Collapse","in","SidebarHoursForm","monthPattern","rejectedHours","infoMonths","monthDate","undefined","includes","_useUpdateMonthMutati","useUpdateMonthMutation","_useUpdateMonthMutati2","updateMonth","_useUpdateMonthInfoMu","useUpdateMonthInfoMutation","updateMonthInfo","_useDeleteMonthMutati","useDeleteMonthMutation","deleteMonth","useValidationSidebarMonthForm","isSuccess","setIsSuccess","currYearDigits","currMonthDigits","monthBody","slice","useEffect","executeAddMonthInfo","_callee2","months","_year","_month","_context2","isError","_useSidebarMonthFormi","useSidebarMonthFormik","AiOutlinePlusCircle","Text","SidebarMonthForm","dispatch","useDispatch","_useMonthDataQuery","useMonthDataQuery","_useUsersQuery","errorUsers","isLoadingUsers","_useMonthsInfoQuery","useMonthsInfoQuery","dataInfoMonths","errorInfoMonths","isLoadingInfoMonths","getMonth","getMonthError","getMonthIsLoading","getUsers","getUsersError","getUsersIsLoading","getInfoMonths","getInfoMonthError","getInfoMonthIsLoading","useReduxDatabase","pathname","useLocation","show","setShow","windowWidth","useWindowWidth","monthURLStringFormat","useMonthURLToString","offCanvasWidth","s","position","right","bottom","Offcanvas","onHide","scroll","backdrop","backgroundColor","Header","closeButton","Body","SidebarMonthFormColapse","SidebarHoursFormCollapse","Row","MonthPanelHeaderSummary","SidebarDayForm","SidebarList","today","Date","formatDate","getFullYear","String","padStart","day","getDate","futureDateInNext14Days","getTime","futureDateInNext60Days","currMonthDateToString","Intl","DateTimeFormat","timeZone","format","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getDatabase","btnText","errMsg","status","Swal","text","confirmButtonColor","monthURL","_Intl$DateTimeFormat","monthURLToDateFormat","split","window","innerWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","_month$calc3","_month$calc4","_month$calc5","Col","alertHelper","message","title","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText"],"sourceRoot":""}