{"version":3,"file":"static/js/198.b0f20a2e.chunk.js","mappings":"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","sources":["components/BorderInline.tsx","components/alert/buttonsAlert/ButtonAlertAccept.tsx","components/alert/buttonsAlert/ButtonAlertDelete.tsx","components/alert/Alert.tsx","components/buttonForm/ButtonForm.tsx","components/collapseContainer/collapseArrow/CollapseArrow.tsx","components/icons/IconTrash.tsx","components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/indexContainer/IndexContainer.tsx","components/inputs/inputError/InputError.tsx","components/inputs/inputsText/labelCover/InputsCover.tsx","components/inputs/inputsText/InputsTextLabel.tsx","components/inputs/inputsText/InputsText.tsx","components/listContainer/ListItemNoData.tsx","components/listContainer/stylesListContainer.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useBtnContent.tsx","hooks/useMonthDates.tsx","components/listContainer/ListContainer.tsx","pages/settings/listMonths/useMonthDate.tsx","pages/settings/listMonths/buttonDeleteMonth/useDeleteMonthAsync.tsx","pages/settings/listMonths/buttonDeleteMonth/ButtonDeleteMonth.tsx","pages/settings/listMonths/monthTitle/IconArrowLeft.tsx","pages/settings/listMonths/monthTitle/MonthTitle.tsx","hooks/updateReduxDatabase/useReduxCalcHours.tsx","components/inputs/inputsRange/InputsRange.tsx","pages/settings/listMonths/formHours/FormHoursError.tsx","pages/settings/listMonths/formHours/formHoursTop/FormHoursTop.tsx","pages/settings/listMonths/formHours/useFormikHours.tsx","pages/settings/listMonths/formHours/FormHoursContext.tsx","pages/settings/listMonths/formHours/utilsRequestContainer.scss/utilsRequestContainer.tsx","pages/settings/listMonths/formHours/FormHoursContainer.tsx","pages/settings/listMonths/collapseFormHours/CollapseContent.tsx","pages/settings/listMonths/collapseFormHours/CollapseFormHours.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/listUsers/buttonDeleteUser/useDeleteUserAsync.tsx","pages/settings/listUsers/buttonDeleteUser/ButtonDeleteUser.tsx","pages/settings/listUsers/ListUsers.tsx","components/HeaderList.tsx","pages/settings/settingsContent/SettingsContent.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/utilsCapitalizeFirstLetter.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["const BorderInline = () => {\n  return <div className=\"border d-md-none\"></div>;\n};\nexport default BorderInline;","import Button from \"react-bootstrap/Button\";\ntype Props = {\n  action: () => void;\n};\nconst ButtonAlertAccept = (props: Props) => {\n  return <Button id=\"noButton\" className=\"_radius bg-primary border-0 px-5 ms-4\" onClick={props.action}>\r\n      Ok\r\n    </Button>;\n};\nexport default ButtonAlertAccept;","import Button from \"react-bootstrap/Button\";\ntype Props = {\n  action: () => void;\n};\nconst ButtonAlertDelete = (props: Props) => {\n  return <>\r\n      <Button id=\"noButton\" className=\"_radius bg-dark border-0 px-4 px-sm-5\">\r\n        Nie\r\n      </Button>\r\n      <Button onClick={props.action} className=\"_radius bg-primary border-0 px-4 px-sm-5 ms-4\">\r\n        Tak\r\n      </Button>\r\n    </>;\n};\nexport default ButtonAlertDelete;","import { printAlert } from \"../../redux/storeFeatures/alertSlice\";\nimport { useDispatch } from \"react-redux\";\nimport \"./_alert.scss\";\nimport ButtonAlertAccept from \"./buttonsAlert/ButtonAlertAccept\";\nimport ButtonAlertDelete from \"./buttonsAlert/ButtonAlertDelete\";\nimport { memo, useEffect } from \"react\";\ntype Props = {\n  action: () => void;\n  isPrinted: boolean;\n  header: string;\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\n};\nconst Alert = memo((props: Props) => {\n  const dispatch = useDispatch();\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)) return;\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\n    dispatch(printAlert(\"\"));\n  };\n  if (!props.isPrinted) return null;\n  return <>\r\n      <div id=\"opacityContainer\" className=\"fixed-top _d-center _alert\" onClick={handleClose}>\r\n        <div className={`p-5 bg-white _radius text-center fs-2 fw-medium _anim-dropDown`}>\r\n          {props.header}\r\n          <div className=\"_w-fitContent m-auto mt-4\">\r\n            {props.header.includes(\"Usunąć\") ? <ButtonAlertDelete action={props.action} /> : <ButtonAlertAccept action={props.action} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>;\n});\nexport default Alert;","import Button from \"react-bootstrap/Button\";\nimport \"./_buttonForm.scss\";\nimport useBtnContent from \"../../hooks/useBtnContent\";\nimport \"./_buttonForm.scss\";\nimport { memo } from \"react\";\ntype Props = {\n  isLoading: boolean;\n  text?: string;\n  styles?: string;\n};\nconst ButtonForm = memo((props: Props) => {\n  const buttonText = props.text ? <div>{props.text}</div> : <div>Zapisz</div>;\n  const {\n    btnContent\n  } = useBtnContent(props?.isLoading, buttonText);\n  return <Button type=\"submit\" variant=\"primary\" disabled={props?.isLoading} className={`_d-center w-50 p-0 py-1 mt-2 ms-auto _radius  _fw-semiBold _fs-primary _buttonForm position-relative ${props.styles}`}>\r\n      <div className=\"invisible\">Z</div>\r\n      <div className=\"_buttonForm__content _d-center\">{btnContent}</div>\r\n    </Button>;\n});\nexport default ButtonForm;","import { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport \"./_collapseArrow.scss\";\ntype Props = {\n  isOpen: boolean;\n};\nconst CollapseArrow = (props: Props) => {\n  return <MdOutlineKeyboardArrowDown className={`fs-1 _fw-light _collapseArrow h-100 ${props.isOpen ? \"_collapseArrow--rotate\" : \"\"}`} />;\n};\nexport default CollapseArrow;","import { RiDeleteBin6Line } from \"react-icons/ri\";\nconst IconTrash = () => {\n  return <RiDeleteBin6Line className=\"text-light-emphasis  fs-2 ms-auto\" />;\n};\nexport default IconTrash;","import { useEffect, useState } from \"react\";\nimport FirebaseSingleton from \"../../data/firebaseConfig\";\nconst dataRemainingSeconds = 61;\nconst useAutoLogout = () => {\n  const firebaseInstance = FirebaseSingleton.getInstance();\n  const auth = firebaseInstance.auth;\n  const [secondsRemaining, setSecondsRemaining] = useState(dataRemainingSeconds);\n  let expireTime = 0;\n  const checkInactivity = () => {\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\n    setSecondsRemaining(remaining);\n    if (expireTime < Date.now()) {\n      auth?.signOut();\n    }\n  };\n  const updateExpireTime = () => {\n    expireTime = Date.now() + 5 * 60 * 1000;\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkInactivity();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    updateExpireTime();\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\n    events.map(event => {\n      return document.addEventListener(event, updateExpireTime);\n    });\n    return () => {\n      events.map(event => {\n        return document.addEventListener(event, updateExpireTime);\n      });\n    };\n  }, []);\n  return {\n    secondsRemaining\n  };\n};\nexport default useAutoLogout;","import useAutoLogout from \"./useAutoLogout\";\nimport \"./_autoLogout.scss\";\nconst AutoLogout = () => {\n  const {\n    secondsRemaining\n  } = useAutoLogout();\n  if (secondsRemaining + 1 > 60) return null;\n  return <div className=\"fixed-top _d-center p-5 _autoLogout\">\r\n      <div className=\"p-4 bg-white text-center rounded-1 _fs-primary fw-semiBold _anim-dropDown\">\r\n        Wylogowanie nastąpi za\r\n        <div className=\"d-flex mx-auto _w-fitContent\">\r\n          {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n        </div>\r\n      </div>\r\n    </div>;\n};\nexport default AutoLogout;","import { ReactNode } from \"react\";\nimport AutoLogout from \"../autoLogout/AutoLogout\";\nimport \"./_indexContainer.scss\";\ntype Props = {\n  children: ReactNode;\n};\nconst IndexContainer = (props: Props) => {\n  return <main className=\"d-flex m-0  bg-secondary _indexContainer \">\r\n      <aside className=\"_indexContainer__aside\"></aside>\r\n\r\n      <div className=\"_indexContainer__rightSide bg-secondary\">\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>;\n};\nexport default IndexContainer;","import { FormikTouched, FormikErrors } from \"formik\";\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\nimport \"./_inputError.scss\";\ntype Props = {\n  value: string;\n  errors: FormikErrors<ModelDay>;\n  touched: FormikTouched<ModelDay>;\n};\nconst InputError = (props: Props) => {\n  return <div className=\"text-danger d-block mt-0 fs-5 ps-2 _inputError\">\r\n      {props.touched[(props.value as keyof typeof props.touched)] && props.errors[(props.value as keyof typeof props.touched)] && props.errors[(props.value as keyof typeof props.touched)]}\r\n    </div>;\n};\nexport default InputError;","import { useContext, useState } from \"react\";\nimport \"./_inputsCover.scss\";\nimport { LabelContext } from \"../InputsText\";\nconst InputsCover = () => {\n  const [isPrinted, setPrinted] = useState(true);\n  const {\n    labelCover\n  } = useContext(LabelContext);\n  const handleDelete = () => {\n    setPrinted(false);\n  };\n  if (!isPrinted) return null;\n  return <div onClick={handleDelete} className=\"_inputsCover w-100 p-2  bg-secondary-light _fs-primary text-light-emphasis  _radius border\">\r\n      {labelCover}\r\n    </div>;\n};\nexport default InputsCover;","import Form from \"react-bootstrap/Form\";\nimport InputsCover from \"./labelCover/InputsCover\";\nimport { useContext } from \"react\";\nimport { LabelContext } from \"./InputsText\";\nconst InputsTextLabel = () => {\n  const {\n    labelCover,\n    value\n  } = useContext(LabelContext);\n  if (labelCover === undefined) return null;\n  return <Form.Label htmlFor={value} className=\"position-absolute w-100\">\r\n      <InputsCover />\r\n    </Form.Label>;\n};\nexport default InputsTextLabel;","import { useFormikContext } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\nimport InputError from \"../inputError/InputError\";\nimport InputsTextLabel from \"./InputsTextLabel\";\nimport \"./_inputsText.scss\";\nimport { createContext } from \"react\";\ntype ContextType = {\n  value: string;\n  labelCover?: string;\n};\nexport const LabelContext = createContext<ContextType>(({} as ContextType));\ntype Props = {\n  inputsData: {\n    value: string;\n    type: string;\n    label?: string;\n    labelCover?: string;\n    placeholder?: string;\n    isErrorPrint?: boolean;\n    min?: string;\n    max?: string;\n    styles?: string;\n  }[];\n};\nconst InputsText = (props: Props) => {\n  const {\n    values,\n    handleBlur,\n    setFieldValue,\n    errors,\n    touched\n  } = useFormikContext<ModelDay>();\n  return <>\r\n      {props.inputsData.map(({\n      value,\n      labelCover,\n      type,\n      isErrorPrint,\n      min,\n      max,\n      placeholder,\n      styles\n    }) => {\n      return <Form.Group key={value} className=\" mt-2 position-relative\">\r\n              <LabelContext.Provider value={{\n          value,\n          labelCover\n        }}>\r\n                <InputsTextLabel />\r\n              </LabelContext.Provider>\r\n\r\n              <Form.Control id={value} type={type} name={value} value={values[(value as keyof typeof values)]} onChange={e => setFieldValue(value, e.target.value)} onBlur={handleBlur} autoComplete=\"new-password\" min={min} max={max} placeholder={placeholder} size=\"sm\" className={`text-light-emphasis bg-secondary-light _radius w-100 text-capitalize _cursor-pointer _fs-primary\n                   ${type === \"color\" ? \"_inputsColor p-0\" : \"py-2\"} ${styles}\n                `} />\r\n\r\n              {isErrorPrint && <InputError value={value} errors={errors} touched={touched} />}\r\n            </Form.Group>;\n    })}\r\n    </>;\n};\nexport default InputsText;","import ListGroup from \"react-bootstrap/ListGroup\";\nimport { dataStylesListItem } from \"./stylesListContainer\";\ntype Props = {\n  noData: boolean;\n  styles?: string;\n};\nconst ListItemNoData = (props: Props) => {\n  if (!props.noData) return null;\n  return <ListGroup.Item className={`${dataStylesListItem} ${props.styles} text-danger`}>\r\n      Brak danych\r\n    </ListGroup.Item>;\n};\nexport default ListItemNoData;","export const dataStylesListItem = \"p-0 mb-3 ps-2 pe-0 py-2 _fs-primary _radius\";","type Props = {\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\n};\nconst RequestError = (props: Props) => {\n  return <>\r\n      {props.styles(<div className=\"text-danger fs-1 text-center\">\r\n          Błąd. Odśwież stronę\r\n        </div>)}\r\n    </>;\n};\nexport default RequestError;","import { Spinner } from \"react-bootstrap\";\ntype Props = {\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\n};\nconst RequestLoading = (props: Props) => {\n  return <>\r\n      {props.styles(<Spinner animation=\"border\" variant=\"primary\" className=\"fs-5\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>)}\r\n    </>;\n};\nexport default RequestLoading;","import { useState } from \"react\";\nimport Alert from \"../components/alert/Alert\";\nconst useAlertDelete = (action: any, header: string) => {\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\n  const handleAlert = () => {\n    setIsAlertPrinted(true);\n  };\n  const alert = <Alert action={action} isPrinted={isAlertPrinted} setIsPrinted={setIsAlertPrinted} header={header} />;\n  return {\n    handleAlert,\n    alert\n  };\n};\nexport default useAlertDelete;","import Spinner from \"react-bootstrap/Spinner\";\nconst useBtnContent = (isLoading: boolean, btn: JSX.Element) => {\n  let btnContent: JSX.Element = btn;\n  if (isLoading) {\n    btnContent = <Spinner animation=\"border\" size=\"sm\" variant=\"primary\" className=\"text-dark\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>;\n  }\n  return {\n    btnContent\n  };\n};\nexport default useBtnContent;","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/store\";\nconst useMonthDates = () => {\n  const {\n    listMonths\n  } = useSelector((state: RootState) => state.listMonths);\n  const databaseMonthsDatesToString = listMonths && listMonths?.map((monthDate: string) => {\n    const monthToDateFormat = new Date(monthDate);\n    return new Intl.DateTimeFormat(\"pl-PL\", {\n      year: \"numeric\",\n      month: \"long\",\n      timeZone: \"UTC\"\n    }).format(monthToDateFormat);\n  });\n  return {\n    databaseMonthsDatesToString\n  };\n};\nexport default useMonthDates;","import { ReactNode } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListItemNoData from \"./ListItemNoData\";\ntype Props = {\n  listContent: any[] | undefined | null;\n  children: ReactNode;\n};\nconst ListContainer = (props: Props) => {\n  const noData = !props.listContent || props.listContent?.length === 0;\n  return <ListGroup>\r\n      <ListItemNoData noData={noData} />\r\n      {props.children}\r\n    </ListGroup>;\n};\nexport default ListContainer;","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux/store\";\nconst useMonthDate = (idx: number) => {\n  const {\n    listMonths\n  } = useSelector((state: RootState) => state.listMonths);\n  const monthDate = listMonths && listMonths[idx];\n  return {\n    monthDate\n  };\n};\nexport default useMonthDate;","import useMonthDate from \"../useMonthDate\";\nimport { RootState } from \"../../../../redux/store\";\nimport { useSelector } from \"react-redux\";\nimport { setCollapseIndex } from \"../../../../redux/storeFeatures/listMonthsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { useDeleteMonthMutation } from \"../../../../services/apiSliceMonths\";\nimport { useEffect } from \"react\";\nimport { getUpdateMonthError } from \"../../../../redux/storeFeatures/monthPanelSlice\";\nconst useDeleteMonthAsync = (monthIdx: number) => {\n  const dispatch = useDispatch();\n  const {\n    monthDate\n  } = useMonthDate(monthIdx);\n  const {\n    listMonths\n  } = useSelector((state: RootState) => state.listMonths);\n  const [deleteMonth, success] = useDeleteMonthMutation();\n  const deleteMonthAsync = async () => {\n    if (monthDate && listMonths?.includes(monthDate)) {\n      dispatch(setCollapseIndex(null));\n      const year = monthDate.slice(0, 4);\n      const month = monthDate.slice(-2);\n      await deleteMonth({\n        year: year,\n        month: month\n      });\n    }\n  };\n  useEffect(() => {\n    dispatch(getUpdateMonthError(success.isError));\n  }, [success.isError]);\n  return {\n    deleteMonthAsync,\n    success\n  };\n};\nexport default useDeleteMonthAsync;","import Button from \"react-bootstrap/Button\";\nimport { useSelector } from \"react-redux\";\nimport useBtnContent from \"../../../../hooks/useBtnContent\";\nimport { RootState } from \"../../../../redux/store\";\nimport useAlertDelete from \"../../../../hooks/useAlertDelete\";\nimport useMonthDate from \"../useMonthDate\";\nimport useDeleteMonthAsync from \"./useDeleteMonthAsync\";\nimport IconTrash from \"../../../../components/icons/IconTrash\";\nimport { useContext } from \"react\";\nimport { MonthItemContext } from \"../ListMonths\";\nconst ButtonDeleteMonth = () => {\n  const monthIdx = useContext(MonthItemContext);\n  const {\n    deleteMonthAsync,\n    success\n  } = useDeleteMonthAsync(monthIdx);\n  const {\n    btnContent\n  } = useBtnContent(success.isLoading, <IconTrash />);\n  const {\n    monthDate\n  } = useMonthDate(monthIdx);\n  const {\n    listMonths\n  } = useSelector((state: RootState) => state.listMonths);\n  const {\n    handleAlert,\n    alert\n  } = useAlertDelete(deleteMonthAsync, \"Usunąć miesiąc?\");\n  const print = listMonths && monthDate === listMonths[monthIdx];\n  return <>\r\n      {alert}\r\n      <Button disabled={success.isLoading} onClick={handleAlert} className=\"py-0 _d-center ms-auto bg-transparent border-0\">\r\n        {print ? btnContent : <IconTrash />}\r\n      </Button>\r\n    </>;\n};\nexport default ButtonDeleteMonth;","import { ImArrowLeft } from \"react-icons/im\";\nconst IconArrowLeft = () => {\n  return <ImArrowLeft className=\"text-light-emphasis  me-1\" />;\n};\nexport default IconArrowLeft;","import { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport useMonthDates from \"../../../../hooks/useMonthDates\";\nimport { RootState } from \"../../../../redux/store\";\nimport { capitalizeFirstLetter } from \"../../../../utils/utilsCapitalizeFirstLetter\";\nimport IconArrowLeft from \"./IconArrowLeft\";\nimport \"./_monthTitle.scss\";\nimport { useContext } from \"react\";\nimport { MonthItemContext } from \"../ListMonths\";\nconst MonthTitle = () => {\n  const {\n    listMonths\n  } = useSelector((state: RootState) => state.listMonths);\n  const {\n    databaseMonthsDatesToString\n  } = useMonthDates();\n  const monthIdx = useContext(MonthItemContext);\n  const title = databaseMonthsDatesToString && capitalizeFirstLetter(databaseMonthsDatesToString[monthIdx]);\n  return <div className=\"_monthTitle _fs-primary\">\r\n      <Link to={`/${listMonths?.[monthIdx]}`} className=\"text-decoration-none _fw-regular text-dark _align-center\">\r\n        <IconArrowLeft />\r\n        <div className=\"_text-noWrap\">{title}</div>\r\n      </Link>\r\n    </div>;\n};\nexport default MonthTitle;","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useCalcHoursQuery } from \"../../services/apiSliceMonths\";\nimport { getCalcHours, getCalcHoursError, getCalcHoursIsLoading } from \"../../redux/storeFeatures/calcHoursSlice\";\nconst useReduxCalcHours = (yearValue: string, monthValue: string) => {\n  const dispatch = useDispatch();\n  const {\n    data: calcHours,\n    isLoading,\n    error\n  } = useCalcHoursQuery({\n    year: yearValue ?? \"\",\n    month: monthValue ?? \"\"\n  });\n  useEffect(() => {\n    dispatch(getCalcHours(calcHours));\n    dispatch(getCalcHoursError(error));\n    dispatch(getCalcHoursIsLoading(isLoading));\n  }, [calcHours, error, isLoading, dispatch]);\n};\nexport default useReduxCalcHours;","import { useFormikContext } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./_inputsRange..scss\";\ntype ModelFormValues = {\n  allHours: number;\n};\ntype Props = {\n  inputsValues: string[];\n};\nconst maxiHoursDivided = 3.2;\nconst InputsRange = (props: Props) => {\n  const {\n    values,\n    handleBlur,\n    setFieldValue\n  } = useFormikContext<ModelFormValues>();\n  const gradientValue = values.allHours / maxiHoursDivided;\n  const gradientBackground: string = `linear-gradient(to right,  rgb(110, 110, 110)${gradientValue}%, rgb(239, 239, 239) ${gradientValue}%)`;\n  return <>\r\n      {props.inputsValues.map(value => {\n      return <Form.Group key={value} className=\"mt-2 d-flex align-items-center w-100\">\r\n            <Form.Range name={value} min={0} max={320} value={values[(value as keyof typeof values)]} onChange={e => setFieldValue(value, e.target.value)} onBlur={handleBlur} className=\"form-range _inputsRange medium position-relative\" style={{\n          background: gradientBackground\n        }} />\r\n          </Form.Group>;\n    })}\r\n    </>;\n};\nexport default InputsRange;","import { useFormikContext } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../redux/store\";\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\ntype ModelFormValues = {\n  allHours: number;\n};\nconst FormHoursError = () => {\n  const {\n    values\n  } = useFormikContext<ModelFormValues>();\n  const {\n    calcHours\n  } = useSelector((state: RootState) => state.calcHours);\n  let content = \"\";\n  if (calcHours) {\n    if (calcHours?.submittedHours + calcHours?.acceptedHours > +values?.allHours) {\n      content = `Min. ${calcHours?.submittedHours + calcHours?.acceptedHours} h`;\n    }\n  }\n  return <div className=\"text-danger fs-5\">{content}</div>;\n};\nexport default FormHoursError;","import { useSelector } from \"react-redux\";\nimport InputsText from \"../../../../../components/inputs/inputsText/InputsText\";\nimport { RootState } from \"../../../../../redux/store\";\nimport \"./_formHoursTop.scss\";\nconst dataInputsText = [{\n  value: \"allHours\",\n  type: \"number\",\n  isErrorPrint: false,\n  styles: \"ps-1 pt-0 pb-0 pl-0 fs-4 mt-0 _fw-semiBold\"\n}];\nconst FormHoursTop = () => {\n  const {\n    calcHours\n  } = useSelector((state: RootState) => state.calcHours);\n  return <>\r\n      <div className=\"_d-between align-items-center fs-4 mb-3 position-relative\">\r\n        <div className=\"\">0 h </div>\r\n        <div className=\"_formHoursTop__summary\">\r\n          Zapisane: {calcHours?.allHours} h\r\n        </div>\r\n        <div className=\"d-flex align-items-center ms-sm-4 _formHoursTop__input\">\r\n          <InputsText inputsData={dataInputsText} /> &nbsp;\r\n          <div className=\"align-self-center mt-2\">h</div>\r\n        </div>\r\n        <div>320 h</div>\r\n      </div>\r\n    </>;\n  return null;\n};\nexport default FormHoursTop;","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../redux/store\";\nimport { useAddAllHoursMutation } from \"../../../../services/apiSliceMonths\";\ntype ModelFormValues = {\n  allHours: number;\n};\nconst useFormikHours = (yearValue: string, monthValue: string) => {\n  const [addAllHours, success] = useAddAllHoursMutation();\n  const {\n    calcHours\n  } = useSelector((state: RootState) => state.calcHours);\n  const initialValues = {\n    allHours: 0\n  };\n  const onSubmit = async (values: ModelFormValues) => {\n    if (calcHours) {\n      if (calcHours?.submittedHours + calcHours?.acceptedHours > +values?.allHours) return;\n    }\n    calcHours && values.allHours && yearValue && monthValue && (await addAllHours({\n      year: yearValue,\n      month: monthValue,\n      calcHours: {\n        ...calcHours,\n        allHours: +values.allHours,\n        currentHours: +values.allHours - calcHours.acceptedHours - calcHours.submittedHours\n      }\n    }));\n  };\n  return {\n    initialValues,\n    onSubmit,\n    success\n  };\n};\nexport default useFormikHours;","import { Form, Formik } from \"formik\";\nimport ButtonForm from \"../../../../components/buttonForm/ButtonForm\";\nimport InputsRange from \"../../../../components/inputs/inputsRange/InputsRange\";\nimport useMonthDate from \"../useMonthDate\";\nimport FormHoursError from \"./FormHoursError\";\nimport FormHoursTop from \"./formHoursTop/FormHoursTop\";\nimport useFormikHours from \"./useFormikHours\";\nimport { useContext } from \"react\";\nimport { MonthItemContext } from \"../ListMonths\";\nconst FormHoursContext = () => {\n  const monthIdx = useContext(MonthItemContext);\n  const {\n    monthDate\n  } = useMonthDate(monthIdx);\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\n  const monthValue = monthDate?.slice(5) ?? \"\";\n  const {\n    initialValues,\n    onSubmit,\n    success\n  } = useFormikHours(yearValue, monthValue);\n  return <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop />\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n        <div className=\"_d-between align-items-center mt-2 \">\r\n          <div className=\"mt-2\">\r\n            <FormHoursError />\r\n          </div>\r\n          <ButtonForm isLoading={success.isLoading} />\r\n        </div>\r\n      </Form>\r\n    </Formik>;\n};\nexport default FormHoursContext;","import \"./_utilsRequestContainer.scss\";\nexport const requestContainer = (contentJSX: React.ReactNode) => <div className=\"_d-center fs-6 _requestContainer\">{contentJSX}</div>;","import { useSelector } from \"react-redux\";\nimport RequestError from \"../../../../components/requestStates/RequestError\";\nimport RequestLoading from \"../../../../components/requestStates/RequestLoading\";\nimport useReduxCalcHours from \"../../../../hooks/updateReduxDatabase/useReduxCalcHours\";\nimport { RootState } from \"../../../../redux/store\";\nimport useMonthDate from \"../useMonthDate\";\nimport FormHoursContext from \"./FormHoursContext\";\nimport { requestContainer } from \"./utilsRequestContainer.scss/utilsRequestContainer\";\nimport { useContext } from \"react\";\nimport { MonthItemContext } from \"../ListMonths\";\nconst FormHoursContainer = () => {\n  const monthIdx = useContext(MonthItemContext);\n  const {\n    monthDate\n  } = useMonthDate(monthIdx);\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\n  const monthValue = monthDate?.slice(5) ?? \"\";\n  useReduxCalcHours(yearValue, monthValue);\n  const {\n    calcHoursIsLoading,\n    calcHoursError\n  } = useSelector((state: RootState) => state.calcHours);\n  let content;\n  if (calcHoursIsLoading) {\n    content = <RequestLoading styles={requestContainer} />;\n  } else if (calcHoursError) {\n    content = <RequestError styles={requestContainer} />;\n  } else {\n    content = <FormHoursContext />;\n  }\n  return <> {content} </>;\n};\nexport default FormHoursContainer;","import Collapse from \"react-bootstrap/Collapse\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../redux/store\";\nimport FormHoursContainer from \"../formHours/FormHoursContainer\";\nimport { useContext } from \"react\";\nimport { MonthItemContext } from \"../ListMonths\";\nimport useDatabaseListMonths from \"../../../../services/useDatabaseListMonths\";\nconst CollapseContent = () => {\n  const {\n    openCollapseIndex\n  } = useSelector((state: RootState) => state.listMonths);\n  // const { listMonths } = useDatabaseListMonths();\n\n  const monthIdx = useContext(MonthItemContext);\n  const isOpen = monthIdx === openCollapseIndex;\n  return <Collapse in={isOpen}>\r\n      <div className=\"pe-1\">\r\n        {isOpen ? <FormHoursContainer /> : <div style={{\n        height: \"88px\"\n      }}></div>}\r\n      </div>\r\n    </Collapse>;\n};\nexport default CollapseContent;","import Button from \"react-bootstrap/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CollapseArrow from \"../../../../components/collapseContainer/collapseArrow/CollapseArrow\";\nimport { RootState } from \"../../../../redux/store\";\nimport { setCollapseIndex } from \"../../../../redux/storeFeatures/listMonthsSlice\";\nimport ButtonDeleteMonth from \"../buttonDeleteMonth/ButtonDeleteMonth\";\nimport MonthTitle from \"../monthTitle/MonthTitle\";\nimport CollapseContent from \"./CollapseContent\";\nimport { useContext } from \"react\";\nimport { MonthItemContext } from \"../ListMonths\";\nconst CollapseFormHours = () => {\n  const dispatch = useDispatch();\n  const {\n    openCollapseIndex\n  } = useSelector((state: RootState) => state.listMonths);\n  const monthIdx = useContext(MonthItemContext);\n  const isOpen = monthIdx === openCollapseIndex;\n  const handleTogle = (idx: number, isOpen: boolean) => {\n    dispatch(setCollapseIndex(isOpen ? null : idx));\n  };\n  return <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle />\r\n        <Button onClick={() => {\n        handleTogle(monthIdx, isOpen);\n      }} aria-expanded={isOpen} aria-controls=\"example-collapse-text\" size=\"sm\" className={`_radius _text-noWrap _fs-small border-0  ps-2 pe-4 position-relative p-1`}>\r\n          Zapisz godziny\r\n          <CollapseArrow isOpen={isOpen} />\r\n        </Button>\r\n        <ButtonDeleteMonth />\r\n      </div>\r\n      <CollapseContent />\r\n    </>;\n};\nexport default CollapseFormHours;","import ListGroup from \"react-bootstrap/ListGroup\";\nimport useMonthDates from \"../../../hooks/useMonthDates\";\nimport CollapseFormHours from \"./collapseFormHours/CollapseFormHours\";\nimport { dataStylesListItem } from \"../../../components/listContainer/stylesListContainer\";\nimport { createContext } from \"react\";\ntype ContextType = number;\nexport const MonthItemContext = createContext<ContextType>(({} as ContextType));\nconst ListMonths = () => {\n  const {\n    databaseMonthsDatesToString\n  } = useMonthDates();\n  return <>\r\n      {databaseMonthsDatesToString?.map((monthDateToString: string, monthIdx: number) => {\n      return <ListGroup.Item key={monthDateToString} className={dataStylesListItem}>\r\n              <MonthItemContext.Provider value={monthIdx}>\r\n                <CollapseFormHours />\r\n              </MonthItemContext.Provider>\r\n            </ListGroup.Item>;\n    })}\r\n    </>;\n};\nexport default ListMonths;","import { useDeleteUserMutation, useUsersQuery } from \"../../../../services/apiSliceUsers\";\nimport { ModelUser } from \"../../../../sharedModels/modelUser\";\nconst useDeleteUserAsync = (userName: string) => {\n  const {\n    data: listUsers\n  } = useUsersQuery();\n  const [deleteUser, success] = useDeleteUserMutation();\n  const deleteUserAsync = async () => {\n    if (userName) {\n      const userBodyPUTRequest = listUsers?.filter((user: ModelUser) => user?.userName !== userName);\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\n    }\n  };\n  return {\n    deleteUserAsync,\n    success\n  };\n};\nexport default useDeleteUserAsync;","import { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport IconTrash from \"../../../../components/icons/IconTrash\";\nimport useAlertDelete from \"../../../../hooks/useAlertDelete\";\nimport useBtnContent from \"../../../../hooks/useBtnContent\";\nimport { ModelUser } from \"../../../../sharedModels/modelUser\";\nimport useDeleteUserAsync from \"./useDeleteUserAsync\";\ntype Props = {\n  user: ModelUser;\n};\nconst ButtonDeleteUser = (props: Props) => {\n  const [userName, setUserName] = useState(\"\");\n  const {\n    deleteUserAsync,\n    success\n  } = useDeleteUserAsync(userName);\n  const {\n    alert,\n    handleAlert\n  } = useAlertDelete(deleteUserAsync, `Usunąć użytkownika ?`);\n  const {\n    btnContent\n  } = useBtnContent(success.isLoading, <IconTrash />);\n  const getUserName = (name: string) => setUserName(name);\n  const print = userName === props.user.userName;\n  return <>\r\n      {alert}\r\n      <Button onClick={() => {\n      getUserName(props.user?.userName);\n      handleAlert();\n    }} disabled={success.isLoading} className=\"py-0 _d-center ms-auto bg-transparent border-0\">\r\n        {print ? btnContent : <IconTrash />}\r\n      </Button>\r\n    </>;\n};\nexport default ButtonDeleteUser;","import { ListGroup } from \"react-bootstrap\";\nimport { dataStylesListItem } from \"../../../components/listContainer/stylesListContainer\";\nimport { useUsersQuery } from \"../../../services/apiSliceUsers\";\nimport ButtonDeleteUser from \"./buttonDeleteUser/ButtonDeleteUser\";\nconst ListUsers = () => {\n  const {\n    data: listUsers\n  } = useUsersQuery();\n  return <>\r\n      {listUsers?.map(user => {\n      return <ListGroup.Item key={user.userName} className={`${dataStylesListItem} d-flex _overflow-hidden position-relative`} style={{\n        color: user.userColor\n      }}>\r\n            <div style={{\n          width: \"10px\",\n          height: \"100%\",\n          backgroundColor: `${user.userColor}`,\n          position: \"absolute\",\n          top: \"0\",\n          left: \"0\"\n        }}></div>\r\n            <div className=\"ms-2\">{user.userName}</div>\r\n            <ButtonDeleteUser user={user} />\r\n          </ListGroup.Item>;\n    })}\r\n    </>;\n};\nexport default ListUsers;","import { memo } from \"react\";\ntype Props = {\n  header: string;\n  listContent: any[] | undefined | null;\n};\nconst HeaderList = memo((props: Props) => {\n  const headerCounter = !props.listContent ? 0 : props.listContent?.length;\n  return <h3 className=\"fs-2 py-4 text-center _fw-regular\">\r\n      {props.header}: {headerCounter}\r\n    </h3>;\n});\nexport default HeaderList;","import { useSelector } from \"react-redux\";\nimport BorderInline from \"../../../components/BorderInline\";\nimport ListContainer from \"../../../components/listContainer/ListContainer\";\nimport { RootState } from \"../../../redux/store\";\nimport { useUsersQuery } from \"../../../services/apiSliceUsers\";\nimport ListMonths from \"../listMonths/ListMonths\";\nimport ListUsers from \"../listUsers/ListUsers\";\nimport \"./_settingsContent.scss\";\nimport HeaderList from \"../../../components/HeaderList\";\nconst SettingsContent = () => {\n  const {\n    listMonths\n  } = useSelector((state: RootState) => state.listMonths);\n  const {\n    data: listUsers\n  } = useUsersQuery();\n  return <>\r\n      <div className=\"_settingsContent pb-4\">\r\n        <BorderInline />\r\n        <HeaderList header={\"Zapisane miesiące\"} listContent={listMonths} />\r\n        <ListContainer listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <HeaderList header={\"Zapisani użytkownicy\"} listContent={listUsers} />\r\n        <ListContainer listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </>;\n};\nexport default SettingsContent;","import { useSelector } from \"react-redux\";\nimport IndexContainer from \"../../../components/indexContainer/IndexContainer\";\nimport RequestError from \"../../../components/requestStates/RequestError\";\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\nimport { RootState } from \"../../../redux/store\";\nimport { useUsersQuery } from \"../../../services/apiSliceUsers\";\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\nimport SettingsContent from \"../settingsContent/SettingsContent\";\nconst IndexSettings = () => {\n  const {\n    error: listUsersError,\n    isLoading: listUsersIsLoading\n  } = useUsersQuery();\n  const {\n    listMonthsError\n  } = useSelector((state: RootState) => state.listMonths);\n  const {\n    updateMonthError\n  } = useSelector((state: RootState) => state.monthPanel);\n  let content;\n  if (listUsersIsLoading) {\n    content = <RequestLoading styles={requestContainer} />;\n  } else if (updateMonthError || listMonthsError || listUsersError) {\n    content = <RequestError styles={requestContainer} />;\n  } else {\n    content = <SettingsContent />;\n  }\n  return <IndexContainer>{content}</IndexContainer>;\n};\nexport default IndexSettings;","export const capitalizeFirstLetter = (inputString: string) => {\n  return inputString.toLowerCase().split(\" \").map(word => {\n    return word?.charAt(0)?.toUpperCase() + word.slice(1);\n  }).join(\" \");\n};","export const requestContainer = (contentJSX: React.ReactNode) => <div className=\"fixed-top _d-center fs-4 _requestContainer\" style={{\n  width: \"100vw\",\n  height: \"100vh\",\n  zIndex: \"1060\",\n  backgroundColor: \"rgba(255,255,255,0.4)\"\n}}>\r\n    {contentJSX}\r\n  </div>;"],"names":["_jsx","className","props","Button","id","onClick","action","children","_jsxs","_Fragment","memo","dispatch","useDispatch","isPrinted","e","_e$target","includes","target","setIsPrinted","printAlert","header","ButtonAlertDelete","ButtonAlertAccept","buttonText","text","btnContent","useBtnContent","isLoading","type","variant","disabled","concat","styles","MdOutlineKeyboardArrowDown","isOpen","RiDeleteBin6Line","auth","FirebaseSingleton","getInstance","_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","AutoLogout","touched","value","errors","setPrinted","labelCover","useContext","LabelContext","_useContext","undefined","Form","Label","htmlFor","InputsCover","createContext","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","_ref","isErrorPrint","min","placeholder","Group","Provider","InputsTextLabel","Control","name","onChange","onBlur","autoComplete","size","InputError","noData","ListGroup","Item","dataStylesListItem","Spinner","animation","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","btn","listMonths","useSelector","state","databaseMonthsDatesToString","monthDate","monthToDateFormat","Intl","DateTimeFormat","year","month","timeZone","format","_props$listContent","listContent","length","ListItemNoData","idx","monthIdx","useMonthDate","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","success","deleteMonthAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","setCollapseIndex","slice","stop","apply","arguments","getUpdateMonthError","isError","MonthItemContext","_useDeleteMonthAsync","useDeleteMonthAsync","IconTrash","_useAlertDelete","useAlertDelete","print","ImArrowLeft","useMonthDates","title","capitalizeFirstLetter","Link","to","IconArrowLeft","yearValue","monthValue","_useCalcHoursQuery","useCalcHoursQuery","calcHours","data","error","getCalcHours","getCalcHoursError","getCalcHoursIsLoading","gradientValue","allHours","gradientBackground","inputsValues","Range","style","background","content","submittedHours","acceptedHours","dataInputsText","InputsText","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","onSubmit","abrupt","t0","_objectSpread","currentHours","_x","initialValues","_monthDate$slice","_monthDate$slice2","_useFormikHours","useFormikHours","Formik","FormHoursTop","InputsRange","FormHoursError","ButtonForm","requestContainer","contentJSX","useReduxCalcHours","_useSelector","calcHoursIsLoading","calcHoursError","RequestLoading","RequestError","FormHoursContext","openCollapseIndex","Collapse","in","FormHoursContainer","height","MonthTitle","handleTogle","CollapseArrow","ButtonDeleteMonth","CollapseContent","monthDateToString","CollapseFormHours","userName","listUsers","useUsersQuery","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","deleteUserAsync","userBodyPUTRequest","filter","user","setUserName","_useDeleteUserAsync","useDeleteUserAsync","_props$user","color","userColor","width","backgroundColor","position","top","left","ButtonDeleteUser","headerCounter","BorderInline","HeaderList","ListContainer","ListMonths","ListUsers","_useUsersQuery","listUsersError","listUsersIsLoading","listMonthsError","updateMonthError","monthPanel","SettingsContent","IndexContainer","inputString","toLowerCase","split","word","_word$charAt","charAt","toUpperCase","join","zIndex"],"sourceRoot":""}