{"version":3,"file":"static/js/804.def10fb9.chunk.js","mappings":"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","sources":["components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/IndexContainer.tsx","components/alert/Alert.tsx","components/inputs/FormErrors.tsx","components/inputs/InputsText.tsx","services/useDatabaseListMonths.tsx","hooks/updateReduxDatabase/useReduxListMonths.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useWindowWidth.tsx","components/ListContainer.tsx","pages/settings/dataStylesSettingsLists.tsx","pages/settings/ListUsers.tsx","components/inputs/inputsRange/InputsRange.tsx","pages/settings/listMonths/formHours/FormHoursError.tsx","pages/settings/listMonths/formHours/FormHoursTop.tsx","pages/settings/listMonths/formHours/useFormikHours.tsx","pages/settings/listMonths/formHours/FormHoursContext.tsx","pages/settings/listMonths/MonthTitle.tsx","pages/settings/listMonths/DeleteButton.tsx","pages/settings/listMonths/CollapseFormHours.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/indexSettings/SettinsContent.tsx","pages/settings/indexSettings/useRequestSettings.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/capitalizeFirstLetter.tsx","utils/printPanelContent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown\">\r\n            Wylogowanie nastąpi za\r\n            <div\r\n             className=\"d-flex mx-auto w-fit-content\"\r\n            >\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\nimport AutoLogout from \"./autoLogout/AutoLogout\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst FormErrors = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-8\" style={{ height: \"0.7rem\" }}>\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormErrors;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({ value, label, type, isErrorPrint, min, max, placeholder }) => {\r\n          return (\r\n            <Form.Group key={value}>\r\n              {label && (\r\n                <Form.Label\r\n                  htmlFor=\"date\"\r\n                  className=\"mb-0 fs-responsive fw-medium\"\r\n                >\r\n                  {label}\r\n                </Form.Label>\r\n              )}\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className={`p-0 border border-primary shadow-sm w-100 text-capitalize ${\r\n                  type === \"color\" ? \"px-0\" : \"px-1\"\r\n                }`}\r\n                style={{ minHeight: 0 }}\r\n              />\r\n              {isErrorPrint && (\r\n                <FormErrors value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","import { onValue, ref } from \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { database } from \"../data/firebaseConfig\";\r\n\r\nconst useDatabaseListMonths = () => {\r\n  const reference = ref(database);\r\n  const [error, setError] = useState(\"\");\r\n  const [databaseListMonths, setDatabaseListMonths] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(\r\n      reference,\r\n      snapshot => {\r\n        let keysYears: string[] = [];\r\n        let monthsCollection: any = [];\r\n\r\n        snapshot?.forEach((firstLevelSnapshot: any) => {\r\n          const firstLevelKey = firstLevelSnapshot.key;\r\n          keysYears.push(firstLevelKey);\r\n\r\n          const nestedKeysRef = ref(database, `${firstLevelKey}`);\r\n          onValue(\r\n            nestedKeysRef,\r\n            nestedSnapshot => {\r\n              let keysMonths: string[] = [];\r\n\r\n              nestedSnapshot?.forEach((nestedKeySnapshot: any) => {\r\n                const nestedKey = nestedKeySnapshot.key;\r\n                keysMonths.push(nestedKey.slice(6));\r\n              });\r\n\r\n              monthsCollection.push(keysMonths);\r\n            },\r\n\r\n            nestedError => {\r\n              setError(\"Błąd. Odśwież stronę\");\r\n            }\r\n          );\r\n        });\r\n\r\n        const months = [...monthsCollection]\r\n          .map((monthsInYear, idx) => {\r\n            return monthsInYear.map((month: any) => {\r\n              return keysYears[idx] + \"-\" + month;\r\n            });\r\n          })\r\n          .flat()\r\n          .reverse();\r\n\r\n        setDatabaseListMonths(months);\r\n      },\r\n      error => {\r\n        setError(\"Błąd. Odśwież stronę\");\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    databaseListMonths,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useDatabaseListMonths;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getListMonths,\r\n  getListMonthsError,\r\n} from \"../../redux/storeFeatures/listMonthsSlice\";\r\nimport useDatabaseListMonths from \"../../services/useDatabaseListMonths\";\r\n\r\nconst useReduxListMonths = () => {\r\n  const dispatch = useDispatch();\r\n  const { databaseListMonths, error } = useDatabaseListMonths();\r\n\r\n  useEffect(() => {\r\n    dispatch(getListMonths(databaseListMonths));\r\n    dispatch(getListMonthsError(error));\r\n  }, [databaseListMonths, dispatch]);\r\n};\r\n\r\nexport default useReduxListMonths;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  let print;\r\n  if (props.listContent?.length === 0 || !props.listContent) {\r\n    print = \"Brak danych\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"h6\">\r\n        {props.header}: {props.listContent?.length}\r\n      </h3>\r\n\r\n      <ListGroup className=\"border-0 p-0\">\r\n        <ListGroup.Item className=\"py-1 px-2 text-warning border-0\">\r\n          {print}\r\n        </ListGroup.Item>\r\n\r\n        {props.children}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","export const dataStylesListGroupItem = \"shadow-sm p-0 mb-2 ps-2 pe-0 rounded-1\";\r\nexport const dataStylesButton =\r\n  \"w-100 d-flex justify-content-between align-items-center px-1 rounded-0 bg-white border-0\";\r\n","import { useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../components/alert/Alert\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useDeleteUserMutation } from \"../../services/apiSliceUsers\";\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\nimport {\r\n  dataStylesButton,\r\n  dataStylesListGroupItem,\r\n} from \"./dataStylesSettingsLists\";\r\n\r\nconst ListUsers = () => {\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (userName: string) => {\r\n    setUserName(userName);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (userName) {\r\n      const userBodyPUTRequest = listUsers?.filter(\r\n        (user: ModelUser) => user?.userName !== userName\r\n      );\r\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\r\n      setIsAlertPrinted(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteUserAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć użytkownika\"}\r\n      />\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={dataStylesListGroupItem}\r\n            style={{\r\n              backgroundColor: user.userColor,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => handleAlert(user.userName)}\r\n              disabled={success.isLoading}\r\n              className={dataStylesButton}\r\n              style={{ color: user.userColor }}\r\n            >\r\n              {user.userName}\r\n\r\n              {userName === user.userName ? (\r\n                btnContent\r\n              ) : (\r\n                <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n              )}\r\n            </Button>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range custom-range medium\"\r\n              style={{\r\n                height: 10,\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props: Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  var content = \"\";\r\n\r\n  if (props.calcHours) {\r\n    if (\r\n      props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-8\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import InputsText from \"../../../../components/inputs/InputsText\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n  isLoading: boolean;\r\n};\r\n\r\nconst FormHoursTop = (props: Props) => {\r\n  const dataInputsText = [\r\n    { value: \"allHours\", type: \"number\", isErrorPrint: false },\r\n  ];\r\n\r\n  let printAllours;\r\n\r\n  if (props.isLoading) {\r\n    printAllours = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else {\r\n    printAllours = props?.calcHours?.allHours;\r\n  }\r\n\r\n  const styles = \"fs-7 d-flex align-items-end\";\r\n  return (\r\n    <div className=\"d-flex justify-content-between fw-medium \">\r\n      <div className={styles}>0 h</div>\r\n      Zapisane: {printAllours} h\r\n      <div className=\"col-6 col-sm-5 d-flex\" style={{ width: \"62px\" }}>\r\n        <InputsText inputsData={dataInputsText} /> &nbsp;\r\n        <div>h</div>\r\n      </div>\r\n      <div className={styles}>320 h</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useAddAllHoursMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (\r\n  calcHours: ModelCalcHours | null | undefined,\r\n  yearValue: string,\r\n  monthValue: string\r\n) => {\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport useHTTPState from \"../../../../hooks/useHTTPState\";\r\nimport InputsRange from \"../../../../components/inputs/inputsRange/InputsRange\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\nimport { useAllHoursQuery } from \"../../../../services/apiSliceMonths\";\r\n\r\ntype Props = {\r\n  monthDate?: string | null;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const yearValue = props.monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = props.monthDate?.slice(5) ?? \"\";\r\n\r\n  const { data: calcHours, isLoading } = useAllHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    calcHours,\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n  console.log(\"\", isLoading);\r\n\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle\r\n      className=\"text-primary\"\r\n      style={{ fontSize: \"1.4rem\" }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop calcHours={calcHours} isLoading={isLoading} />\r\n\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n          <FormHoursError calcHours={calcHours} />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={success.isLoading}\r\n            className=\"col-2 d-flex justify-content-center align-items-center m-0 justify-content-center p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n          >\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalizeFirstLetter } from \"../../../utils/capitalizeFirstLetter\";\r\n\r\ntype Props = {\r\n  title?: string | null;\r\n  idx: number;\r\n};\r\nconst MonthTitle = (props: Props) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const title = props?.title && capitalizeFirstLetter(props?.title)\r\n  \r\n  return (\r\n    <div style={{ width: \"45%\" }}>\r\n      <Link\r\n        to={`/godziny/${listMonths?.[props.idx]}`}\r\n        className=\"text-decoration-none fs-responsive text-dark fw-medium\"\r\n      >\r\n        <ImArrowLeft\r\n          className=\"fs-6 me-1 text-primary\"\r\n        />\r\n        {title}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useDeleteMonthMutation } from \"../../../services/apiSliceMonths\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n  monthDate?: string | null;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst DeleteButton = (props: Props) => {\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (monthDate: string, idx: number) => {\r\n    props.setMonthDate(monthDate);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteMonthAsync = async () => {\r\n    if (props?.monthDate && listMonths?.includes(props.monthDate)) {\r\n      const year = props.monthDate.slice(0, 4);\r\n      const month = props.monthDate.slice(-2);\r\n      await deleteMonth({ year: year, month: month });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteMonthAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć miesiąc\"}\r\n      />\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={() =>\r\n          listMonths && handleAlert(listMonths[props.idx], props.idx)\r\n        }\r\n        className=\"ms-auto bg-transparent border-0 p-1\"\r\n      >\r\n        {listMonths && props.monthDate === listMonths[props.idx] ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { ReactNode, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport MonthTitle from \"./MonthTitle\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\ntype Props = {\r\n  monthDateToString?: string | null;\r\n  monthDate?: string | null;\r\n  children: ReactNode;\r\n  isOpen: boolean;\r\n  setOpenCollapseIndex: React.Dispatch<React.SetStateAction<number | null>>;\r\n  isOpenCollapse: boolean;\r\n  onToggle: () => void;\r\n  idx: number;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst CollapseFormHours = (props: Props) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    props.setOpenCollapseIndex(-1);\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle title={props.monthDateToString} idx = {props.idx}/>\r\n        <Button\r\n          onClick={() => {\r\n            props.onToggle();\r\n            props.isOpen && handleOpen();\r\n      \r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`fw-medium fs-responsive d-flex justify-content-between align-items-center p-0 ps-1`}\r\n          style={{\r\n            transition: \"border-radius 420ms\",\r\n          }}\r\n        >\r\n          Zapisz godziny\r\n          <MdOutlineKeyboardArrowDown\r\n            className=\"fs-3\"\r\n            style={{\r\n              transform: `${props.isOpen ? \"rotate(180deg)\" : \"\"} `,\r\n              transitionDuration: \"320ms\",\r\n            }}\r\n          />\r\n        </Button>\r\n        <DeleteButton\r\n          idx={props.idx}\r\n          monthDate={props.monthDate}\r\n          setMonthDate={props.setMonthDate}\r\n        />\r\n      </div>\r\n      <Collapse in={props.isOpen}>\r\n        <div className=\" pe-1\">\r\n          {props.isOpen ? (\r\n            props.children\r\n          ) : (\r\n            <div style={{ height: \"88px\" }}></div>\r\n          )}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseFormHours;\r\n","import { useState } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormHoursContext from \"./formHours/FormHoursContext\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { dataStylesListGroupItem } from \"../dataStylesSettingsLists\";\r\nimport CollapseFormHours from \"./CollapseFormHours\";\r\n\r\nconst ListMonths = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [openCollapseIndex, setOpenCollapseIndex] = useState<number | null>(\r\n    null\r\n  );\r\n  const [isOpenCollapse, setCollapseOpen] = useState(false);\r\n  const [monthDate, setMonthDate] = useState(\"\");\r\n\r\n  const handleTogle = (monthDate: string, idx: number) => {\r\n    setMonthDate(monthDate);\r\n    setOpenCollapseIndex(idx);\r\n    listMonths &&\r\n      monthDate === listMonths[idx] &&\r\n      setCollapseOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {databaseMonthsDatesToString?.map(\r\n        (monthDateToString: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item\r\n              key={monthDateToString}\r\n              className={dataStylesListGroupItem}\r\n            >\r\n              <CollapseFormHours\r\n                monthDateToString={monthDateToString}\r\n                monthDate={monthDate}\r\n                isOpen={idx === openCollapseIndex}\r\n                setOpenCollapseIndex={setOpenCollapseIndex}\r\n                isOpenCollapse={isOpenCollapse}\r\n                onToggle={() => listMonths && handleTogle(listMonths[idx], idx)}\r\n                idx={idx}\r\n                setMonthDate={setMonthDate}\r\n              >\r\n                <FormHoursContext monthDate={listMonths && listMonths[idx]} />\r\n              </CollapseFormHours>\r\n            </ListGroup.Item>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListContainer from \"../../../components/ListContainer\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport ListUsers from \"../ListUsers\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\n\r\nconst SettinsContent = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-white p-2 py-4 p-sm-4 w-100\"\r\n      style={{\r\n        height: windowWidth >= 500 ? \"calc(100%)\" : \"calc(100% - 2.5rem)\",\r\n        overflow: \"hidden auto\",\r\n        outline: \"4px solid white\",\r\n        scrollbarGutter: \"stable\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: \"480px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ListContainer header={\"Zapisane miesiące\"} listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <div className=\"border my-4\"></div>\r\n\r\n        <ListContainer header={\"Zapisani użytkownicy\"} listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettinsContent;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { printPanelLoadingContent } from \"../../../utils/printPanelContent\";\r\nimport SettinsContent from \"./SettinsContent\";\r\n\r\nconst useRequestSettings = () => {\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let requestState;\r\n\r\n  if (listUsersIsLoading) {\r\n    requestState = printPanelLoadingContent(\r\n      <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (listMonthsError || listUsersError) {\r\n    requestState = printPanelLoadingContent(\r\n      <div className=\"text-danger text-center fs-4 \">Błąd. Odśwież stronę</div>\r\n    );\r\n  } else {\r\n    requestState = <SettinsContent />;\r\n  }\r\n\r\n  return { requestState };\r\n};\r\nexport default useRequestSettings;\r\n","\r\nimport IndexContainer from \"../../../components/IndexContainer\";\r\nimport useReduxListMonths from \"../../../hooks/updateReduxDatabase/useReduxListMonths\";\r\nimport useRequestSettings from \"./useRequestSettings\";\r\n\r\nconst IndexSettings = () => {\r\n  const { requestState } = useRequestSettings();\r\n\r\n\r\n  useReduxListMonths();\r\n\r\n\r\n  return <IndexContainer>{requestState}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const capitalizeFirstLetter = (inputString: string) => {\r\n  return inputString\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n","export const printPanelContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"d-flex justify-content-center align-items-center fs-3 text-warning text-center\"\r\n    style={{\r\n      maxWidth: \"1000px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n\r\nexport const printPanelLoadingContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top d-flex justify-content-center align-items-center\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","_jsx","children","id","className","style","height","zIndex","backgroundColor","_jsxs","props","windowWidth","useWindowWidth","overflow","position","width","maxWidth","AutoLogout","dispatch","useDispatch","_Fragment","isPrinted","onClick","e","_e$target","_e$target2","target","setIsPrinted","printAlert","handleClose","header","includes","Button","action","touched","value","errors","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","_ref","label","type","isErrorPrint","min","placeholder","Form","Group","Label","htmlFor","Control","name","onChange","onBlur","size","concat","minHeight","FormErrors","reference","ref","database","error","setError","_useState3","_useState4","databaseListMonths","setDatabaseListMonths","unsubscribe","onValue","snapshot","keysYears","monthsCollection","forEach","firstLevelSnapshot","firstLevelKey","key","push","nestedKeysRef","nestedSnapshot","keysMonths","nestedKeySnapshot","nestedKey","slice","nestedError","months","monthsInYear","idx","month","flat","reverse","_useDatabaseListMonth","useDatabaseListMonths","getListMonths","getListMonthsError","success","btnText","btnContent","isLoading","Spinner","animation","variant","listMonths","useSelector","state","databaseMonthsDatesToString","_toConsumableArray","monthDate","monthToDateFormat","Intl","DateTimeFormat","year","timeZone","format","window","innerWidth","setWindowWidth","handleResize","removeEventListener","_props$listContent","_props$listContent2","print","listContent","length","ListGroup","Item","dataStylesListGroupItem","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","useHTTPState","RiDeleteBin6Line","listUsers","userName","setUserName","isAlertPrinted","setIsAlertPrinted","deleteUserAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userBodyPUTRequest","wrap","_context","prev","next","filter","user","t0","stop","apply","arguments","Alert","userColor","handleAlert","disabled","color","gradientValue","allHours","gradientBackground","inputsValues","Range","background","_props$calcHours","_props$calcHours2","_props$calcHours3","_props$calcHours4","content","monthPanel","calcHours","submittedHours","acceptedHours","printAllours","styles","InputsText","yearValue","monthValue","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","onSubmit","abrupt","_objectSpread","currentHours","_x","initialValues","_props$monthDate$slic","_props$monthDate","_props$monthDate$slic2","_props$monthDate2","_useAllHoursQuery","useAllHoursQuery","data","_useFormikHours","useFormikHours","console","log","AiOutlinePlusCircle","fontSize","Formik","FormHoursTop","InputsRange","FormHoursError","title","capitalizeFirstLetter","Link","to","ImArrowLeft","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","deleteMonthAsync","setMonthDate","isOpen","setOpen","MonthTitle","monthDateToString","onToggle","setOpenCollapseIndex","transition","MdOutlineKeyboardArrowDown","transform","transitionDuration","DeleteButton","Collapse","in","useMonthDates","openCollapseIndex","isOpenCollapse","setCollapseOpen","_useState5","_useState6","CollapseFormHours","handleTogle","FormHoursContext","outline","scrollbarGutter","ListContainer","ListMonths","ListUsers","_useSelector","listUsersError","listUsersIsLoading","listMonthsError","requestState","printPanelLoadingContent","SettinsContent","useRequestSettings","useReduxListMonths","IndexContainer","inputString","toLowerCase","split","word","charAt","toUpperCase","join","printPanelContent","contentJSX"],"sourceRoot":""}