{"version":3,"file":"static/js/695.34afc1ad.chunk.js","mappings":"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","sources":["data/dataCurrentDates.tsx","data/firebaseConfig.tsx","pages/login/useLoginFormik.tsx","pages/login/Login.tsx"],"sourcesContent":["const today = new Date();\r\n\r\nconst formatDate = (date: Date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst futureDateIn14Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\r\nconst futureDateIn60Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\r\n\r\nexport const currYearDigits = today.getFullYear();\r\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\r\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\r\nexport const currDateDigits = formatDate(today);\r\n\r\nexport const dateIn14Days = formatDate(futureDateIn14Days);\r\nexport const dateIn60Days = formatDate(futureDateIn60Days);\r\n\r\n\r\n\r\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  timeZone: \"UTC\",\r\n}).format(today);\r\n","\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAvvdzLRow-8AdA5zJH6uv19MOsPLNwC3A\",\r\n  authDomain: \"godziny-3b30f.firebaseapp.com\",\r\n  projectId: \"godziny-3b30f\",\r\n  storageBucket: \"godziny-3b30f.appspot.com\",\r\n  messagingSenderId: \"367174950216\",\r\n  appId: \"1:367174950216:web:0bd1ea3c1c77b5e797677d\",\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app); \r\n","import { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useFormik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { currMonthDigits, currYearDigits } from \"../../data/dataCurrentDates\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface ModelFormValues {\r\n  password: string;\r\n}\r\n\r\nconst useLoginFormik = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // ww@wp.pl\r\n  // wwwwww;\r\n\r\n  const formik = useFormik<ModelFormValues>({\r\n    initialValues: { password: \"wwwwww\" },\r\n\r\n    onSubmit: values => {\r\n      setIsLoading(true);\r\n      signInWithEmailAndPassword(auth, \"ww@wp.pl\", values.password)\r\n        .then(() => {\r\n          navigate(`/miesiac/${currYearDigits}-${currMonthDigits}`);\r\n          setIsLoading(false);\r\n        })\r\n        .catch(error =>\r\n          Swal.fire({\r\n            title: \"Błąd\",\r\n            text: error.message,\r\n            confirmButtonColor: \"rgb(31, 180, 255)\",\r\n          })\r\n        )\r\n        .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n    },\r\n  });\r\n\r\n  return { formik, isLoading };\r\n};\r\n\r\nexport default useLoginFormik;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport useLoginFormik from \"./useLoginFormik\";\r\n\r\nconst Login = () => {\r\n  const { formik, isLoading } = useLoginFormik();\r\n\r\n  let btnContent;\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else {\r\n    btnContent = \"Zaloguj\";\r\n  }\r\n\r\n  return (\r\n    <main className=\"d-flex justify-content-center  align-items-center vh-100\">\r\n      <Form onSubmit={formik.handleSubmit} className=\"w-sm-90 border p-4 \">\r\n        <Form.Group className=\"mx-auto\">\r\n          <div className=\"text-center fs-3 fw-medium mb-4\">\r\n            <Form.Label htmlFor=\"password\" className=\"mb-0\">\r\n              Podaj hasło\r\n            </Form.Label>\r\n          </div>\r\n\r\n          <Form.Control\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            placeholder=\"Hasło\"\r\n            disabled={isLoading}\r\n            size=\"lg\"\r\n            className=\"shadow-sm\"\r\n          />\r\n        </Form.Group>\r\n        <div className=\"d-grid\">\r\n          <Button variant=\"info\" type=\"submit\" className=\"fw-medium mt-4\">\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["today","Date","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","futureDateIn14Days","getTime","futureDateIn60Days","currYearDigits","currMonthDigits","dateIn14Days","dateIn60Days","currMonthDateToString","Intl","DateTimeFormat","timeZone","format","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","formik","useFormik","initialValues","password","onSubmit","values","signInWithEmailAndPassword","then","catch","error","Swal","title","text","message","confirmButtonColor","finally","btnContent","_useLoginFormik","useLoginFormik","_jsx","Spinner","animation","size","variant","children","className","_jsxs","Form","handleSubmit","Group","Label","htmlFor","Control","id","type","name","value","onChange","handleChange","onBlur","handleBlur","placeholder","disabled","Button"],"sourceRoot":""}