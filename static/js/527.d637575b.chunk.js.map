{"version":3,"file":"static/js/527.d637575b.chunk.js","mappings":"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","sources":["components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/IndexContainer.tsx","components/alert/Alert.tsx","components/collapseContainer/CollapseArrow.tsx","components/inputs/FormErrors.tsx","components/inputs/InputsText.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useWindowWidth.tsx","components/ListContainer.tsx","pages/settings/dataStylesSettingsLists.tsx","pages/settings/buttonDeleteUser/useDeleteUserAsync.tsx","pages/settings/buttonDeleteUser/ButtonDeleteUser.tsx","pages/settings/ListUsers.tsx","pages/settings/listMonths/useMonthDate.tsx","pages/settings/listMonths/buttonDeleteMonth/useDeleteMonthAsync.tsx","pages/settings/listMonths/buttonDeleteMonth/ButtonDeleteMonth.tsx","pages/settings/listMonths/MonthTitle.tsx","hooks/updateReduxDatabase/useReduxCalcHours.tsx","components/inputs/inputsRange/InputsRange.tsx","pages/settings/listMonths/formHours/FormHoursError.tsx","pages/settings/listMonths/formHours/FormHoursTop.tsx","pages/settings/listMonths/formHours/useFormikHours.tsx","pages/settings/listMonths/formHours/FormHoursContext.tsx","pages/settings/listMonths/formHours/utilsRequestContainer.tsx","pages/settings/listMonths/formHours/FormHoursContainer.tsx","pages/settings/listMonths/CollapseFormHours.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/indexSettings/SettinsContent.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/utilsCapitalizeFirstLetter.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex d-center\"\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown\">\r\n            Wylogowanie nastąpi za\r\n            <div className=\"d-flex mx-auto w-fit-content\">\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\nimport AutoLogout from \"./autoLogout/AutoLogout\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\n\r\ntype Props = {\r\nisOpen: boolean\r\n}\r\n\r\n\r\nconst CollapseArrow = (props:Props) => {\r\n  return (\r\n    <MdOutlineKeyboardArrowDown\r\n      className=\"fs-3\"\r\n      style={{\r\n        transform: `${props.isOpen ? \"rotate(180deg)\" : \"\"} `,\r\n        transitionDuration: \"320ms\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollapseArrow;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst FormErrors = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-8\" style={{ height: \"0.7rem\" }}>\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormErrors;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({ value, label, type, isErrorPrint, min, max, placeholder }) => {\r\n          return (\r\n            <Form.Group key={value}>\r\n              {label && (\r\n                <Form.Label\r\n                  htmlFor=\"date\"\r\n                  className=\"mb-0 fs-responsive fw-medium\"\r\n                >\r\n                  {label}\r\n                </Form.Label>\r\n              )}\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className={`p-0 border border-primary shadow-sm w-100 text-capitalize ${\r\n                  type === \"color\" ? \"px-0\" : \"px-1\"\r\n                }`}\r\n                style={{ minHeight: 0 }}\r\n              />\r\n              {isErrorPrint && (\r\n                <FormErrors value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger text-centerh\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { useState } from \"react\";\r\nimport Alert from \"../components/alert/Alert\";\r\n\r\nconst useAlertDelete = (action: any, header: string) => {\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = () => {\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const alert = (\r\n    <Alert\r\n      action={action}\r\n      isPrinted={isAlertPrinted}\r\n      setIsPrinted={setIsAlertPrinted}\r\n      header={header}\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleAlert,\r\n    alert,\r\n  };\r\n};\r\n\r\nexport default useAlertDelete;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  let print;\r\n  if (props.listContent?.length === 0 || !props.listContent) {\r\n    print = \"Brak danych\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"h6\">\r\n        {props.header}: {props.listContent?.length}\r\n      </h3>\r\n\r\n      <ListGroup className=\"border-0 p-0\">\r\n        <ListGroup.Item className=\"py-1 px-2 text-warning border-0\">\r\n          {print}\r\n        </ListGroup.Item>\r\n\r\n        {props.children}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","export const dataStylesListGroupItem = \"shadow-sm p-0 mb-2 ps-2 pe-0 rounded-1\";\r\nexport const dataStylesButton =\r\n  \"w-100 d-flex justify-content-between align-items-center px-1 rounded-0 bg-white border-0\";\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { ModelUser } from \"../../../sharedModels/modelUser\";\r\nimport { useDeleteUserMutation } from \"../../../services/apiSliceUsers\";\r\n\r\nconst useDeleteUserAsync = (userName: string) => {\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (userName) {\r\n      const userBodyPUTRequest = listUsers?.filter(\r\n        (user: ModelUser) => user?.userName !== userName\r\n      );\r\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\r\n    }\r\n  };\r\n\r\n  return { deleteUserAsync, success };\r\n};\r\n\r\nexport default useDeleteUserAsync;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport useAlertDelete from \"../../../hooks/useAlertDelete\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { dataStylesButton } from \"../dataStylesSettingsLists\";\r\nimport { ModelUser } from \"../../../sharedModels/modelUser\";\r\nimport useDeleteUserAsync from \"../buttonDeleteUser/useDeleteUserAsync\";\r\n\r\ntype Props = {\r\n  user: ModelUser;\r\n};\r\n\r\nconst ButtonDeleteUser = (props: Props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const { deleteUserAsync, success } = useDeleteUserAsync(userName);\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { alert, handleAlert } = useAlertDelete(\r\n    deleteUserAsync,\r\n    \"Usunąć użytkownika?\"\r\n  );\r\n\r\n  const getUserName = (userName: string) => {\r\n    setUserName(userName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        onClick={() => {\r\n          getUserName(props.user?.userName);\r\n          handleAlert();\r\n        }}\r\n        disabled={success.isLoading}\r\n        className={dataStylesButton}\r\n        style={{ color: props.user.userColor }}\r\n      >\r\n        {props.user.userName}\r\n\r\n        {userName === props.user.userName ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteUser;\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { dataStylesListGroupItem } from \"./dataStylesSettingsLists\";\r\nimport ButtonDeleteUser from \"./buttonDeleteUser/ButtonDeleteUser\"\r\n\r\nconst ListUsers = () => {\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  return (\r\n    <>\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={dataStylesListGroupItem}\r\n            style={{\r\n              backgroundColor: user.userColor,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <ButtonDeleteUser user={user} />\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useMonthDate = (idx: number) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const monthDate = listMonths && listMonths[idx];\r\n\r\n  return { monthDate };\r\n};\r\n\r\nexport default useMonthDate;\r\n","import useMonthDate from \"../useMonthDate\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setCollapseIndex } from \"../../../../redux/storeFeatures/listMonthsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useDeleteMonthMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { useEffect } from \"react\";\r\nimport { getUpdateMonthError } from \"../../../../redux/storeFeatures/monthPanelSlice\";\r\n\r\nconst useDeleteMonthAsync = (monthIdx: number) => {\r\n  const dispatch = useDispatch();\r\n  const { monthDate } = useMonthDate(monthIdx);\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n\r\n  const deleteMonthAsync = async () => {\r\n    if (monthDate && listMonths?.includes(monthDate)) {\r\n      dispatch(setCollapseIndex(-1));\r\n      const year = monthDate.slice(0, 4);\r\n      const month = monthDate.slice(-2);\r\n      await deleteMonth({ year: year, month: month });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getUpdateMonthError(success.isError));\r\n  }, [success.isError]);\r\n\r\n\r\n  return { deleteMonthAsync, success };\r\n};\r\n\r\nexport default useDeleteMonthAsync;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useHTTPState from \"../../../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport useAlertDelete from \"../../../../hooks/useAlertDelete\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport useDeleteMonthAsync from \"./useDeleteMonthAsync\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst ButtonDeleteMonth = (props: Props) => {\r\n  const { deleteMonthAsync, success } = useDeleteMonthAsync(props.idx);\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const { handleAlert, alert } = useAlertDelete(\r\n    deleteMonthAsync,\r\n    \"Usunąć miesiąc?\"\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={handleAlert}\r\n        className=\"ms-auto bg-transparent border-0 p-1\"\r\n      >\r\n        {listMonths && monthDate === listMonths[props.idx] ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteMonth;\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalizeFirstLetter } from \"../../../utils/utilsCapitalizeFirstLetter\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\nconst MonthTitle = (props: Props) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n\r\n  const title =\r\n    databaseMonthsDatesToString &&\r\n    capitalizeFirstLetter(databaseMonthsDatesToString[props.idx]);\r\n\r\n  return (\r\n    <div style={{ width: \"45%\" }}>\r\n      <Link\r\n        to={`/godziny/${listMonths?.[props.idx]}`}\r\n        className=\"text-decoration-none fs-responsive text-dark fw-medium\"\r\n      >\r\n        <ImArrowLeft className=\"fs-6 me-1 text-primary\" />\r\n        {title}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCalcHoursQuery } from \"../../services/apiSliceMonths\";\r\nimport {\r\n  getCalcHours,\r\n  getCalcHoursError,\r\n  getCalcHoursIsLoading,\r\n} from \"../../redux/storeFeatures/calcHursSlice\";\r\n\r\nconst useReduxCalcHours = (yearValue: string, monthValue: string) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    data: calcHours,\r\n    isLoading,\r\n    error,\r\n  } = useCalcHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getCalcHours(calcHours));\r\n\r\n    dispatch(getCalcHoursError(error));\r\n\r\n    dispatch(getCalcHoursIsLoading(isLoading));\r\n  }, [calcHours, error, isLoading, dispatch]);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default useReduxCalcHours;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range custom-range medium\"\r\n              style={{\r\n                height: 10,\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\n\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props: Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { calcHours } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n  let content = \"\";\r\n\r\n  if (calcHours) {\r\n    if (\r\n      calcHours?.submittedHours + calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        calcHours?.submittedHours + calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-8\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import { useSelector } from \"react-redux\";\r\nimport InputsText from \"../../../../components/inputs/InputsText\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\nconst FormHoursTop = () => {\r\n  const { calcHours } = useSelector((state: RootState) => state.calcHours);\r\n\r\n  const dataInputsText = [\r\n    { value: \"allHours\", type: \"number\", isErrorPrint: false },\r\n  ];\r\n\r\n  \r\n  console.log(\"\", calcHours);\r\n\r\n  const styles = \"fs-7 d-flex align-items-end\";\r\n  return (\r\n    <div className=\"d-flex justify-content-between fw-medium \">\r\n      <div className={styles}>0 h</div>\r\n      Zapisane: {calcHours?.allHours} h\r\n      <div className=\"col-6 col-sm-5 d-flex\" style={{ width: \"62px\" }}>\r\n        <InputsText inputsData={dataInputsText} /> &nbsp;\r\n        <div>h</div>\r\n      </div>\r\n      <div className={styles}>320 h</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useSelector } from \"react-redux\";\r\nimport { useAddAllHoursMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (\r\n \r\n  yearValue: string,\r\n  monthValue: string\r\n) => {\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n  const {calcHours} = useSelector((state:RootState) => state.calcHours);\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport InputsRange from \"../../../../components/inputs/inputsRange/InputsRange\";\r\nimport useHTTPState from \"../../../../hooks/useHTTPState\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = monthDate?.slice(5) ?? \"\";\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle\r\n      className=\"text-primary\"\r\n      style={{ fontSize: \"1.4rem\" }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop />\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n        <div className=\"d-between align-items-center mt-2\">\r\n          <FormHoursError />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={success.isLoading}\r\n            className=\"col-2 d-center m-0 p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n          >\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","export const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div className=\"d-center fs-6\" style={{ height: \"88px\" }}>\r\n    {contentJSX}\r\n  </div>\r\n);\r\n","import { useSelector } from \"react-redux\";\r\nimport RequestError from \"../../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../../components/requestStates/RequestLoading\";\r\nimport useReduxCalcHours from \"../../../../hooks/updateReduxDatabase/useReduxCalcHours\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport FormHoursContext from \"./FormHoursContext\";\r\nimport { requestContainer } from \"./utilsRequestContainer\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst FormHoursContainer = (props: Props) => {\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = monthDate?.slice(5) ?? \"\";\r\n  useReduxCalcHours(yearValue, monthValue);\r\n  const { calcHoursIsLoading, calcHoursError } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n  let content;\r\n\r\n  if (calcHoursIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (calcHoursError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <FormHoursContext idx={props.idx} />;\r\n  }\r\n\r\n  return <> {content} </>;\r\n};\r\n\r\nexport default FormHoursContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport ButtonDeleteMonth from \"./buttonDeleteMonth/ButtonDeleteMonth\";\r\nimport MonthTitle from \"./MonthTitle\";\r\nimport CollapseArrow from \"../../../components/collapseContainer/CollapseArrow\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCollapseIndex } from \"../../../redux/storeFeatures/listMonthsSlice\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormHoursContainer from \"./formHours/FormHoursContainer\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst CollapseFormHours = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const { openCollapseIndex } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const isOpen = props.idx === openCollapseIndex;\r\n\r\n  const handleTogle = (idx: number) => {\r\n    dispatch(setCollapseIndex(idx));\r\n    isOpen && dispatch(setCollapseIndex(-1));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle idx={props.idx} />\r\n        <Button\r\n          onClick={() => {\r\n            handleTogle(props.idx);\r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`fw-medium fs-responsive d-flex justify-content-between align-items-center p-0 ps-1`}\r\n        >\r\n          Zapisz godziny\r\n          <CollapseArrow isOpen={isOpen} />\r\n        </Button>\r\n        <ButtonDeleteMonth idx={props.idx} />\r\n      </div>\r\n      <Collapse in={isOpen}>\r\n        <div className=\"pe-1\">\r\n          {isOpen ? (\r\n            <FormHoursContainer idx={props.idx} />\r\n          ) : (\r\n            <div style={{ height: \"88px\" }}></div>\r\n          )}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseFormHours;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport { dataStylesListGroupItem } from \"../dataStylesSettingsLists\";\r\nimport CollapseFormHours from \"./CollapseFormHours\";\r\n\r\nconst ListMonths = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n\r\n  return (\r\n    <>\r\n      {databaseMonthsDatesToString?.map(\r\n        (monthDateToString: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item\r\n              key={monthDateToString}\r\n              className={dataStylesListGroupItem}\r\n            >\r\n              <CollapseFormHours idx={idx} />\r\n            </ListGroup.Item>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListContainer from \"../../../components/ListContainer\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport ListUsers from \"../ListUsers\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\n\r\nconst SettinsContent = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-white p-2 py-4 p-sm-4 w-100\"\r\n      style={{\r\n        height: windowWidth >= 500 ? \"calc(100%)\" : \"calc(100% - 2.5rem)\",\r\n        overflow: \"hidden auto\",\r\n        outline: \"4px solid white\",\r\n        scrollbarGutter: \"stable\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: \"480px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ListContainer header={\"Zapisane miesiące\"} listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <div className=\"border my-4\"></div>\r\n\r\n        <ListContainer header={\"Zapisani użytkownicy\"} listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettinsContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/IndexContainer\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport SettinsContent from \"./SettinsContent\";\r\n\r\nconst IndexSettings = () => {\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n  const { updateMonthError } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n\r\n  let content;\r\n\r\n  if (listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (updateMonthError || listMonthsError || listUsersError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <SettinsContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const capitalizeFirstLetter = (inputString: string) => {\r\n  return inputString\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word?.charAt(0)?.toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n","\r\n\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top d-center fs-4\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","_jsx","children","id","className","style","height","zIndex","backgroundColor","_jsxs","props","windowWidth","useWindowWidth","overflow","position","width","maxWidth","AutoLogout","dispatch","useDispatch","_Fragment","isPrinted","onClick","e","_e$target","includes","target","setIsPrinted","printAlert","handleClose","header","Button","action","MdOutlineKeyboardArrowDown","transform","concat","isOpen","transitionDuration","touched","value","errors","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","_ref","label","type","isErrorPrint","min","placeholder","Form","Group","Label","htmlFor","Control","name","onChange","onBlur","size","minHeight","FormErrors","styles","Spinner","animation","variant","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","success","btnText","btnContent","isLoading","listMonths","useSelector","state","databaseMonthsDatesToString","_toConsumableArray","monthDate","monthToDateFormat","Intl","DateTimeFormat","year","month","timeZone","format","window","innerWidth","setWindowWidth","handleResize","removeEventListener","_props$listContent","_props$listContent2","print","listContent","length","ListGroup","Item","dataStylesListGroupItem","userName","listUsers","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","deleteUserAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userBodyPUTRequest","wrap","_context","prev","next","filter","user","t0","stop","apply","arguments","setUserName","_useDeleteUserAsync","useDeleteUserAsync","useHTTPState","RiDeleteBin6Line","_useAlertDelete","useAlertDelete","_props$user","getUserName","disabled","color","userColor","ButtonDeleteUser","idx","monthIdx","useMonthDate","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","deleteMonthAsync","setCollapseIndex","slice","getUpdateMonthError","isError","_useDeleteMonthAsync","useDeleteMonthAsync","useMonthDates","title","capitalizeFirstLetter","Link","to","ImArrowLeft","yearValue","monthValue","_useCalcHoursQuery","useCalcHoursQuery","calcHours","data","error","getCalcHours","getCalcHoursError","getCalcHoursIsLoading","gradientValue","allHours","gradientBackground","inputsValues","Range","background","content","submittedHours","acceptedHours","console","log","InputsText","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","onSubmit","abrupt","_objectSpread","currentHours","_x","initialValues","_monthDate$slice","_monthDate$slice2","_useFormikHours","useFormikHours","AiOutlinePlusCircle","fontSize","Formik","FormHoursTop","InputsRange","FormHoursError","requestContainer","contentJSX","useReduxCalcHours","_useSelector","calcHoursIsLoading","calcHoursError","RequestLoading","RequestError","FormHoursContext","openCollapseIndex","MonthTitle","CollapseArrow","ButtonDeleteMonth","Collapse","in","FormHoursContainer","monthDateToString","CollapseFormHours","outline","scrollbarGutter","ListContainer","ListMonths","ListUsers","listUsersError","listUsersIsLoading","listMonthsError","updateMonthError","monthPanel","SettinsContent","IndexContainer","inputString","toLowerCase","split","word","_word$charAt","charAt","toUpperCase","join"],"sourceRoot":""}