{"version":3,"file":"static/js/869.55520c29.chunk.js","mappings":"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","sources":["pages/hoursPanel/DayPrintData.tsx","pages/hoursPanel/useDataBaseValues.tsx","pages/hoursPanel/utils.tsx","pages/hoursPanel/Day.tsx","pages/hoursPanel/Column.tsx","components/inputs/TextInput.tsx","pages/hoursPanel/HeaderInPanel.tsx","components/inputs/RadioInput.tsx","pages/hoursPanel/dayForm/dataDayForm.tsx","pages/hoursPanel/dayForm/validationDayForm.tsx","pages/hoursPanel/dayForm/useDayForm.tsx","pages/hoursPanel/dayForm/DayForm.tsx","pages/hoursPanel/IndexHoursPanel.tsx"],"sourcesContent":["interface Props {\r\n  day: any;\r\n}\r\n\r\nconst DayPrintData = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <small>Imię:{props.day.userName}</small>\r\n      <small>{props.day.date}</small>\r\n      <small>Godz.: {props.day.hours}</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayPrintData;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  useColumnsQuery,\r\n  useAddDaysMutation,\r\n  useUpdateColumnsMutation,\r\n} from \"../../services/apiSlice\";\r\nimport { addDaysToEmptyColumns } from \"./utils\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleEidtisLoading } from \"../../redux/storeFeatures/hoursPanelSlice\";\r\n\r\nconst defaultValue = null;\r\ninterface DatabaseColumns {\r\n  allHours: any;\r\n  columns: any[];\r\n}\r\n\r\nconst useDataBaseValues = (valuesFromFormik: any = defaultValue) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error } = useColumnsQuery(undefined);\r\n  const [addDays, success] = useAddDaysMutation();\r\n  const [updateColumns] = useUpdateColumnsMutation();\r\n\r\n  const databaseColumnsId = data && Object.keys(data).join();\r\n\r\n  const databaseAllData = data\r\n    ? Object.values(data).flat()\r\n    : ([] as DatabaseColumns[]);\r\n\r\n  const databaseAllHours =\r\n    data && databaseAllData.length > 0\r\n      ? (databaseAllData[0] as any)?.allHours\r\n      : \"\";\r\n\r\n  const dataCurrentHours =\r\n    data && databaseAllData.length > 0\r\n      ? (databaseAllData[0] as any)?.currentHours\r\n      : \"\";\r\n\r\n  const dataBaseSubmitedHours =\r\n    data && databaseAllData.length > 0\r\n      ? (databaseAllData[0] as any)?.submitedHours\r\n      : \"\";\r\n\r\n  const databaseAccepteddHours =\r\n    data && databaseAllData.length > 0\r\n      ? (databaseAllData[0] as any)?.acceptedHours\r\n      : \"\";\r\n\r\n  const databaseRejectedHours =\r\n    data && databaseAllData.length > 0\r\n      ? (databaseAllData[0] as any)?.rejectedHpurs\r\n      : \"\";\r\n\r\n  const dataBaseColumnsWithoutDays =\r\n    data && databaseAllData.length > 0\r\n      ? (databaseAllData[0] as any)?.columns\r\n      : [];\r\n\r\n  const databaseColumns = addDaysToEmptyColumns(dataBaseColumnsWithoutDays);\r\n\r\n  const updatedColumnsWithAddedDays = data ? [...databaseColumns] : [];\r\n  const newColumnsFromDatabase = data ? [...databaseColumns] : [];\r\n\r\n  const submitedHoursSum =\r\n    data && databaseAllData.length > 0\r\n      ? databaseColumns[0].days.reduce((sum: any, day: any) => {\r\n          return sum + day?.hours;\r\n        }, 0)\r\n      : [];\r\n\r\n  const acceptedHoursSum =\r\n    data && databaseAllData.length > 0\r\n      ? databaseColumns[1].days.reduce((sum: any, day: any) => {\r\n          return sum + day?.hours;\r\n        }, 0)\r\n      : [];\r\n\r\n  const rejectedHoursSum =\r\n    data && databaseAllData.length > 0\r\n      ? databaseColumns[2].days.reduce((sum: any, day: any) => {\r\n          return sum + day?.hours;\r\n        }, 0)\r\n      : [];\r\n\r\n  useEffect(() => {\r\n    dispatch(handleEidtisLoading(success.isLoading));\r\n  }, [success.isLoading, dispatch]);\r\n\r\n  // console.log(\"\", databaseAllData);\r\n\r\n  return {\r\n    databaseAllHours,\r\n    dataCurrentHours,\r\n    databaseAccepteddHours,\r\n    databaseRejectedHours,\r\n    databaseAllData,\r\n    acceptedHoursSum,\r\n    rejectedHoursSum,\r\n    dataBaseSubmitedHours,\r\n    databaseColumnsId,\r\n    updatedColumnsWithAddedDays,\r\n    dataBaseColumnsWithoutDays,\r\n    newColumnsFromDatabase,\r\n    databaseColumns,\r\n    submitedHoursSum,\r\n    data,\r\n    error,\r\n    success,\r\n    updateColumns,\r\n    addDays,\r\n  };\r\n};\r\n\r\nexport default useDataBaseValues;\r\n","export const addDaysToEmptyColumns = (arr: any) => {\r\n  return arr?.map((obj: any) => {\r\n    if (!obj.hasOwnProperty(\"days\")) {\r\n      return { ...obj, days: [] };\r\n    }\r\n    return obj;\r\n  });\r\n};\r\n\r\nexport const handleDragDrop = (results: any, columns: any, setColumns: any) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = [...columns[sourceColumnIdx].days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n\r\n// const firebasey = {\r\n//   uwrahts: {\r\n//     allHours: 50,\r\n//     columns: [\r\n//       {\r\n//         name: \"ppp\",\r\n//         id: \"22\",\r\n//         days: [\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//         ],\r\n//       },\r\n//       {\r\n//         name: \"zatwierdzone\",\r\n//         id: \"22\",\r\n//         days: [\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 20 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//           { data: \"222\", name: \"olo\", hours: 3 },\r\n//         ],\r\n//       },\r\n//     ],\r\n//   },\r\n// };\r\n\r\n// const count = (obj: any) => {\r\n//   const allHours = obj.uwrahts.allHours;\r\n\r\n// if (\r\n//   obj &&\r\n//   obj.uwrahts &&\r\n//   obj.uwrahts.columns &&\r\n//   obj.uwrahts.columns.length > 1\r\n// ) {\r\n//   const secondObject = obj.uwrahts.columns[1];\r\n//   if (secondObject && secondObject.days) {\r\n//     return secondObject.days.reduce((sum:any, day:any) => sum + day.hours, 0);\r\n//   }\r\n// }\r\n\r\n// return 0;\r\n// };\r\n\r\n// console.log(\"ooo\", count(firebasey));\r\n","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport DayPrintData from \"./DayPrintData\";\r\nimport useDataBaseValues from \"./useDataBaseValues\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\ninterface Props {\r\n  day: any;\r\n  index: any;\r\n}\r\n\r\nconst Day = (props: Props) => {\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n  const {\r\n    databaseColumnsId,\r\n    newColumnsFromDatabase,\r\n    submitedHoursSum,\r\n    databaseAllHours,\r\n    acceptedHoursSum,\r\n    rejectedHoursSum,\r\n    updateColumns,\r\n  } = useDataBaseValues();\r\n\r\n  const handleUpdate = async (id: any) => {\r\n    const updatedColumnsWithDeletedDays = newColumnsFromDatabase.map(\r\n      (column: any) => {\r\n        if (column && column.days) {\r\n          return {\r\n            ...column,\r\n            days: column.days.filter((day: any) => day.id !== id),\r\n          };\r\n        }\r\n        return column;\r\n      }\r\n    );\r\n\r\n    await updateColumns({\r\n      id: databaseColumnsId,\r\n      columns: {\r\n        allHours: databaseAllHours,\r\n        currentHours:\r\n          databaseAllHours -\r\n          submitedHoursSum -\r\n          acceptedHoursSum -\r\n          rejectedHoursSum +\r\n          rejectedHoursSum,\r\n        submitedHours: submitedHoursSum,\r\n        acceptedHours: acceptedHoursSum,\r\n        rejectedHpurs: rejectedHoursSum,\r\n        columns: updatedColumnsWithDeletedDays,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"1px solid black\" }}>\r\n      <Draggable\r\n        draggableId={props.day && props?.day?.id.toString()}\r\n        index={props.index}\r\n      >\r\n        {provided => {\r\n          return (\r\n            <div\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <strong>{props.day.content}</strong>\r\n              <DayPrintData day={props.day} />\r\n              <button onClick={() => handleUpdate(props.day.id)}>\r\n                <FaTrashAlt />\r\n              </button>\r\n            </div>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport Day from \"./Day\";\r\nimport useDataBaseValues from \"./useDataBaseValues\";\r\n\r\ninterface Props {\r\n  column: any;\r\n}\r\n\r\nconst Column = (props: Props) => {\r\n  const {\r\n    databaseColumnsId,\r\n    databaseAllHours,\r\n    dataCurrentHours,\r\n    dataBaseSubmitedHours,\r\n    databaseColumns,\r\n    submitedHoursSum,\r\n    data,\r\n    updateColumns,\r\n  } = useDataBaseValues();\r\n\r\n  return (\r\n    <div>\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={{\r\n                border: \"1px solid black\",\r\n                width: \"30vw\",\r\n                minHeight: \"100vh\",\r\n                height: \"fit-content\",\r\n              }}\r\n            >\r\n              {props.column.days &&\r\n                props.column.days.length > 0 &&\r\n                props.column?.days?.map((day: any, idx: any) => {\r\n                  return (\r\n                    <Day day={day} index={idx} key={crypto.randomUUID()} />\r\n                  );\r\n                })}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","export interface Props {\r\n  type: string;\r\n  name: string;\r\n  value: string | number;\r\n  label: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleBlur?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst TextInput = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor={props.name}>{props.label}</label>\r\n      <input\r\n        id={props.name}\r\n        type={props.type}\r\n        name={props.name}\r\n        value={props.value}\r\n        onChange={props.handleChange}\r\n        onBlur={props.handleBlur}\r\n        placeholder={props.placeholder}\r\n        style={{ width: 50 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import TextInput from \"../../components/inputs/TextInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  useAddDaysMutation,\r\n  useColumnsQuery,\r\n  useDeleteAllColumnsMutation,\r\n} from \"../../services/apiSlice\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { handleChange } from \"../../redux/storeFeatures/hoursPanelSlice\";\r\nimport useDataBaseValues from \"./useDataBaseValues\";\r\nimport { FcApproval } from \"react-icons/fc\";\r\n\r\nconst HeaderInPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const [deleteAllColumns, isLoading] = useDeleteAllColumnsMutation();\r\n\r\n  const {\r\n    databaseColumnsId,\r\n    databaseAllHours,\r\n    dataBaseSubmitedHours,\r\n    submitedHoursSum,\r\n    databaseAccepteddHours,\r\n    databaseRejectedHours,\r\n    updatedColumnsWithAddedDays,\r\n    databaseColumns,\r\n    rejectedHoursSum,\r\n    acceptedHoursSum,\r\n    data,\r\n    dataCurrentHours,\r\n    updateColumns,\r\n  } = useDataBaseValues();\r\n\r\n  const columnsIdFRomDatabase = data && Object.keys(data).join();\r\n\r\n  const handleDelete = async () => {\r\n    await deleteAllColumns(columnsIdFRomDatabase);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    dispatch(handleChange(value));\r\n  };\r\n\r\n  const handleAddHours = async () => {\r\n    await updateColumns({\r\n      id: databaseColumnsId,\r\n      columns: {\r\n        allHours: +numberOfDays,\r\n        currentHours:\r\n          +numberOfDays -\r\n          submitedHoursSum -\r\n          acceptedHoursSum -\r\n          rejectedHoursSum +\r\n          rejectedHoursSum,\r\n        submitedHours: dataBaseSubmitedHours,\r\n        acceptedHours: databaseAccepteddHours,\r\n        rejectedHpurs: databaseRejectedHours,\r\n        columns: updatedColumnsWithAddedDays,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div style={{ display: \"flex\" }}>\r\n        <TextInput\r\n          type=\"number\"\r\n          name=\"numberOfDays\"\r\n          value={numberOfDays}\r\n          label=\"Podaj liczbę godzin w miesiącu \"\r\n          placeholder=\"\"\r\n          handleChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddHours}>\r\n          {\" \"}\r\n          <FcApproval />\r\n        </button>\r\n      </div>\r\n\r\n      <button onClick={handleDelete}> usuń wszystko</button>\r\n      <p>Liczba godzin w miesiącu: {databaseAllHours} </p>\r\n      <p>Liczba godzin go wykorzystania: {dataCurrentHours} </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderInPanel;\r\n","import { ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  containerClass?: string;\r\n  inuptClass?: string;\r\n  labelClass?: string;\r\n  label?: ReactNode;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        className={props.inuptClass}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.labelClass}>\r\n       <small> {props.label ? props.label : props.value}</small>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","export const initialValues = {\r\n  id: crypto.randomUUID(),\r\n  date: \"\",\r\n  hours: \"\",\r\n  userName: \"\",\r\n  place: \"\",\r\n};\r\n\r\ninterface DayModel {\r\n  id?: string;\r\n  userName: string;\r\n  date: string;\r\n  hours: string | number;\r\n  place: string;\r\n}\r\n\r\ninterface ColumnModel {\r\n  id: string;\r\n  columnName: string;\r\n  days?: DayModel[];\r\n}\r\n\r\nconst columns: ColumnModel[] = [\r\n  {\r\n    id: \"miesiac\",\r\n    columnName: \"Miesiąc\",\r\n    days: [],\r\n  },\r\n  {\r\n    id: \"oczekujące\",\r\n    columnName: \"Oczekujące\",\r\n  },\r\n  {\r\n    id: \"zatwierdzone\",\r\n    columnName: \"Zatwierdzone\",\r\n  },\r\n];\r\n\r\nexport const addedColumnsWithDays = {\r\n  allHours: 0,\r\n  currentHours:0,\r\n  submitedHours: 0,\r\n  acceptedHours:0,\r\n  rejectedHours:0,\r\n  columns: columns,\r\n};\r\n\r\n// export const addedColumnsWithDays:ColumnModel[] = [\r\n//   {\r\n//     id: \"miesiac\",\r\n//     columnName: \"Miesiąc\",\r\n//     days: [],\r\n//   },\r\n//   {\r\n//     id: \"oczekujące\",\r\n//     columnName: \"Oczekujące\",\r\n//   },\r\n//   {\r\n//     id: \"zatwierdzone\",\r\n//     columnName: \"Zatwierdzone\",\r\n//   },\r\n// ];\r\n\r\n\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n  userName: yup.string().required(\"Podaj imię\"),\r\n  date: yup.string().required(\"Podaj datę\"),\r\n  hours: yup.number().required(\"Podaj liczbę godzin\").moreThan(0, \"Liczba godzin musi być większa od 0\"),\r\n  place: yup.string().required(\"Podaj lokalizację\"),\r\n});\r\n","import { useFormik } from \"formik\";\r\nimport useDataBaseValues from \"../useDataBaseValues\";\r\nimport { addedColumnsWithDays, initialValues } from \"./dataDayForm\";\r\nimport { validationSchema } from \"./validationDayForm\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface FormValues {\r\n  date: string;\r\n  hours: number | string;\r\n  userName: string;\r\n  place: string;\r\n}\r\n\r\nconst useDayForm = () => {\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const formik = useFormik<FormValues>({\r\n    initialValues: initialValues,\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async values => {\r\n      formik.setFieldValue(\"id\", crypto.randomUUID());\r\n      addedColumnsWithDays.columns[0].days = [values];\r\n\r\n      updatedColumnsWithAddedDays[0] = data &&\r\n        dataBaseColumnsWithoutDays?.length > 0 && {\r\n          ...databaseColumns?.[0],\r\n          days: [...databaseColumns?.[0]?.days, ...[values]],\r\n        };\r\n\r\n      data === null\r\n        ? await addDays(addedColumnsWithDays)\r\n        : await updateColumns({\r\n            id: databaseColumnsId,\r\n            columns: {\r\n              allHours: databaseAllHours,\r\n              currentHours: databaseAllHours - submitedHoursSum,\r\n              submitedHours: submitedHoursSum,\r\n              acceptedHours: acceptedHoursSum,\r\n              rejectedHpurs: rejectedHoursSum,\r\n              columns: updatedColumnsWithAddedDays,\r\n            },\r\n          });\r\n    },\r\n  });\r\n\r\n  const {\r\n    databaseAllHours,\r\n    dataBaseSubmitedHours,\r\n    dataBaseColumnsWithoutDays,\r\n    databaseColumns,\r\n    databaseColumnsId,\r\n    updatedColumnsWithAddedDays,\r\n    acceptedHoursSum,\r\n    rejectedHoursSum,\r\n    data,\r\n    submitedHoursSum,\r\n    success,\r\n    updateColumns,\r\n    addDays,\r\n  } = useDataBaseValues(formik.values);\r\n\r\n  // console.log(\"\", success.isLoading);\r\n\r\n  return { formik };\r\n};\r\n\r\nexport default useDayForm;\r\n","import { FcApproval } from \"react-icons/fc\";\r\nimport RadioInput from \"../../../components/inputs/RadioInput\";\r\nimport TextInput from \"../../../components/inputs/TextInput\";\r\nimport useDayForm from \"./useDayForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst DayForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { requestState } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const { formik } = useDayForm();\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} style={{ marginTop: 20 }}>\r\n      {[\r\n        { type: \"text\", value: \"userName\", label: \"Imię\" },\r\n        { type: \"date\", value: \"date\", label: \"Dzień\" },\r\n        { type: \"number\", value: \"hours\", label: \"Godz.\" },\r\n      ].map(({ type, value, label }) => {\r\n        return (\r\n          <div key={value}>\r\n            <TextInput\r\n              type={type}\r\n              name={value}\r\n              value={formik.values[value as keyof typeof formik.values]}\r\n              label={label}\r\n              placeholder={label}\r\n              handleChange={formik.handleChange}\r\n              handleBlur={formik.handleBlur}\r\n            />\r\n            <div style={{ color: \"red\" }}>\r\n              {formik.touched[value as keyof typeof formik.values] &&\r\n                formik.errors[value as keyof typeof formik.values] && (\r\n                  <small>\r\n                    {formik.errors[value as keyof typeof formik.values]}\r\n                  </small>\r\n                )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {[\"Wewnątrz\", \"Poza\"].map(place => {\r\n        return (\r\n          <RadioInput\r\n            key={place}\r\n            value={place}\r\n            name={\"place\"}\r\n            handleChange={formik.handleChange}\r\n            checked={formik.values.place === place}\r\n          />\r\n        );\r\n      })}\r\n      <div style={{ color: \"red\" }}>\r\n        {formik.touched.place && formik.errors.place && (\r\n          <small>{formik.errors.place}</small>\r\n        )}\r\n      </div>\r\n\r\n      <>{requestState.edit.isLoading ? \"loading\" : null}</>\r\n\r\n      <button type={\"submit\"}>\r\n        <FcApproval />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DayForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport Column from \"./Column\";\r\nimport HeaderInPanel from \"./HeaderInPanel\";\r\nimport DayForm from \"./dayForm/DayForm\";\r\nimport useDataBaseValues from \"./useDataBaseValues\";\r\nimport { handleDragDrop } from \"./utils\";\r\n\r\nconst IndexHoursPanel = () => {\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const {\r\n    databaseColumnsId,\r\n    databaseAllHours,\r\n    dataCurrentHours,\r\n    databaseAccepteddHours,\r\n    databaseRejectedHours,\r\n    acceptedHoursSum,\r\n    rejectedHoursSum,\r\n    dataBaseSubmitedHours,\r\n    databaseColumns,\r\n    submitedHoursSum,\r\n    data,\r\n    updateColumns,\r\n  } = useDataBaseValues();\r\n\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setColumns(databaseColumns);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    databaseColumnsId &&\r\n      updateColumns({\r\n        id: databaseColumnsId,\r\n        columns: {\r\n          allHours: databaseAllHours,\r\n          currentHours:\r\n            databaseAllHours -\r\n            submitedHoursSum -\r\n            acceptedHoursSum -\r\n            rejectedHoursSum +\r\n            rejectedHoursSum,\r\n          submitedHours: submitedHoursSum,\r\n          acceptedHours: acceptedHoursSum,\r\n          rejectedHpurs: rejectedHoursSum,\r\n          columns: columns,\r\n        },\r\n      });\r\n  }, [\r\n    columns,\r\n    numberOfDays,\r\n    submitedHoursSum,\r\n    acceptedHoursSum,\r\n    rejectedHoursSum,\r\n  ]);\r\n\r\n  // console.log(\"\", dataCurrentHours);\r\n\r\n  return (\r\n    <>\r\n      <HeaderInPanel />\r\n      <DayForm />\r\n      <div>\r\n        <div>\r\n          <DragDropContext\r\n            onDragEnd={results => handleDragDrop(results, columns, setColumns)}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              {[\r\n                { header: \"Złożone\", counter: dataBaseSubmitedHours },\r\n                { header: \"Zakceptowane\", counter: databaseAccepteddHours },\r\n                { header: \"Odrzucone\", counter: databaseRejectedHours },\r\n              ].map(({ header, counter }) => {\r\n                return (\r\n                  <h4 key={header} style={{ marginLeft: 20, width: \"30vw\" }}>\r\n                    {header} {\"\"}\r\n                    {counter} godz.\r\n                  </h4>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              {columns &&\r\n                columns.length > 0 &&\r\n                columns.map((column: any, idx: any) => {\r\n                  return <Column column={column} key={column.id} />;\r\n                })}\r\n            </div>\r\n          </DragDropContext>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexHoursPanel;\r\n"],"names":["props","_jsxs","children","day","userName","_jsx","date","hours","_databaseAllData$","_databaseAllData$2","_databaseAllData$3","_databaseAllData$4","_databaseAllData$5","_databaseAllData$6","arr","dispatch","useDispatch","_useColumnsQuery","useColumnsQuery","undefined","data","error","_useAddDaysMutation","useAddDaysMutation","_useAddDaysMutation2","_slicedToArray","addDays","success","_useUpdateColumnsMuta","useUpdateColumnsMutation","updateColumns","databaseColumnsId","Object","keys","join","databaseAllData","values","flat","databaseAllHours","length","allHours","dataCurrentHours","currentHours","dataBaseSubmitedHours","submitedHours","databaseAccepteddHours","acceptedHours","databaseRejectedHours","rejectedHpurs","dataBaseColumnsWithoutDays","columns","databaseColumns","map","obj","hasOwnProperty","_objectSpread","days","updatedColumnsWithAddedDays","_toConsumableArray","newColumnsFromDatabase","submitedHoursSum","reduce","sum","acceptedHoursSum","rejectedHoursSum","useEffect","handleEidtisLoading","isLoading","useSelector","state","hoursPanel","numberOfDays","_props$day","_useDataBaseValues","useDataBaseValues","handleUpdate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","updatedColumnsWithDeletedDays","wrap","_context","prev","next","column","filter","stop","_x","apply","arguments","style","border","Draggable","draggableId","toString","index","provided","draggableProps","dragHandleProps","ref","innerRef","content","DayPrintData","onClick","FaTrashAlt","Droppable","droppableId","snapshot","_props$column","_props$column$days","droppableProps","width","minHeight","height","idx","Day","crypto","randomUUID","placeholder","htmlFor","name","label","type","value","onChange","handleChange","onBlur","handleBlur","_useDeleteAllColumnsM","useDeleteAllColumnsMutation","_useDeleteAllColumnsM2","deleteAllColumns","columnsIdFRomDatabase","handleDelete","handleAddHours","_ref2","_callee2","_context2","display","TextInput","e","target","FcApproval","className","containerClass","checked","inuptClass","labelClass","initialValues","place","addedColumnsWithDays","rejectedHours","columnName","validationSchema","yup","required","moreThan","formik","useFormik","onSubmit","_onSubmit","_databaseColumns$","setFieldValue","concat","requestState","useDayForm","handleSubmit","marginTop","color","touched","errors","RadioInput","_Fragment","edit","_useState","useState","_useState2","setColumns","HeaderInPanel","DayForm","DragDropContext","onDragEnd","results","source","destination","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","header","counter","marginLeft","Column"],"sourceRoot":""}