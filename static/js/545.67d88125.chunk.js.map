{"version":3,"file":"static/js/545.67d88125.chunk.js","mappings":"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","sources":["components/AlertErrors.tsx","components/alert/Alert.tsx","components/inputs/inputsRange/InputsRange.tsx","components/formHours/FormHoursError.tsx","components/formHours/FormHoursTop.tsx","components/formHours/useFormikHours.tsx","components/formHours/FormHoursContext.tsx","components/inputs/FormErrors.tsx","components/inputs/InputsText.tsx","hooks/updateReduxDatabase/useReduxListUsers.tsx","components/CollapseMonthsList.tsx","components/inputs/InputsSelect.tsx","components/formDay/FormDayButton.tsx","components/formDay/useDataFormDay.tsx","components/formDay/validationFormDay.tsx","components/formDay/useFormikDay.tsx","components/formDay/FormDayContext.tsx","components/formMonth/useValidationMonthForm.tsx","components/formMonth/dataFormMonth.tsx","components/formMonth/useFormikMonth.tsx","components/formMonth/FormMonthContext.tsx","components/formUser/useValidationFormUser.tsx","components/formUser/useFormikUser.tsx","components/formUser/FormUserContext.tsx","components/CollapseContainer.tsx","components/sidebar/useDataSidebar.tsx","components/sidebar/SidebarBody.tsx","components/sidebar/SidebarHeader.tsx","components/sidebar/SidebarMenuButton.tsx","components/sidebar/SidebarLogout.tsx","components/sidebar/SettingsReturnButton.tsx","components/sidebar/SidebarNav.tsx","components/sidebar/IndexSidebar.tsx","data/dataCurrentDates.tsx","hooks/useDatabaseListMonths.tsx","hooks/updateReduxDatabase/useReduxListMonths.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport Alert from \"./alert/Alert\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { printAlert } from \"../redux/storeFeatures/alertSlice\";\r\n\r\nconst AlertErrors = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { header } = useSelector((state: RootState) => state.alert);\r\n\r\n  const handleAlert = () => {\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {header && (\r\n        <Alert action={handleAlert} isPrinted={true} header={header} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertErrors;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range custom-range medium\"\r\n              style={{\r\n                height: 10,\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props:Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  var content = \"\";\r\n\r\n  if (props.calcHours) {\r\n    if (\r\n      props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-8\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import InputsText from \"../inputs/InputsText\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursTop = (props: Props) => {\r\n  const dataInputsText = [\r\n    { value: \"allHours\", type: \"number\", isErrorPrint: false },\r\n  ];\r\n\r\n  const styles = \"fs-7 d-flex align-items-end\";\r\n  return (\r\n    <div className=\"d-flex justify-content-between fw-medium \">\r\n      <div className={styles}>0 h</div>\r\n      Zapisane: {props?.calcHours?.allHours} h\r\n      <div className=\"col-6 col-sm-5 d-flex\" style={{ width: \"62px\" }}>\r\n        <InputsText inputsData={dataInputsText} /> &nbsp;\r\n        <div>h</div>\r\n      </div>\r\n      <div className={styles}>320 h</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useSelector } from \"react-redux\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport {\r\n  useAddAllHoursMutation,\r\n  useMonthDataQuery,\r\n} from \"../../services/apiSliceMonths\";\r\nimport useReduxMonthData from \"../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (calcHours: ModelCalcHours | null | undefined, yearValue: string, monthValue: string) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  // const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  // const yearValue = month?.id.slice(0, 4);\r\n  // const monthValue = month?.id.slice(-2);\r\n\r\n  // const {\r\n  //   data: month,\r\n  //   error,\r\n  //   isLoading,\r\n  // } = useMonthDataQuery({\r\n  //   year: yearValue ?? \"\",\r\n  //   month: monthValue ?? \"\",\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getMonth(data));\r\n\r\n  //   dispatch(getMonthError(error));\r\n\r\n  //   dispatch(getMonthIsLoading(isLoading));\r\n  // }, [data, error, isLoading, dispatch]);\r\n\r\n  // console.log('form',month)\r\n\r\n\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport InputsRange from \"../inputs/inputsRange/InputsRange\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\nimport {\r\n  useAllHoursQuery,\r\n  useMonthDataQuery,\r\n} from \"../../services/apiSliceMonths\";\r\n\r\ntype Props = {\r\n  monthDate?: string | null;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const yearValue = props.monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = props.monthDate?.slice(5) ?? \"\";\r\n\r\n  const { data: calcHours } = useAllHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    calcHours,\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle\r\n      className=\"text-primary\"\r\n      style={{ fontSize: \"1.4rem\" }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2\">\r\n        <FormHoursTop calcHours={calcHours} />\r\n\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n          <FormHoursError calcHours={calcHours} />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={success.isLoading}\r\n            className=\"col-2 d-flex justify-content-center align-items-center m-0 justify-content-center p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n          >\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst FormErrors = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-8\" style={{ height: \"0.7rem\" }}>\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormErrors;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({ value, label, type, isErrorPrint, min, max, placeholder }) => {\r\n          return (\r\n            <Form.Group key={value}>\r\n              {label && (\r\n                <Form.Label\r\n                  htmlFor=\"date\"\r\n                  className=\"mb-0 fs-responsive fw-medium\"\r\n                >\r\n                  {label}\r\n                </Form.Label>\r\n              )}\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className=\"p-0 px-1 border border-primary shadow-sm w-100 \"\r\n                style={{ minHeight: 0  }}\r\n              />\r\n              {isErrorPrint && (\r\n                <FormErrors value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","import { useEffect } from \"react\";\r\nimport { useUsersQuery } from \"../../services/apiSliceUsers\";\r\nimport {\r\n  geListtUsers,\r\n  getListUsersError,\r\n  getListUsersIsLoading,\r\n} from \"../../redux/storeFeatures/listUsersSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useReduxListUsers = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading } = useUsersQuery();\r\n\r\n  useEffect(() => {\r\n    dispatch(geListtUsers(data));\r\n\r\n    dispatch(getListUsersError(error));\r\n\r\n    dispatch(getListUsersIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxListUsers;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useMonthDates from \"../hooks/useMonthDates\";\r\nimport useURLValues from \"../hooks/useURLValues\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\n\r\nconst CollapseMonthsList = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { monthURL, isMonthInURL } = useURLValues();\r\n\r\n  const monthURLToDateFormat = isMonthInURL ? new Date(monthURL) : null;\r\n\r\n  const curMonthURLStringFormat =\r\n    monthURLToDateFormat &&\r\n    new Intl.DateTimeFormat(\"pl-PL\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      timeZone: \"UTC\",\r\n    }).format(monthURLToDateFormat);\r\n\r\n  return (\r\n    <ListGroup\r\n      className=\"scrolHidden fs-7 fw-medium text-capitalize\"\r\n      style={{ height: \"5rem\" }}\r\n    >\r\n      {!listMonths && (\r\n        <ListGroup.Item className=\"border-0 p-0 text-warning\">\r\n          Brak danych\r\n        </ListGroup.Item>\r\n      )}\r\n\r\n      {databaseMonthsDatesToString?.map((month: string, idx: number) => {\r\n        return (\r\n          <ListGroup.Item key={month} className=\"border-0 p-0\">\r\n            <Link\r\n              to={`/godziny/${listMonths?.[idx]}`}\r\n              className={`${\r\n                curMonthURLStringFormat !== month || !curMonthURLStringFormat\r\n                  ? \"text-dark\"\r\n                  : \"text-info\"\r\n              } text-decoration-none`}\r\n            >\r\n              {month}\r\n            </Link>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default CollapseMonthsList;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    name: string;\r\n    firstOption: string;\r\n    label: string;\r\n    options: string[] | number[];\r\n   \r\n  }[];\r\n};\r\n\r\nconst InputsSelect = (props: Props) => {\r\n  const { errors, touched, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(({ name, firstOption, label, options }) => {\r\n        return (\r\n          <Form.Group key={label}>\r\n            <Form.Label\r\n              htmlFor={name}\r\n              className=\"mb-0 fw-medium  fs-responsive\"\r\n            >\r\n              {label}\r\n            </Form.Label>\r\n\r\n            <Form.Select\r\n              id={name}\r\n              name={name}\r\n              onChange={e => setFieldValue(name, e.target.value)}\r\n              onBlur={handleBlur}\r\n              size=\"sm\"\r\n              className={`p-0 px-1 border border-primary shadow-sm text-capitalize ${\r\n                firstOption === \"Zapisz imię\" ? \"text-warning\" : \"\"\r\n              }`}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <option\r\n                className={` ${\r\n                  firstOption === \"Zapisz imię\"\r\n                    ? \"text-warning\"\r\n                    : \"text-placeholder\"\r\n                }`}\r\n              >\r\n                {firstOption}\r\n              </option>\r\n\r\n              {options?.map((option: string | number) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Select>\r\n            <FormErrors value={name} errors={errors} touched={touched} />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsSelect;\r\n","import { useFormikContext } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\nimport { ModelSuccess } from \"../../sharedModels/modelSucces\";\r\n\r\ntype Props = {\r\n  success: ModelSuccess;\r\n};\r\n\r\nconst FormDayButton = (props: Props) => {\r\n  const { values } = useFormikContext<ModelDay>();\r\n  const { btnContent } = useHTTPState(props.success, \"Dodaj dzień\");\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const currentHours = month?.calcHours?.currentHours || 0;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"submit\"\r\n        disabled={props.success.isLoading}\r\n        className=\"fw-medium w-100 mt-2 ms-auto bg-primary text-white fs-responsive\"\r\n      >\r\n        {btnContent}\r\n      </Button>\r\n\r\n      <div className=\"text-danger d-block mt-0 fs-8\" style={{ height: \"1rem\" }}>\r\n        {currentHours - +values.hours < 0 || currentHours === 0\r\n          ? \"Brak dostępnych godzin\"\r\n          : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormDayButton;\r\n","import {\r\n  dateInNext_14_Days,\r\n  dateInNext_60_Days,\r\n} from \"../../data/dataCurrentDates\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\n\r\nconst useDataFormDay = () => {\r\n  const { listUsers: dataUsers } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n\r\n  const users = dataUsers ? dataUsers : [];\r\n\r\n  const names = users?.map(({ userName }: ModelUser) => {\r\n    return userName;\r\n  });\r\n\r\n  const dataInputsSelect = [\r\n    {\r\n      name: \"userName\",\r\n      firstOption: `${names.length === 0 ? \"Zapisz imię\" : \"Imię\"}`,\r\n      label: \"Podaj imię\",\r\n      options: names,\r\n    },\r\n    {\r\n      name: \"hours\",\r\n      firstOption: \"Godziny\",\r\n      label: \"Podaj liczbę godzin\",\r\n      options: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n    },\r\n\r\n    {\r\n      name: \"place\",\r\n      firstOption: \"Lokalizacja\",\r\n      label: \"Podaj lokalizację\",\r\n      options: [\"Wewnątrz\", \"Poza\"],\r\n    },\r\n  ];\r\n  const dataInputsText = [\r\n    {\r\n      value: \"date\",\r\n      label: \"Podaj dzień\",\r\n      type: \"date\",\r\n      isErrorPrint: true,\r\n      min: dateInNext_14_Days,\r\n      max: dateInNext_60_Days,\r\n    },\r\n  ];\r\n  return { dataInputsSelect, dataInputsText };\r\n};\r\nexport default useDataFormDay;\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n  userName: yup\r\n    .string()\r\n    .test(\"is-name-valid\", \"Imię wymagane\", value => value !== \"Imię\")\r\n    .required(\"Imię wymagane\"),\r\n  hours: yup\r\n    .string()\r\n    .test(\r\n      \"is-hours-valid\",\r\n      \"Liczba godzin wymagana\",\r\n      value => value !== \"Liczba godzin\"\r\n    )\r\n    .required(\"Liczba godzin wymagana\"),\r\n  place: yup\r\n    .string()\r\n    .test(\r\n      \"is-place-valid\",\r\n      \"Lokalizacja wymagana\",\r\n      value => value !== \"Lokalizacja\"\r\n    )\r\n    .required(\"Lokalizacja wymagana\"),\r\n});\r\n","import { useSelector } from \"react-redux\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport * as yup from \"yup\";\r\nimport { dateInNext_14_Days } from \"../../data/dataCurrentDates\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useAddDayMutation } from \"../../services/apiSliceMonths\";\r\nimport { validationSchema } from \"./validationFormDay\";\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\n\r\nexport type ModelInitialValuesFormikDay = {\r\n  id: string;\r\n  date: string;\r\n  hours: string;\r\n  userName: string;\r\n  place: string;\r\n  userColor: string;\r\n};\r\n\r\nconst useFormikDay = () => {\r\n  const [addDay, success] = useAddDayMutation();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n\r\n  const initialValues = {\r\n    id: \"\",\r\n    date: dateInNext_14_Days,\r\n    hours: \"\",\r\n    userName: \"Imię\",\r\n    place: \"\",\r\n    userColor: \"\",\r\n  };\r\n\r\n  const validation = validationSchema as yup.ObjectSchema<typeof initialValues>;\r\n\r\n  const onSubmit = async (values: ModelInitialValuesFormikDay) => {\r\n    if (\r\n      month &&\r\n      (month?.calcHours?.currentHours - +values.hours < 0 ||\r\n        month?.calcHours?.currentHours === 0)\r\n    )\r\n      return;\r\n\r\n    const userColor =\r\n      listUsers &&\r\n      listUsers?.find((user: ModelUser) => {\r\n        return user.userName === values.userName;\r\n      })?.userColor;\r\n\r\n    const valuesToDatabase = {\r\n      ...values,\r\n      id: UUID(),\r\n      hours: +values.hours,\r\n      userColor: userColor || \"\",\r\n    };\r\n\r\n    month &&\r\n      (await addDay({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          calcHours: {\r\n            ...month?.calcHours,\r\n            currentHours: month.calcHours.currentHours - valuesToDatabase.hours,\r\n            submittedHours:\r\n              month.calcHours.submittedHours + valuesToDatabase.hours,\r\n          },\r\n\r\n          columns: [\r\n            {\r\n              ...month.columns[0],\r\n              days: month.columns[0].days\r\n                ? [...month.columns[0].days, valuesToDatabase]\r\n                : [valuesToDatabase],\r\n            },\r\n            ...month.columns.slice(1),\r\n          ],\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, validation, onSubmit, success };\r\n};\r\n\r\nexport default useFormikDay;\r\n","import { Form, Formik, FormikConfig } from \"formik\";\r\nimport InputsSelect from \"../inputs/InputsSelect\";\r\nimport InputsText from \"../inputs/InputsText\";\r\nimport FormDayButton from \"./FormDayButton\";\r\nimport useDataFormDay from \"./useDataFormDay\";\r\nimport useFormikDay from \"./useFormikDay\";\r\nimport \"./_formDay.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { ModelInitialValuesFormikDay } from \"./useFormikDay\";\r\n\r\n\r\ntype FormData = {\r\n  id: string;\r\n  date: string;\r\n  hours: string;\r\n  userName: string;\r\n  place: string;\r\n  userColor: string;\r\n};\r\n\r\nconst asFormikConfig = <Values extends FormData>(props: FormikConfig<Values>) =>\r\n  props;\r\n\r\nconst FormDayContext = () => {\r\n  const { dataInputsText, dataInputsSelect } = useDataFormDay();\r\n  const { initialValues, validation, onSubmit, success } = useFormikDay();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const allHours = month?.calcHours?.allHours;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validation}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Form className={`${allHours === 0 ? \"formContainerBlur\" : \"\"} mt-2`}>\r\n        <InputsSelect inputsData={dataInputsSelect} />\r\n        <InputsText inputsData={dataInputsText} />\r\n        <FormDayButton success={success} />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormDayContext;\r\n","import * as yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\nconst useValidationMonthForm = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const validationSchema = yup.object({\r\n    monthDate: yup\r\n      .string()\r\n      .test(\r\n        \"is-in-database\",\r\n        \"Miesiąc zapisany\",\r\n        value => value !== undefined && !listMonths?.includes(value)\r\n      ),\r\n  });\r\n\r\n  return { validationSchema };\r\n};\r\n\r\nexport default useValidationMonthForm;\r\n","import { ModelColumn } from \"../../sharedModels/modelColumn\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\nimport { ModelMonth } from \"../../sharedModels/modelMonth\";\r\n\r\nconst columns: ModelColumn[] = [\r\n  { id: \"submitted\", days: [] },\r\n  { id: \"accepted\", days: [] },\r\n  { id: \"rejected\", days: [] },\r\n];\r\n\r\n const calcHours: ModelCalcHours = {\r\n  allHours: 0,\r\n  currentHours: 0,\r\n  submittedHours: 0,\r\n  acceptedHours: 0,\r\n  rejectedHours: 0,\r\n};\r\n\r\nexport const monthPattern: ModelMonth = {\r\n  id: \"\",\r\n  columns,\r\n  calcHours,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { currMonthDigits, currYearDigits } from \"../../data/dataCurrentDates\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport {\r\n  useDeleteMonthMutation,\r\n  // useUpdateListMonthsMutation,\r\n  useUpdateMonthMutation,\r\n} from \"../../services/apiSliceMonths\";\r\n\r\nimport useValidationMonthForm from \"./useValidationMonthForm\";\r\nimport * as yup from \"yup\";\r\nimport { monthPattern } from \"./dataFormMonth\";\r\nimport { ModelMonth } from \"../../sharedModels/modelMonth\";\r\nimport { sortListMonths } from \"../../utils/sortListMonths\";\r\n\r\n\r\ninterface ModelInitialValues {\r\n  monthDate: string;\r\n}\r\n\r\nconst useFormikMonth = () => {\r\n  const navigate = useNavigate();\r\n  const [updateMonth, success] = useUpdateMonthMutation();\r\n  // const [updateListMonths] = useUpdateListMonthsMutation();\r\n  const [deleteMonth] = useDeleteMonthMutation();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { validationSchema } = useValidationMonthForm();\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [formValues, setFormValues] = useState({ monthDate: \"\" });\r\n\r\n  const initialValues = { monthDate: `${currYearDigits}-${currMonthDigits}` };\r\n\r\n  const validation = validationSchema as yup.ObjectSchema<typeof initialValues>;\r\n\r\n  const onSubmit = async (values: ModelInitialValues) => {\r\n    const year = values.monthDate.slice(0, 4);\r\n    const month = values.monthDate.slice(-2);\r\n    const monthBody: ModelMonth = {\r\n      ...monthPattern,\r\n      id: values.monthDate,\r\n    };\r\n\r\n    await updateMonth({ year, month, monthBody });\r\n    setFormValues(values);\r\n        // navigate(`/godziny/${values.monthDate}`);\r\n  };\r\n\r\n  // const executeAddMonthInfo = async (values: ModelInitialValues) => {\r\n  //   if (isSuccess) {\r\n  //     const year = values.monthDate.slice(0, 4);\r\n  //     const month = values.monthDate.slice(-2);\r\n  //     const months = listMonths ? [...listMonths] : [];\r\n  //     const updatedList = [...months, `${year}-${month}`];\r\n  //     const sortedMonths = sortListMonths(updatedList);\r\n\r\n  //     await updateListMonths(sortedMonths);\r\n  //     navigate(`/godziny/${values.monthDate}`);\r\n  //   } else if (success.isError) {\r\n  //     const year = values.monthDate.slice(0, 4);\r\n  //     const month = values.monthDate.slice(-2);\r\n  //     await deleteMonth({ year, month });\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (success.isSuccess) {\r\n      setIsSuccess(true);\r\n    } else setIsSuccess(false);\r\n  }, [success.isSuccess]);\r\n\r\n  // useEffect(() => {\r\n  //   executeAddMonthInfo(formValues);\r\n  // }, [isSuccess, updateListMonths]);\r\n\r\n  return { initialValues, validation, onSubmit, success };\r\n};\r\n\r\nexport default useFormikMonth;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { currMonthDigits, currYearDigits } from \"../../data/dataCurrentDates\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport useFormikMonth from \"./useFormikMonth\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport InputsText from \"../inputs/InputsText\";\r\n\r\nconst FormMonthContext = () => {\r\n  const { initialValues, validation, onSubmit, success } = useFormikMonth();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle className=\"text-primary\" style={{ fontSize: \"1.4rem\" }} />\r\n  );\r\n\r\n  const dataInputs = [\r\n    {\r\n      value: \"monthDate\",\r\n      type: \"month\",\r\n      label:\"Podaj miesiąc\",\r\n      isErrorPrint: true,\r\n      min: `${currYearDigits}-${currMonthDigits}`,\r\n      max: \"2025-12\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validation}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Form className=\"py-2\">\r\n        <InputsText inputsData={dataInputs} />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={success.isLoading}\r\n          className=\"col-2 d-flex justify-content-center align-items-center justify-content-center p-0 m-0 ms-auto  text-info-emphasis border-0 bg-transparent\"\r\n        >\r\n          {btnContent}\r\n        </Button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormMonthContext;\r\n","import { useUsersQuery } from \"../../services/apiSliceUsers\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\n\r\nconst useValidationFormUser = () => {\r\n  const { data: dataUsers } = useUsersQuery();\r\n\r\n  const usersNames = dataUsers?.map(({ userName }: ModelUser) => userName);\r\n  const UsersColors = dataUsers?.map(({ userColor }: ModelUser) => userColor);\r\n\r\n  const validationSchema = yup.object({\r\n    userName: yup\r\n      .string()\r\n      .min(3, \"Min. 3 litery\")\r\n      .max(10, \"Max. 10 liter\")\r\n      .test(\r\n        \"is-in-database\",\r\n        \"Imię zajęte\",\r\n        value =>\r\n          value !== undefined &&\r\n          !usersNames?.includes(value[0].toUpperCase() + value.slice(1))\r\n      )\r\n      .required(\"Imię wymagane\"),\r\n    userColor: yup\r\n      .string()\r\n      .test(\r\n        \"is-in-database\",\r\n        \"Kolor zajęty\",\r\n        value => value !== undefined && !UsersColors?.includes(value)\r\n      ),\r\n  });\r\n\r\n  return { validationSchema };\r\n};\r\n\r\nexport default useValidationFormUser;\r\n","import {\r\n  useAddUserMutation,\r\n  useUsersQuery,\r\n} from \"../../services/apiSliceUsers\";\r\nimport useValidationUserForm from \"./useValidationFormUser\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport * as yup from \"yup\";\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nconst useFormikUser = () => {\r\n  const [addUser, success] = useAddUserMutation();\r\n  const { validationSchema } = useValidationUserForm();\r\n  const { data: dataUsers } = useUsersQuery();\r\n\r\n  const users = dataUsers || [];\r\n\r\n  const initialValues = {\r\n    id: \"\",\r\n    userName: \"\",\r\n    userColor: \"#e0cce1\",\r\n  };\r\n\r\n  const validation = validationSchema as yup.ObjectSchema<typeof initialValues>;\r\n  const onSubmit = async (\r\n    values: ModelUser,\r\n    { resetForm }: FormikHelpers<ModelUser>\r\n  ) => {\r\n    const userValues = {\r\n      ...values,\r\n      userName:\r\n        values.userName.slice(0, 1).toUpperCase() + values.userName.slice(1),\r\n      id: UUID(),\r\n    };\r\n\r\n    const sortedUsers = [...users, userValues].sort((a, b) =>\r\n      a.userName.localeCompare(b.userName)\r\n    );\r\n\r\n    await addUser(sortedUsers);\r\n    resetForm();\r\n  };\r\n\r\n  return { initialValues, validation, onSubmit, success };\r\n};\r\n\r\nexport default useFormikUser;\r\n\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputsText from \"../inputs/InputsText\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport useFormikUser from \"./useFormikUser\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\nconst FormUserContext = () => {\r\n  const { initialValues, validation, onSubmit, success } = useFormikUser();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle className=\"text-primary\" style={{ fontSize: \"1.4rem\" }} />\r\n  );\r\n\r\n  const dataInputs = [\r\n    {\r\n      value: \"userName\",\r\n      type: \"text\",\r\n      label: \"Podaj imię\",\r\n      isErrorPrint: true,\r\n      placeholder: \"Imię\",\r\n    },\r\n    {\r\n      value: \"userColor\",\r\n      type: \"color\",\r\n      label: \"Podaj kolor\",\r\n      isErrorPrint: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validation}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Form className=\"py-2\">\r\n        <InputsText inputsData={dataInputs} />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={success.isLoading}\r\n          className=\"col-2 d-flex justify-content-center align-items-center justify-content-center p-0 m-0 ms-auto  text-info-emphasis border-0 bg-transparent\"\r\n        >\r\n          {btnContent}\r\n        </Button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormUserContext;\r\n","import { ReactNode, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n  title: string;\r\n};\r\n\r\nconst CollapseContainer = (props: Props) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline-primary\"\r\n        onClick={() => setOpen(prev => !prev)}\r\n        aria-expanded={isOpen}\r\n        aria-controls=\"example-collapse-text\"\r\n        size=\"sm\"\r\n        className={`fw-medium fs-responsive d-flex justify-content-between align-items-center bg-primary text-white w-100 ${\r\n          isOpen ? \"rounded-bottom-0\" : \"rounded-bottom-1\"\r\n        }`}\r\n        style={{\r\n          transition: \"border-radius 420ms\",\r\n        }}\r\n      >\r\n        {props.title}\r\n        <MdOutlineKeyboardArrowDown\r\n          className=\"fs-3\"\r\n          style={{\r\n            transform: `${isOpen ? \"rotate(180deg)\" : \"\"} `,\r\n            transitionDuration: \"320ms\",\r\n          }}\r\n        />\r\n      </Button>\r\n      <Collapse in={isOpen}>\r\n        <div className=\"border border-primary rounded-bottom px-1\">\r\n          {props.children}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseContainer;\r\n","import FormHoursContext from \"../formHours/FormHoursContext\";\r\nimport CollapseMonthsList from \"../CollapseMonthsList\";\r\nimport FormDayContext from \"../formDay/FormDayContext\";\r\nimport FormMonthContext from \"../formMonth/FormMonthContext\";\r\nimport FormUserContext from \"../formUser/FormUserContext\";\r\nimport CollapseContainer from \"../CollapseContainer\";\r\nimport useMonthURLToString from \"../../hooks/useMonthURLToString\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\nconst useDataSidebar = () => {\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  const monthStringCapitalize =\r\n    monthURLStringFormat[0]?.toUpperCase() + monthURLStringFormat.slice(1);\r\n\r\n  const printFormHours = month && (\r\n    <div className=\"mt-1\">\r\n      <CollapseContainer title={\"Zapisz godziny\"}>\r\n        <FormHoursContext />\r\n      </CollapseContainer>\r\n    </div>\r\n  );\r\n  const printFormDay = month && <FormDayContext />;\r\n\r\n  const dataMonthPanel = [\r\n    <CollapseContainer title={monthStringCapitalize}>\r\n      <CollapseMonthsList />\r\n    </CollapseContainer>,\r\n    // printFormHours,\r\n    printFormDay,\r\n  ];\r\n\r\n  const dataSettings = [\r\n    <CollapseContainer title={\"Zapisz miesiąc\"}>\r\n      <FormMonthContext />\r\n    </CollapseContainer>,\r\n    <div className=\"mt-1\">\r\n      <CollapseContainer title={\"Zapisz użytkownika\"}>\r\n        <FormUserContext />\r\n      </CollapseContainer>\r\n    </div>,\r\n  ];\r\n\r\n  return { dataMonthPanel, dataSettings };\r\n};\r\n\r\nexport default useDataSidebar;\r\n","import React from \"react\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport useDataSidebar from \"./useDataSidebar\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst SidebarBody = () => {\r\n  const { pathname } = useLocation();\r\n  const { isMonthInURL } = useURLValues();\r\n  const { dataMonthPanel, dataSettings } = useDataSidebar();\r\n\r\n  return (\r\n    <Offcanvas.Body className=\"scrolHidden flex-grow-0 p-0 border border-4 border-white bg-white rounded\">\r\n      {isMonthInURL &&\r\n        dataMonthPanel.map((component, idx) => {\r\n          return <React.Fragment key={idx}>{component}</React.Fragment>;\r\n        })}\r\n\r\n      {pathname === \"/godziny/ustawienia\" &&\r\n        dataSettings.map((component, idx) => {\r\n          return <React.Fragment key={idx}>{component}</React.Fragment>;\r\n        })}\r\n    </Offcanvas.Body>\r\n  );\r\n};\r\n\r\nexport default SidebarBody;\r\n","import Offcanvas from \"react-bootstrap/Offcanvas\";\r\n\r\nconst SidebarHeader = () => {\r\n  return (\r\n    <Offcanvas.Header\r\n      className=\"d-sm-none w-fit-content ms-auto\"\r\n      closeButton={true}\r\n    ></Offcanvas.Header>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport useMonthURLToString from \"../../hooks/useMonthURLToString\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\n\r\ntype Props = {\r\n  toggleShow: () => void;\r\n};\r\n\r\nconst SidebarMenuButton = (props: Props) => {\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"primary\"\r\n      onClick={props.toggleShow}\r\n      className= \"d-flex d-sm-none justify-content-center align-items-center rounded-0 p-0 fw-medium w-100 px-4 fixed-bottom\"\r\n      style={{\r\n        height: \"2.5rem\",\r\n      }}\r\n    >\r\n      <div>Menu:&nbsp;</div>\r\n      {isMonthInURL ? <div>{monthURLStringFormat}</div> : <div>ustawienia</div>}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SidebarMenuButton;\r\n","import { useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { RiLogoutBoxLine } from \"react-icons/ri\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AlertErrors from \"../AlertErrors\";\r\n\r\nconst SidebarLogout = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const logout = () => {\r\n    setIsLoading(true);\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        navigate(\"/godziny\");\r\n      })\r\n\r\n      .catch(error => dispatch(printAlert(error.message)))\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  let btnContent = (\r\n    <div className=\"d-flex align-center  d-flex align-items-center text-primary w-100\">\r\n      <RiLogoutBoxLine className=\"fs-6 me-1 \" />\r\n      Wyloguj\r\n    </div>\r\n  );\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        className=\"mx-auto\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AlertErrors />\r\n      <Button\r\n        onClick={logout}\r\n        className=\"fs-6 fw-medium text-info p-0 bg-transparent border-0 w-100\"\r\n        style={{\r\n          cursor: \"pointer\",\r\n        }}\r\n        disabled={isLoading}\r\n      >\r\n        {btnContent}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarLogout;\r\n","import { createBrowserHistory } from \"history\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ImArrowLeft } from \"react-icons/im\";\r\n\r\nconst SettingsReturnButton = () => {\r\n  const history = createBrowserHistory();\r\n  const handleGoBack = () => {\r\n    history.back();\r\n  };\r\n  return (\r\n    <Button\r\n      onClick={handleGoBack}\r\n      className=\"fs-6 fw-medium text-primary p-0 bg-transparent border-0 w-100\"\r\n      style={{\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex align-center  d-flex align-items-center text-start w-100\">\r\n        <ImArrowLeft className=\"fs-6 me-1 \" /> Wróć\r\n      </div>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SettingsReturnButton;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { AiTwotoneSetting } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SidebarLogout from \"./SidebarLogout\";\r\nimport SettingsReturnButton from \"./SettingsReturnButton\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\n\r\nconst SidebarNav = () => {\r\n  const { isMonthInURL } = useURLValues();\r\n  const styles = \"bg-transparent border-0 p-0 ps-2\";\r\n\r\n  return (\r\n    <nav className=\"mt-auto mb-2 fw-medium\">\r\n      <ListGroup>\r\n        {!isMonthInURL && (\r\n          <ListGroup.Item className={styles}>\r\n            <SettingsReturnButton />\r\n          </ListGroup.Item>\r\n        )}\r\n        <ListGroup.Item className={styles}>\r\n          <Link to=\"/godziny/ustawienia\" className=\"text-primary text-decoration-none\">\r\n            <AiTwotoneSetting /> Ustawienia\r\n          </Link>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item className={styles}>\r\n          <SidebarLogout />\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SidebarNav;\r\n","import { useEffect, useState } from \"react\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useReduxListMonths from \"../../hooks/updateReduxDatabase/useReduxListMonths\";\r\nimport useReduxListUsers from \"../../hooks/updateReduxDatabase/useReduxListUsers\";\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\";\r\nimport Alert from \"../alert/Alert\";\r\nimport SidebarBody from \"./SidebarBody\";\r\nimport SidebarHeader from \"./SidebarHeader\";\r\nimport SidebarMenuButton from \"./SidebarMenuButton\";\r\nimport SidebarNav from \"./SidebarNav\";\r\n\r\nconst IndexSidebar = () => {\r\n  useReduxListUsers();\r\n  useReduxListMonths();\r\n\r\n  const { pathname } = useLocation();\r\n  const [isShow, setShow] = useState(false);\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const toggleShow = () => setShow(prev => !prev);\r\n\r\n  useEffect(() => {\r\n    windowWidth >= 500 && setShow(true);\r\n  }, [windowWidth]);\r\n\r\n  const printSidebar =\r\n    pathname.includes(\"/godziny/ustawienia\") ||\r\n    pathname.includes(\"/godziny/202\");\r\n\r\n  return (\r\n    <>\r\n      {printSidebar && (\r\n        <>\r\n          {/* <Alert /> */}\r\n          <Offcanvas\r\n            show={isShow}\r\n            onHide={handleClose}\r\n            name=\"Disable backdrop\"\r\n            scroll={true}\r\n            backdrop={false}\r\n            className={`${\r\n              windowWidth <= 500 && \"backgroundImage\"\r\n            } bg-transparent`}\r\n            style={{\r\n              width: windowWidth >= 500 ? \"30%\" : \"100vw\",\r\n              maxWidth: windowWidth >= 500 && \"250px\",\r\n            }}\r\n          >\r\n            <div className=\"p-1 d-flex flex-column bg-opacity-white h-100\">\r\n              <SidebarHeader />\r\n              <SidebarBody />\r\n              <SidebarNav />\r\n            </div>\r\n          </Offcanvas>\r\n          <SidebarMenuButton toggleShow={toggleShow} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexSidebar;\r\n","const today = new Date();\r\n\r\nconst formatDate = (date: Date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst futureDateInNext_14_Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\r\nconst futureDateInNext_60_Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\r\n\r\nexport const currYearDigits = today.getFullYear();\r\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\r\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\r\nexport const currDateDigits = formatDate(today);\r\n\r\nexport const dateInNext_14_Days = formatDate(futureDateInNext_14_Days);\r\nexport const dateInNext_60_Days = formatDate(futureDateInNext_60_Days);\r\n\r\n\r\n\r\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  timeZone: \"UTC\",\r\n}).format(today);\r\n","import { onValue, ref } from \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { database } from \"../data/firebaseConfig\";\r\n\r\nconst useDatabaseListMonths = () => {\r\n  const reference = ref(database);\r\n  const [error, setError] = useState(\"\");\r\n  const [databaseListMonths, setDatabaseListMonths] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(\r\n      reference,\r\n      snapshot => {\r\n        let keysYears: string[] = [];\r\n        let monthsCollection: any = [];\r\n\r\n        snapshot?.forEach((firstLevelSnapshot: any) => {\r\n          const firstLevelKey = firstLevelSnapshot.key;\r\n          keysYears.push(firstLevelKey);\r\n\r\n          const nestedKeysRef = ref(database, `${firstLevelKey}`);\r\n          onValue(\r\n            nestedKeysRef,\r\n            nestedSnapshot => {\r\n              let keysMonths: string[] = [];\r\n\r\n              nestedSnapshot?.forEach((nestedKeySnapshot: any) => {\r\n                const nestedKey = nestedKeySnapshot.key;\r\n                keysMonths.push(nestedKey.slice(6));\r\n              });\r\n\r\n              monthsCollection.push(keysMonths);\r\n            },\r\n\r\n            nestedError => {\r\n              setError(\"Błąd\");\r\n            }\r\n          );\r\n        });\r\n\r\n        const months = [...monthsCollection]\r\n          .map((monthsInYear, idx) => {\r\n            return monthsInYear.map((month: any) => {\r\n              return keysYears[idx] + \"-\" + month;\r\n            });\r\n          })\r\n          .flat()\r\n          .reverse();\r\n\r\n        setDatabaseListMonths(months);\r\n      },\r\n      error => {\r\n        setError(\"Błąd\");\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  return {\r\n    databaseListMonths,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useDatabaseListMonths;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getListMonths,\r\n  getListMonthsError,\r\n  getListMonthsIsLoading,\r\n} from \"../../redux/storeFeatures/listMonthsSlice\";\r\n// import { useListMonthsQuery } from \"../../services/apiSliceMonths\";\r\nimport useDatabaseListMonths from \"../useDatabaseListMonths\";\r\n\r\nconst useReduxListMonths = () => {\r\n  const dispatch = useDispatch();\r\n  const { databaseListMonths, error } = useDatabaseListMonths();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getListMonths(databaseListMonths));\r\n    // dispatch(getListMonths(data));\r\n    // dispatch(getListMonthsError(error));\r\n\r\n    // dispatch(getListMonthsIsLoading(isLoading));\r\n  }, [databaseListMonths, dispatch]);\r\n};\r\n\r\nexport default useReduxListMonths;\r\n\r\n\r\n\r\n\r\n\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(9);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return { monthURLStringFormat };\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return { monthURLStringFormat };\r\n  }\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n"],"names":["dispatch","useDispatch","header","useSelector","state","alert","_jsx","_Fragment","children","Alert","action","printAlert","isPrinted","props","id","className","onClick","e","_e$target","_e$target2","target","setIsPrinted","handleClose","style","height","zIndex","backgroundColor","_jsxs","includes","Button","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","gradientValue","allHours","gradientBackground","concat","inputsValues","map","value","Form","Group","Range","name","min","max","onChange","onBlur","background","_props$calcHours","_props$calcHours2","_props$calcHours3","_props$calcHours4","content","monthPanel","month","calcHours","submittedHours","acceptedHours","styles","width","InputsText","inputsData","type","isErrorPrint","yearValue","monthValue","_useURLValues","useURLValues","_useAddAllHoursMutati","yearFromURL","monthFromURL","useAddAllHoursMutation","_useAddAllHoursMutati2","_slicedToArray","addAllHours","success","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","t0","year","_objectSpread","currentHours","stop","_x","apply","arguments","initialValues","_props$monthDate$slic","_props$monthDate","_props$monthDate$slic2","_props$monthDate2","monthDate","slice","useAllHoursQuery","data","_useFormikHours","useFormikHours","btnContent","useHTTPState","AiOutlinePlusCircle","fontSize","Formik","FormHoursTop","InputsRange","FormHoursError","disabled","isLoading","touched","errors","label","placeholder","Label","htmlFor","Control","size","minHeight","FormErrors","_useUsersQuery","useUsersQuery","error","useEffect","geListtUsers","getListUsersError","getListUsersIsLoading","databaseMonthsDatesToString","useMonthDates","listMonths","monthURL","monthURLToDateFormat","isMonthInURL","Date","curMonthURLStringFormat","Intl","DateTimeFormat","timeZone","format","ListGroup","Item","idx","Link","to","firstOption","options","Select","cursor","option","_month$calcHours","hours","dataUsers","listUsers","users","names","userName","dataInputsSelect","length","dataInputsText","dateInNext_14_Days","dateInNext_60_Days","validationSchema","yup","test","required","place","_useAddDayMutation","useAddDayMutation","_useAddDayMutation2","addDay","date","userColor","validation","_month$calcHours2","_listUsers$find","valuesToDatabase","find","user","UUID","monthBody","columns","days","_toConsumableArray","_useDataFormDay","useDataFormDay","_useFormikDay","useFormikDay","InputsSelect","FormDayButton","undefined","monthPattern","rejectedHours","useNavigate","_useUpdateMonthMutati","useUpdateMonthMutation","_useUpdateMonthMutati2","updateMonth","_useDeleteMonthMutati","useDeleteMonthMutation","useValidationMonthForm","_useState","useState","_useState2","setIsSuccess","_useState3","_useState4","setFormValues","currYearDigits","currMonthDigits","isSuccess","_useFormikMonth","useFormikMonth","dataInputs","usersNames","UsersColors","_ref2","toUpperCase","_useAddUserMutation","useAddUserMutation","_useAddUserMutation2","addUser","useValidationUserForm","resetForm","userValues","sortedUsers","sort","a","b","localeCompare","_x2","_useFormikUser","useFormikUser","isOpen","setOpen","variant","transition","title","MdOutlineKeyboardArrowDown","transform","transitionDuration","Collapse","in","_monthURLStringFormat","monthURLStringFormat","useMonthURLToString","monthStringCapitalize","printFormDay","FormHoursContext","FormDayContext","dataMonthPanel","CollapseContainer","CollapseMonthsList","dataSettings","FormMonthContext","FormUserContext","pathname","useLocation","_useDataSidebar","useDataSidebar","Offcanvas","Body","component","React","Header","closeButton","toggleShow","navigate","setIsLoading","RiLogoutBoxLine","Spinner","animation","AlertErrors","auth","signOut","then","catch","message","finally","history","createBrowserHistory","back","ImArrowLeft","SettingsReturnButton","AiTwotoneSetting","SidebarLogout","useReduxListUsers","useReduxListMonths","isShow","setShow","windowWidth","useWindowWidth","printSidebar","show","onHide","scroll","backdrop","maxWidth","SidebarHeader","SidebarBody","SidebarNav","SidebarMenuButton","today","formatDate","getFullYear","String","getMonth","padStart","day","getDate","futureDateInNext_14_Days","getTime","futureDateInNext_60_Days","reference","ref","database","setError","databaseListMonths","setDatabaseListMonths","unsubscribe","onValue","snapshot","keysYears","monthsCollection","forEach","firstLevelSnapshot","firstLevelKey","key","push","nestedKeysRef","nestedSnapshot","keysMonths","nestedKeySnapshot","nestedKey","nestedError","months","monthsInYear","flat","reverse","_useDatabaseListMonth","useDatabaseListMonths","getListMonths","btnText","monthToDateFormat","_Intl$DateTimeFormat","split","window","innerWidth","setWindowWidth","handleResize","addEventListener","removeEventListener"],"sourceRoot":""}