{"version":3,"file":"static/js/676.3a9bd15f.chunk.js","mappings":"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","sources":["components/sidebar/sidebarMonthList/SidebarMonthsList.tsx","components/sidebar/SidebarMonthCollapse.tsx","components/sidebar/SidebarTitle.tsx","components/sidebar/sidebarDayForm/useDataSidebarSelects.tsx","components/sidebar/sidebarDayForm/validationSidebarDayFormik.tsx","components/sidebar/sidebarDayForm/useSidebarDayFormik.tsx","components/sidebar/sidebarDayForm/SidebarDayForm.tsx","components/sidebar/sidebarMonthForm/dataSidebarMonthForm.tsx","components/sidebar/sidebarMonthForm/useValidationSidebarMonthForm.tsx","components/sidebar/sidebarMonthForm/useSidebarMonthFormik.tsx","components/sidebar/sidebarMonthForm/SidebarMonthForm.tsx","useReduxDatabase.tsx","components/sidebar/IndexSidebar.tsx","data/dataCurrentDates.tsx","data/firebaseConfig.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useURLValues.tsx","utils/alertHelpers.tsx"],"sourcesContent":["import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_monthList.scss\";\r\n\r\nconst SidebarMonthsList = () => {\r\n  const { sortedInfoMonths, databaseMonthsDatesToString } = useMonthDates();\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n  const { monthURL, isMonthInURL } = useURLValues();\r\n\r\n  const monthURLToDateFormat = isMonthInURL ? new Date(monthURL) : null;\r\n\r\n  const curMonthURLStringFormat =\r\n    monthURLToDateFormat &&\r\n    new Intl.DateTimeFormat(\"pl-PL\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      timeZone: \"UTC\",\r\n    }).format(monthURLToDateFormat);\r\n\r\n  return (\r\n    <ListGroup className=\"monthListContainer bg-white rounded-0 border border-primary\">\r\n      {!infoMonths || infoMonths.length === 0 ? (\r\n        <p className=\"py-1 px-2 text-warning text-center\">Brak danych</p>\r\n      ) : (\r\n        databaseMonthsDatesToString?.map((month: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item key={month} className=\"border-0 p-0 px-1\">\r\n              <Link\r\n                to={`/${sortedInfoMonths?.[idx]}`}\r\n                className={`${\r\n                  curMonthURLStringFormat !== month || !curMonthURLStringFormat\r\n                    ? \"text-reset\"\r\n                    : \"text-warning\"\r\n                } text-decoration-none text-capitalize`}\r\n              >\r\n                {month}\r\n              </Link>\r\n            </ListGroup.Item>\r\n          );\r\n        })\r\n      )}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default SidebarMonthsList;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport SidebarMonthsList from \"./sidebarMonthList/SidebarMonthsList\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\n\r\nconst SidebarMonthCollapse = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n        size=\"sm\"\r\n        className=\"p-0 px-1 border border-primary w-100 mt-1 text-start bg-white fw-medium d-flex justify-content-between align-items-center\"\r\n      >\r\n        Wybierz miesiąc\r\n        <MdOutlineKeyboardArrowDown\r\n          className=\"fs-3 me-1\"\r\n          style={{\r\n            transform: `${open ? \"rotate(180deg)\" : \"\"} `,\r\n            transitionDuration: \"320ms\",\r\n          }}\r\n        />\r\n      </Button>\r\n      <Collapse in={open}>\r\n        <div>\r\n          <SidebarMonthsList />\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarMonthCollapse;\r\n","import { useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\nimport { alert } from \"../../utils/alertHelpers\";\r\n\r\nconst SidebarTitle = () => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const logout = () => {\r\n    setIsLoading(true);\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        navigate(\"/\");\r\n      })\r\n      .catch(error => alert(error))\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  let btnContent = <div className=\"text-start w-100\">Wyloguj</div>;\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"secondary\"\r\n        className=\"mx-auto\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      onClick={logout}\r\n      className=\"fw-bolder text-info p-0 bg-transparent border-0 w-50\"\r\n      style={{\r\n        cursor: \"pointer\",\r\n        fontSize: \"0.8rem\",\r\n      }}\r\n      disabled={isLoading}\r\n    >\r\n      {btnContent}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SidebarTitle;\r\n","import { useUsersQuery } from \"../../../services/apiSliceUsers\";\r\nimport { ModelUser } from \"../../../pages/settings/settingsUserForm/useSettingsUserFormik\";\r\n\r\nconst useDataSidebarSelects = () => {\r\n  const { data: dataUsers } = useUsersQuery();\r\n\r\n  const users = dataUsers ? dataUsers : [];\r\n\r\n  const names = users?.map(({ userName }: ModelUser) => {\r\n    return userName;\r\n  });\r\n\r\n  const dataSelects = [\r\n    {\r\n      name: \"userName\",\r\n      firstOption: `${names.length === 0 ? \"Zapisz w ustawieniach\" : \"Imię\"}`,\r\n      labelText: \"Podaj imię\",\r\n      options: names,\r\n    },\r\n    {\r\n      name: \"hours\",\r\n      firstOption: \"Liczba godzin\",\r\n      labelText: \"Podaj liczbę godzin\",\r\n      options: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n    },\r\n\r\n    {\r\n      name: \"place\",\r\n      firstOption: \"Lokalizacja\",\r\n      labelText: \"Podaj lokalizację\",\r\n      options: [\"Wewnątrz\", \"Poza\"],\r\n    },\r\n  ];\r\n\r\n  return { dataSelects };\r\n};\r\nexport default useDataSidebarSelects;\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n  userName: yup\r\n    .string()\r\n    .test(\"is-name-valid\", \"Imię wymagane\", value => value !== \"Imię\")\r\n    .required(\"Imię wymagane\"),\r\n  hours: yup\r\n    .string()\r\n    .test(\r\n      \"is-hours-valid\",\r\n      \"Liczba godzin wymagana\",\r\n      value => value !== \"Liczba godzin\"\r\n    )\r\n    .required(\"Liczba godzin wymagana\"),\r\n  place: yup\r\n    .string()\r\n    .test(\r\n      \"is-place-valid\",\r\n      \"Lokalizacja wymagana\",\r\n      value => value !== \"Lokalizacja\"\r\n    )\r\n    .required(\"Lokalizacja wymagana\"),\r\n});\r\n","import { useFormik } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { dateInNext14Days } from \"../../../data/dataCurrentDates\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { ModelUser } from \"../../../pages/settings/settingsUserForm/useSettingsUserFormik\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  useAddDayMutation\r\n} from \"../../../services/apiSliceMonths\";\r\nimport { validationSchema } from \"./validationSidebarDayFormik\";\r\n\r\ninterface ModelDay {\r\n  id: string;\r\n  date: string;\r\n  hours: string;\r\n  userName: string;\r\n  place: string;\r\n  userColor: string;\r\n}\r\n\r\nconst useSidebarDayFormik = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const { users } = useSelector((state: RootState) => state.users);\r\n  const [addDay, success] = useAddDayMutation();\r\n  const firstColumn = month && month?.columns?.[0];\r\n\r\n  const formik = useFormik<ModelDay>({\r\n    initialValues: {\r\n      id: \"\",\r\n      date: dateInNext14Days,\r\n      hours: \"\",\r\n      userName: \"\",\r\n      place: \"\",\r\n      userColor: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async values => {\r\n      if (\r\n        month?.calc?.currentHours - +values.hours < 0 ||\r\n        month?.calc?.currentHours === 0\r\n      )\r\n        return;\r\n\r\n      const userColor = users?.find((user: ModelUser) => {\r\n        return user.userName === values.userName;\r\n      })?.userColor;\r\n\r\n      const valuesToDatabase = {\r\n        ...values,\r\n        id: crypto.randomUUID(),\r\n        hours: +values.hours,\r\n        userColor: userColor || \"\",\r\n      };\r\n\r\n      await addDay({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        firstColumnBody: {\r\n          ...firstColumn,\r\n          days: firstColumn?.days\r\n            ? [...firstColumn.days, valuesToDatabase]\r\n            : [valuesToDatabase],\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  return { formik, success };\r\n};\r\n\r\nexport default useSidebarDayFormik;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  dateInNext14Days,\r\n  dateInNext60Days,\r\n} from \"../../../data/dataCurrentDates\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_dayForm.scss\";\r\nimport useDataSidebarSelects from \"./useDataSidebarSelects\";\r\nimport useSidebarDayFormik from \"./useSidebarDayFormik\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\n\r\nconst SidebarDayForm = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const { dataSelects } = useDataSidebarSelects();\r\n  const { formik, success } = useSidebarDayFormik();\r\n  const { btnContent } = useHTTPState(success, \"Zapisz dzień\");\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  const allHours = month?.calc?.allHours;\r\n  const currentHours = month?.calc?.currentHours;\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={formik.handleSubmit}\r\n      className={`mt-2 ${!month || !isMonthInURL ? \"d-none\" : \"\"} ${\r\n        allHours === 0 ? \"formContainer\" : \"\"\r\n      }`}\r\n    >\r\n      {dataSelects.map(({ name, firstOption, labelText, options }) => {\r\n        return (\r\n          <Form.Group key={labelText}>\r\n            <Form.Label htmlFor={name} className=\"mb-0 fs-7\">\r\n              {labelText}\r\n            </Form.Label>\r\n\r\n            <Form.Select\r\n              id={name}\r\n              name={name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"sm\"\r\n              className={`p-0 px-1 border border-primary ${\r\n                firstOption === \"Zapisz w ustawieniach\" ? \"text-danger\" : \"\"\r\n              }`}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <option>{firstOption}</option>\r\n\r\n              {options?.map((option: string | number) => {\r\n                return (\r\n                  <option key={option} value={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Select>\r\n\r\n            <div\r\n              className=\"text-danger d-block mt-0 fs-8\"\r\n              style={{ height: \"0.7rem\" }}\r\n            >\r\n              {formik.touched[name as keyof typeof formik.touched] &&\r\n                formik.errors[name as keyof typeof formik.touched] &&\r\n                formik.errors[name as keyof typeof formik.touched]}\r\n            </div>\r\n          </Form.Group>\r\n        );\r\n      })}\r\n\r\n      <Form.Group>\r\n        <Form.Label htmlFor=\"date\" className=\"mb-0 fs-7\">\r\n          Podaj dzień\r\n        </Form.Label>\r\n        <Form.Control\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={formik.values.date}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          min={dateInNext14Days}\r\n          max={dateInNext60Days}\r\n          placeholder=\"Liczba\"\r\n          size=\"sm\"\r\n          className=\"p-0 px-1 border border-primary\"\r\n          style={{ minHeight: 0, cursor: \"pointer\" }}\r\n        />\r\n        <div\r\n          className=\"text-danger d-block mt-0 fs-8\"\r\n          style={{ height: \"0.7rem\" }}\r\n        >\r\n          {formik.touched.date && formik.errors.date && formik.errors.date}\r\n        </div>\r\n      </Form.Group>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        disabled={success.isLoading}\r\n        className=\"fw-medium w-100 mt-2 bg-info text-white\"\r\n      >\r\n        {btnContent}\r\n      </Button>\r\n\r\n      <div\r\n        className=\"text-danger d-block mt-0 fs-8\"\r\n        style={{ height: \"0.7rem\" }}\r\n      >\r\n        {currentHours - +formik.values.hours < 0 || currentHours === 0\r\n          ? \"Brak dostępnych godzin\"\r\n          : \"\"}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SidebarDayForm;\r\n","export interface ModelDay {\r\n  id: string;\r\n  userName: string;\r\n  userColor: string;\r\n  date: string;\r\n  hours: number;\r\n  place: string;\r\n}\r\n\r\nexport interface ModelColumn {\r\n  id: string;\r\n  days: ModelDay[];\r\n}\r\n\r\nexport interface ModelCalc {\r\n  allHours: number;\r\n  currentHours: number;\r\n  submittedHours: number;\r\n  acceptedHours: number;\r\n  rejectedHours: number;\r\n}\r\n\r\nexport interface ModelMonthPattern {\r\n  id: string;\r\n  columns: ModelColumn[];\r\n  calc: ModelCalc;\r\n}\r\n\r\nexport interface ModelMonthsPatern {\r\n  [key: string]: {\r\n    [key: string]: ModelMonthPattern\r\n  };\r\n}\r\n\r\nconst columns: ModelColumn[] = [\r\n  { id: \"submitted\", days: [] },\r\n  { id: \"accepted\", days: [] },\r\n  { id: \"rejected\", days: [] },\r\n];\r\n\r\nconst calc: ModelCalc = {\r\n  allHours: 0,\r\n  currentHours: 0,\r\n  submittedHours: 0,\r\n  acceptedHours: 0,\r\n  rejectedHours: 0,\r\n};\r\n\r\nexport const monthPattern: ModelMonthPattern = {\r\n  id: \"\",\r\n  columns,\r\n  calc,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useValidationSidebarMonthForm = () => {\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n\r\n  const validationSchema = yup.object({\r\n    monthDate: yup\r\n      .string()\r\n      .test(\r\n        \"is-in-database\",\r\n        \"Miesiąc zapisany\",\r\n        value => value !== undefined && !infoMonths?.includes(value)\r\n      ),\r\n  });\r\n\r\n  return { validationSchema };\r\n};\r\n\r\nexport default useValidationSidebarMonthForm;\r\n","import { useFormik } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  currMonthDigits,\r\n  currYearDigits,\r\n} from \"../../../data/dataCurrentDates\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  useDeleteMonthMutation,\r\n  useUpdateMonthInfoMutation,\r\n  useUpdateMonthMutation\r\n} from \"../../../services/apiSliceMonths\";\r\nimport { alert } from \"../../../utils/alertHelpers\";\r\nimport { ModelMonthPattern, monthPattern } from \"./dataSidebarMonthForm\";\r\nimport useValidationSidebarMonthForm from \"./useValidationSidebarMonthForm\";\r\ninterface ModelFormValues {\r\n  monthDate: string;\r\n}\r\n\r\nconst useSidebarMonthFormik = () => {\r\n  const navigate = useNavigate();\r\n  const [updateMonth, success] = useUpdateMonthMutation()\r\n  const [updateMonthInfo] = useUpdateMonthInfoMutation();\r\n  const [deleteMonth] = useDeleteMonthMutation();\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n  const { validationSchema } = useValidationSidebarMonthForm();\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const formik = useFormik<ModelFormValues>({\r\n    initialValues: { monthDate: `${currYearDigits}-${currMonthDigits}` },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async values => {\r\n      const year = values.monthDate.slice(0, 4);\r\n      const month = values.monthDate.slice(-2);\r\n      const monthBody: ModelMonthPattern = {\r\n        ...monthPattern,\r\n        id: values.monthDate,\r\n      };\r\n\r\n      await updateMonth({ year, month, monthBody });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (success.isSuccess) {\r\n      setIsSuccess(true);\r\n    } else setIsSuccess(false);\r\n  }, [success.isSuccess]);\r\n\r\n  useEffect(() => {\r\n    const executeAddMonthInfo = async () => {\r\n      if (isSuccess) {\r\n        const year = formik.values.monthDate.slice(0, 4);\r\n        const month = formik.values.monthDate.slice(-2);\r\n        const months = infoMonths ? infoMonths : [];\r\n        await updateMonthInfo([...months, `${year}-${month}`]);\r\n        navigate(`/${formik.values.monthDate}`);\r\n      } else if (success.isError) {\r\n        const year = formik.values.monthDate.slice(0, 4);\r\n        const month = formik.values.monthDate.slice(-2);\r\n        await deleteMonth({ year, month });\r\n        alert(\"\");\r\n      }\r\n    };\r\n\r\n    executeAddMonthInfo();\r\n  }, [isSuccess, updateMonthInfo]);\r\n\r\n  return { formik, success };\r\n};\r\n\r\nexport default useSidebarMonthFormik;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {\r\n  currMonthDigits,\r\n  currYearDigits,\r\n} from \"../../../data/dataCurrentDates\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport useSidebarMonthFormik from \"./useSidebarMonthFormik\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\nconst SidebarMonthForm = () => {\r\n  const { formik, success } = useSidebarMonthFormik();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle className=\"text-info\" style={{ fontSize: \"1.4rem\" }} />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formik.handleSubmit} className=\"mt-1\">\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"monthDate\" className=\"mb-0 fs-7\">\r\n            Podaj miesiąc\r\n          </Form.Label>\r\n          <div className=\"d-flex\">\r\n            <Form.Control\r\n              id=\"monthDate\"\r\n              type=\"month\"\r\n              name=\"monthDate\"\r\n              min={`${currYearDigits}-${currMonthDigits}`}\r\n              max=\"2025-12\"\r\n              value={formik.values.monthDate}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              size=\"sm\"\r\n              className=\"p-0 px-1 d-block border border-primary text-capitalize\"\r\n              style={{ minHeight: 0, height: \"fit-content\", cursor: \"pointer\" }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={success.isLoading}\r\n              className=\"col-2 d-flex justify-content-center align-items-center m-0 justify-content-center p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n            >\r\n              {btnContent}\r\n            </Button>\r\n          </div>\r\n        </Form.Group>\r\n        <Form.Text\r\n          className=\"text-danger d-block mt-0 lh-0\"\r\n          style={{ fontSize: \"0.6rem\", height: \"0.7rem\" }}\r\n        >\r\n          {formik.touched.monthDate &&\r\n            formik.errors.monthDate &&\r\n            formik.errors.monthDate}\r\n        </Form.Text>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarMonthForm;\r\n","import { useDispatch } from \"react-redux\";\r\nimport useURLValues from \"./hooks/useURLValues\";\r\nimport {\r\n  useMonthDataQuery,\r\n  useMonthsInfoQuery,\r\n} from \"./services/apiSliceMonths\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"./redux/storeFeatures/monthsPanelSlice\";\r\nimport { useUsersQuery } from \"./services/apiSliceUsers\";\r\nimport {\r\n  getUsers,\r\n  getUsersError,\r\n  getUsersIsLoading,\r\n} from \"./redux/storeFeatures/usersSlice\";\r\nimport {\r\n  getInfoMonths,\r\n  getInfoMonthError,\r\n  getInfoMonthIsLoading,\r\n} from \"./redux/storeFeatures/infoMonthsSlice\";\r\n\r\nconst useReduxDatabase = () => {\r\n  const dispatch = useDispatch();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n  const {\r\n    data: dataUsers,\r\n    error: errorUsers,\r\n    isLoading: isLoadingUsers,\r\n  } = useUsersQuery();\r\n  const {\r\n    data: dataInfoMonths,\r\n    error: errorInfoMonths,\r\n    isLoading: isLoadingInfoMonths,\r\n  } = useMonthsInfoQuery();\r\n\r\n  useEffect(() => {\r\n    dispatch(getMonth(data));\r\n    dispatch(getMonthError(error));\r\n    dispatch(getMonthIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers(dataUsers));\r\n    dispatch(getUsersError(errorUsers));\r\n    dispatch(getUsersIsLoading(isLoadingUsers));\r\n  }, [dataUsers, errorUsers, isLoadingUsers, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getInfoMonths(dataInfoMonths));\r\n    dispatch(getInfoMonthError(errorInfoMonths));\r\n    dispatch(getInfoMonthIsLoading(isLoadingInfoMonths));\r\n  }, [dataInfoMonths, errorInfoMonths, isLoadingInfoMonths, dispatch]);\r\n\r\n  return {};\r\n};\r\n\r\nexport default useReduxDatabase;\r\n","import \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport { AiTwotoneSetting } from \"react-icons/ai\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  getInfoMonthError,\r\n  getInfoMonthIsLoading,\r\n  getInfoMonths,\r\n} from \"../../redux/storeFeatures/infoMonthsSlice\";\r\nimport { useMonthsInfoQuery } from \"../../services/apiSliceMonths\";\r\nimport SidebarMonthCollapse from \"./SidebarMonthCollapse\";\r\nimport SidebarTitle from \"./SidebarTitle\";\r\nimport SidebarDayForm from \"./sidebarDayForm/SidebarDayForm\";\r\nimport SidebarMonthForm from \"./sidebarMonthForm/SidebarMonthForm\";\r\nimport useReduxDatabase from \"../../useReduxDatabase\";\r\n\r\nconst IndexSidebar = () => {\r\n  useReduxDatabase();\r\n  const { pathname } = useLocation();\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const toggleShow = () => setShow(s => !s);\r\n\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    windowWidth > 575 && setShow(true);\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <>\r\n      {![\"/\"].includes(pathname) ? (\r\n        <aside>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={toggleShow}\r\n            className={`me-2 p-2 mt-1  ${\r\n              windowWidth > 575 ? \"d-none\" : \"d-block\"\r\n            }`}\r\n            style={{ position: \"absolute\", right: 0, borderRadius: \"50%\" }}\r\n          >\r\n            <GiHamburgerMenu className=\"fs-1\" />\r\n          </Button>\r\n\r\n          <Offcanvas\r\n            show={show}\r\n            onHide={handleClose}\r\n            name=\"Disable backdrop\"\r\n            scroll={true}\r\n            backdrop={false}\r\n            className=\"bg-primary-subtle\"\r\n            style={{ width: 220 }}\r\n          >\r\n            <Offcanvas.Header className=\"pb-0\">\r\n              <SidebarTitle />\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body className=\"d-flex flex-column pt-0\">\r\n              <SidebarMonthForm />\r\n              <SidebarMonthCollapse />\r\n              <SidebarDayForm />\r\n\r\n              <Link\r\n                to=\"/ustawienia\"\r\n                className=\"text-info mt-auto fw-medium text-decoration-none \"\r\n              >\r\n                <AiTwotoneSetting /> Ustawienia\r\n              </Link>\r\n            </Offcanvas.Body>\r\n          </Offcanvas>\r\n        </aside>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexSidebar;\r\n","const today = new Date();\r\n\r\nconst formatDate = (date: Date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst futureDateInNext14Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\r\nconst futureDateInNext60Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\r\n\r\nexport const currYearDigits = today.getFullYear();\r\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\r\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\r\nexport const currDateDigits = formatDate(today);\r\n\r\nexport const dateInNext14Days = formatDate(futureDateInNext14Days);\r\nexport const dateInNext60Days = formatDate(futureDateInNext60Days);\r\n\r\n\r\n\r\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  timeZone: \"UTC\",\r\n}).format(today);\r\n","\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase, ref, get } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAvvdzLRow-8AdA5zJH6uv19MOsPLNwC3A\",\r\n  authDomain: \"godziny-3b30f.firebaseapp.com\",\r\n  projectId: \"godziny-3b30f\",\r\n  storageBucket: \"godziny-3b30f.appspot.com\",\r\n  messagingSenderId: \"367174950216\",\r\n  appId: \"1:367174950216:web:0bd1ea3c1c77b5e797677d\",\r\n};\r\n\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app); \r\nexport const database = getDatabase(app);\r\n","import Swal from \"sweetalert2\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface ModelSuccess {\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  error?: any;\r\n}\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  useEffect(() => {\r\n    if (success.isError) {\r\n      const error = success.error;\r\n      const errMsg = error && \"status\" in error && error.status && error.status;\r\n\r\n      Swal.fire({\r\n        text: `Błąd: ${errMsg || \"\"}`,\r\n        confirmButtonColor: \"rgb(31, 180, 255)\",\r\n      });\r\n    }\r\n  }, [success.isError]);\r\n\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n\r\n  const sortedInfoMonths = infoMonths && [...infoMonths]?.sort(\r\n    (a: string, b: string) => {\r\n      const dateA = new Date(a).getTime();\r\n      const dateB = new Date(b).getTime();\r\n\r\n      return dateA - dateB;\r\n    }\r\n  );\r\n\r\n \r\n\r\n  const databaseMonthsDatesToString = sortedInfoMonths?.map(\r\n    (monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    }\r\n  );\r\n\r\n  return { sortedInfoMonths, databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const alertHelper = (message: string) => {\r\n  return {\r\n    title: message,\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Tak\",\r\n    cancelButtonText: \"Nie\",\r\n  };\r\n};\r\n\r\nexport const alert = (error:string) => {\r\n  Swal.fire({\r\n    text: `Błąd ${error}`,\r\n    confirmButtonColor: \"rgb(31, 180, 255)\",\r\n  });\r\n}\r\n"],"names":["_useMonthDates","useMonthDates","sortedInfoMonths","databaseMonthsDatesToString","infoMonths","useSelector","state","_useURLValues","useURLValues","monthURL","monthURLToDateFormat","isMonthInURL","Date","curMonthURLStringFormat","Intl","DateTimeFormat","year","month","timeZone","format","_jsx","ListGroup","className","children","length","map","idx","Item","Link","to","concat","_useState","useState","_useState2","_slicedToArray","open","setOpen","_jsxs","_Fragment","Button","onClick","size","MdOutlineKeyboardArrowDown","style","transform","transitionDuration","Collapse","in","SidebarMonthsList","navigate","useNavigate","isLoading","setIsLoading","btnContent","Spinner","animation","variant","auth","signOut","then","catch","error","alert","finally","cursor","fontSize","disabled","dataUsers","useUsersQuery","data","users","names","_ref","userName","dataSelects","name","firstOption","labelText","options","validationSchema","yup","test","value","required","hours","place","_month$columns","yearFromURL","monthFromURL","monthsPanel","_useAddDayMutation","useAddDayMutation","_useAddDayMutation2","addDay","success","firstColumn","columns","formik","useFormik","initialValues","id","date","dateInNext14Days","userColor","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_month$calc","_month$calc2","_users$find","valuesToDatabase","wrap","_context","prev","next","calc","currentHours","abrupt","find","user","_objectSpread","crypto","randomUUID","firstColumnBody","days","_toConsumableArray","stop","_x","apply","arguments","useDataSidebarSelects","_useSidebarDayFormik","useSidebarDayFormik","useHTTPState","allHours","Form","handleSubmit","Group","Label","htmlFor","Select","onChange","handleChange","onBlur","handleBlur","option","height","touched","errors","Control","type","min","max","dateInNext60Days","placeholder","minHeight","monthPattern","submittedHours","acceptedHours","rejectedHours","monthDate","undefined","includes","_useUpdateMonthMutati","useUpdateMonthMutation","_useUpdateMonthMutati2","updateMonth","_useUpdateMonthInfoMu","useUpdateMonthInfoMutation","updateMonthInfo","_useDeleteMonthMutati","useDeleteMonthMutation","deleteMonth","useValidationSidebarMonthForm","isSuccess","setIsSuccess","currYearDigits","currMonthDigits","monthBody","slice","useEffect","executeAddMonthInfo","_callee2","months","_year","_month","_context2","isError","_useSidebarMonthFormi","useSidebarMonthFormik","AiOutlinePlusCircle","Text","dispatch","useDispatch","_useMonthDataQuery","useMonthDataQuery","_useUsersQuery","errorUsers","isLoadingUsers","_useMonthsInfoQuery","useMonthsInfoQuery","dataInfoMonths","errorInfoMonths","isLoadingInfoMonths","getMonth","getMonthError","getMonthIsLoading","getUsers","getUsersError","getUsersIsLoading","getInfoMonths","getInfoMonthError","getInfoMonthIsLoading","useReduxDatabase","pathname","useLocation","show","setShow","_useState3","window","innerWidth","_useState4","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","s","position","right","borderRadius","GiHamburgerMenu","Offcanvas","onHide","scroll","backdrop","width","Header","SidebarTitle","Body","SidebarMonthForm","SidebarMonthCollapse","SidebarDayForm","AiTwotoneSetting","today","formatDate","getFullYear","String","padStart","day","getDate","futureDateInNext14Days","getTime","futureDateInNext60Days","currMonthDateToString","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getDatabase","btnText","errMsg","status","Swal","text","confirmButtonColor","sort","a","b","monthToDateFormat","split","alertHelper","message","title","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText"],"sourceRoot":""}