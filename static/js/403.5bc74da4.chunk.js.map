{"version":3,"file":"static/js/403.5bc74da4.chunk.js","mappings":"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","sources":["components/AlertErrors.tsx","components/alert/buttonsAlert/ButtonAlertAccept.tsx","components/alert/buttonsAlert/ButtonAlertDelete.tsx","components/alert/Alert.tsx","components/buttonForm/ButtonForm.tsx","components/inputs/inputError/InputError.tsx","components/inputs/inputsText/labelCover/InputsCover.tsx","components/inputs/inputsText/InputsTextLabel.tsx","components/inputs/inputsText/InputsText.tsx","data/dataCurrentDates.tsx","hooks/useBtnContent.tsx","pages/login/formLoginContext/useFormikLogin.tsx","pages/login/formLoginContext/InputAccessability.tsx","pages/login/formLoginContext/FormLoginContext.tsx","pages/login/indexLogin/IndexLogin.tsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport Alert from \"./alert/Alert\";\nimport { RootState } from \"../redux/store\";\nimport { useSelector } from \"react-redux\";\nimport { printAlert } from \"../redux/storeFeatures/alertSlice\";\nconst AlertErrors = () => {\n  const dispatch = useDispatch();\n  const {\n    header\n  } = useSelector((state: RootState) => state.alert);\n  const closeAlert = () => {\n    dispatch(printAlert(\"\"));\n  };\n  if (!header) return null;\n  return <Alert action={closeAlert} isPrinted={true} header={header} />;\n};\nexport default AlertErrors;","import Button from \"react-bootstrap/Button\";\ntype Props = {\n  action: () => void;\n};\nconst ButtonAlertAccept = (props: Props) => {\n  return <Button id=\"noButton\" className=\"_radius bg-primary border-0 px-5 ms-4\" onClick={props.action}>\r\n      Ok\r\n    </Button>;\n};\nexport default ButtonAlertAccept;","import Button from \"react-bootstrap/Button\";\ntype Props = {\n  action: () => void;\n};\nconst ButtonAlertDelete = (props: Props) => {\n  return <>\r\n      <Button id=\"noButton\" className=\"_radius bg-dark border-0 px-4 px-sm-5\">\r\n        Nie\r\n      </Button>\r\n      <Button onClick={props.action} className=\"_radius bg-primary border-0 px-4 px-sm-5 ms-4\">\r\n        Tak\r\n      </Button>\r\n    </>;\n};\nexport default ButtonAlertDelete;","import { printAlert } from \"../../redux/storeFeatures/alertSlice\";\nimport { useDispatch } from \"react-redux\";\nimport \"./_alert.scss\";\nimport ButtonAlertAccept from \"./buttonsAlert/ButtonAlertAccept\";\nimport ButtonAlertDelete from \"./buttonsAlert/ButtonAlertDelete\";\nimport { memo, useEffect } from \"react\";\ntype Props = {\n  action: () => void;\n  isPrinted: boolean;\n  header: string;\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\n};\nconst Alert = memo((props: Props) => {\n  const dispatch = useDispatch();\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)) return;\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\n    dispatch(printAlert(\"\"));\n  };\n  if (!props.isPrinted) return null;\n  return <>\r\n      <div id=\"opacityContainer\" className=\"fixed-top _d-center _alert\" onClick={handleClose}>\r\n        <div className={`p-5 bg-white _radius text-center fs-2 fw-medium _anim-dropDown`}>\r\n          {props.header}\r\n          <div className=\"_w-fitContent m-auto mt-4\">\r\n            {props.header.includes(\"Usunąć\") ? <ButtonAlertDelete action={props.action} /> : <ButtonAlertAccept action={props.action} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>;\n});\nexport default Alert;","import Button from \"react-bootstrap/Button\";\nimport \"./_buttonForm.scss\";\nimport useBtnContent from \"../../hooks/useBtnContent\";\nimport \"./_buttonForm.scss\";\nimport { memo } from \"react\";\ntype Props = {\n  isLoading: boolean;\n  text?: string;\n  styles?: string;\n};\nconst ButtonForm = memo((props: Props) => {\n  const buttonText = props.text ? <div>{props.text}</div> : <div>Zapisz</div>;\n  const {\n    btnContent\n  } = useBtnContent(props?.isLoading, buttonText);\n  return <Button type=\"submit\" variant=\"primary\" disabled={props?.isLoading} className={`_d-center w-50 p-0 py-1 mt-2 ms-auto _radius  _fw-semiBold _fs-primary _buttonForm position-relative ${props.styles}`}>\r\n      <div className=\"invisible\">Z</div>\r\n      <div className=\"_buttonForm__content _d-center\">{btnContent}</div>\r\n    </Button>;\n});\nexport default ButtonForm;","import { FormikTouched, FormikErrors } from \"formik\";\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\nimport \"./_inputError.scss\";\ntype Props = {\n  value: string;\n  errors: FormikErrors<ModelDay>;\n  touched: FormikTouched<ModelDay>;\n};\nconst InputError = (props: Props) => {\n  return <div className=\"text-danger d-block mt-0 fs-5 ps-2 _inputError\">\r\n      {props.touched[(props.value as keyof typeof props.touched)] && props.errors[(props.value as keyof typeof props.touched)] && props.errors[(props.value as keyof typeof props.touched)]}\r\n    </div>;\n};\nexport default InputError;","import { useContext, useState } from \"react\";\nimport \"./_inputsCover.scss\";\nimport { LabelContext } from \"../InputsText\";\nconst InputsCover = () => {\n  const [isPrinted, setPrinted] = useState(true);\n  const {\n    labelCover\n  } = useContext(LabelContext);\n  const handleDelete = () => {\n    setPrinted(false);\n  };\n  if (!isPrinted) return null;\n  return <div onClick={handleDelete} className=\"_inputsCover w-100 p-2  bg-secondary-light _fs-primary text-light-emphasis  _radius border\">\r\n      {labelCover}\r\n    </div>;\n};\nexport default InputsCover;","import Form from \"react-bootstrap/Form\";\nimport InputsCover from \"./labelCover/InputsCover\";\nimport { useContext } from \"react\";\nimport { LabelContext } from \"./InputsText\";\nconst InputsTextLabel = () => {\n  const {\n    labelCover,\n    value\n  } = useContext(LabelContext);\n  if (labelCover === undefined) return null;\n  return <Form.Label htmlFor={value} className=\"position-absolute w-100\">\r\n      <InputsCover />\r\n    </Form.Label>;\n};\nexport default InputsTextLabel;","import { useFormikContext } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\nimport InputError from \"../inputError/InputError\";\nimport InputsTextLabel from \"./InputsTextLabel\";\nimport \"./_inputsText.scss\";\nimport { createContext } from \"react\";\ntype ContextType = {\n  value: string;\n  labelCover?: string;\n};\nexport const LabelContext = createContext<ContextType>(({} as ContextType));\ntype Props = {\n  inputsData: {\n    value: string;\n    type: string;\n    label?: string;\n    labelCover?: string;\n    placeholder?: string;\n    isErrorPrint?: boolean;\n    min?: string;\n    max?: string;\n    styles?: string;\n  }[];\n};\nconst InputsText = (props: Props) => {\n  const {\n    values,\n    handleBlur,\n    setFieldValue,\n    errors,\n    touched\n  } = useFormikContext<ModelDay>();\n  return <>\r\n      {props.inputsData.map(({\n      value,\n      labelCover,\n      type,\n      isErrorPrint,\n      min,\n      max,\n      placeholder,\n      styles\n    }) => {\n      return <Form.Group key={value} className=\" mt-2 position-relative\">\r\n              <LabelContext.Provider value={{\n          value,\n          labelCover\n        }}>\r\n                <InputsTextLabel />\r\n              </LabelContext.Provider>\r\n\r\n              <Form.Control id={value} type={type} name={value} value={values[(value as keyof typeof values)]} onChange={e => setFieldValue(value, e.target.value)} onBlur={handleBlur} autoComplete=\"new-password\" min={min} max={max} placeholder={placeholder} size=\"sm\" className={`text-light-emphasis bg-secondary-light _radius w-100 text-capitalize _cursor-pointer _fs-primary\n                   ${type === \"color\" ? \"_inputsColor p-0\" : \"py-2\"} ${styles}\n                `} />\r\n\r\n              {isErrorPrint && <InputError value={value} errors={errors} touched={touched} />}\r\n            </Form.Group>;\n    })}\r\n    </>;\n};\nexport default InputsText;","const today = new Date();\nconst formatDate = (date: Date) => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\nconst futureDateInNext_14_Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\nconst futureDateInNext_60_Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\nexport const currYearDigits = today.getFullYear();\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\nexport const currDateDigits = formatDate(today);\nexport const dateInNext_14_Days = formatDate(futureDateInNext_14_Days);\nexport const dateInNext_60_Days = formatDate(futureDateInNext_60_Days);\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\n  year: \"numeric\",\n  month: \"long\",\n  timeZone: \"UTC\"\n}).format(today);","import Spinner from \"react-bootstrap/Spinner\";\nconst useBtnContent = (isLoading: boolean, btn: JSX.Element) => {\n  let btnContent: JSX.Element = btn;\n  if (isLoading) {\n    btnContent = <Spinner animation=\"border\" size=\"sm\" variant=\"primary\" className=\"text-dark\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>;\n  }\n  return {\n    btnContent\n  };\n};\nexport default useBtnContent;","import { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { currMonthDigits, currYearDigits } from \"../../../data/dataCurrentDates\";\nimport FirebaseSingleton from \"../../../data/firebaseConfig\";\nimport { printAlert } from \"../../../redux/storeFeatures/alertSlice\";\ntype InitialValues = {\n  password: string;\n};\nconst useFormikLogin = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const firebaseInstance = FirebaseSingleton.getInstance();\n  const auth = firebaseInstance.auth;\n  const [isLoading, setIsLoading] = useState(false);\n  const email = \"ww@wp.pl\";\n  const initialValues = {\n    password: \"wwwwww\"\n  };\n  const onSubmit = async (values: InitialValues) => {\n    setIsLoading(true);\n    try {\n      if (email) {\n        await signInWithEmailAndPassword(auth!, email, values.password);\n        navigate(`/${currYearDigits}-${currMonthDigits}`);\n      }\n    } catch (error: any) {\n      dispatch(printAlert(error.message));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    initialValues,\n    onSubmit,\n    isLoading\n  };\n};\nexport default useFormikLogin;","const InputAccessability = () => {\n  return <input type=\"text\" id=\"username\" name=\"username\" autoComplete=\"new-password\" aria-hidden=\"true\" style={{\n    display: \"none\"\n  }}></input>;\n};\nexport default InputAccessability;","import { Form, Formik } from \"formik\";\nimport ButtonForm from \"../../../components/buttonForm/ButtonForm\";\nimport InputsText from \"../../../components/inputs/inputsText/InputsText\";\nimport \"./_formLoginContext.scss\";\nimport useFormikLogin from \"./useFormikLogin\";\nimport InputAccessability from \"./InputAccessability\";\nconst dataInputsText = [{\n  value: \"password\",\n  type: \"password\",\n  isErrorPrint: true\n}];\nconst FormLoginContext = () => {\n  const {\n    initialValues,\n    onSubmit,\n    isLoading\n  } = useFormikLogin();\n  return <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className={`border p-5 rounded-1 _bg-opacity-white _formLoginContext _d-center _anim-dropDown`}>\r\n        <div>\r\n          <InputAccessability />\r\n          <div className=\"text-center fs-2 fw-medium mb-4 \">Podaj hasło</div>\r\n          <InputsText inputsData={dataInputsText} />\r\n          <ButtonForm isLoading={isLoading} text={\"Zaloguj\"} styles={\"_formLoginContext__button\"} />\r\n        </div>\r\n      </Form>\r\n    </Formik>;\n};\nexport default FormLoginContext;","import AlertErrors from \"../../../components/AlertErrors\";\nimport FormLoginContext from \"../formLoginContext/FormLoginContext\";\nimport \"./_indexLogin.scss\";\nconst IndexLogin = () => {\n  return <main className=\"_d-center bg-primary-light  _indexLogin\">\r\n      <AlertErrors />\r\n      <FormLoginContext />\r\n    </main>;\n};\nexport default IndexLogin;"],"names":["dispatch","useDispatch","header","useSelector","state","alert","_jsx","Alert","action","printAlert","isPrinted","props","Button","id","className","onClick","children","_jsxs","_Fragment","memo","e","_e$target","includes","target","setIsPrinted","ButtonAlertDelete","ButtonAlertAccept","buttonText","text","btnContent","useBtnContent","isLoading","type","variant","disabled","concat","styles","touched","value","errors","_useState","useState","_useState2","_slicedToArray","setPrinted","labelCover","useContext","LabelContext","_useContext","undefined","Form","Label","htmlFor","InputsCover","createContext","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","map","_ref","isErrorPrint","min","max","placeholder","Group","Provider","InputsTextLabel","Control","name","onChange","onBlur","autoComplete","size","InputError","today","Date","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","futureDateInNext_14_Days","getTime","futureDateInNext_60_Days","currYearDigits","currMonthDigits","dateInNext_14_Days","dateInNext_60_Days","Intl","DateTimeFormat","timeZone","format","btn","Spinner","animation","navigate","useNavigate","auth","FirebaseSingleton","getInstance","setIsLoading","email","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","signInWithEmailAndPassword","password","t0","message","finish","stop","_x","apply","arguments","initialValues","style","display","dataInputsText","_useFormikLogin","useFormikLogin","Formik","InputAccessability","InputsText","ButtonForm","AlertErrors","FormLoginContext"],"sourceRoot":""}