{"version":3,"file":"static/js/643.153c7529.chunk.js","mappings":"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","sources":["components/BorderInline.tsx","components/alert/buttonsAlert/ButtonAlertAccept.tsx","components/alert/buttonsAlert/ButtonAlertDelete.tsx","components/alert/Alert.tsx","components/icons/IconTrash.tsx","components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/indexContainer/IndexContainer.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useBtnContent.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/updateReduxDatabase/useReduxMonthData.tsx","pages/monthPanel/monthPanelEmpty/MonthPanelEmpty.tsx","pages/monthPanel/CurrentMonth.tsx","pages/monthPanel/HoursSummary.tsx","pages/monthPanel/buttonDeleteDay/utilsDeleteDay.tsx","pages/monthPanel/buttonDeleteDay/useDeleteDayAsync.tsx","pages/monthPanel/buttonDeleteDay/ButtonDeleteDay.tsx","pages/monthPanel/dayIcon/DayIcon.tsx","pages/monthPanel/dayDetails/DayDetails.tsx","pages/monthPanel/dayDetails/utilsDayDetails.tsx","pages/monthPanel/Day.tsx","pages/monthPanel/column/Column.tsx","pages/monthPanel/counter/Counter.tsx","pages/monthPanel/columnsHeader.tsx/useDataCoumnsHeader.tsx","pages/monthPanel/columnsHeader.tsx/ColumnsHeader.tsx","pages/monthPanel/columns/hooks/useUpdateColumns.tsx","pages/monthPanel/columns/utils/utilsAddDaysToColumns.tsx","pages/monthPanel/columns/utils/utilsGetHoursFromColumns.tsx","pages/monthPanel/columns/hooks/useUpdateMonth.tsx","pages/monthPanel/columns/utils/utilsHandleDragDrop.tsx","pages/monthPanel/columns/Columns.tsx","pages/monthPanel/monthPanelContent/MonthPanelContent.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["const BorderInline = () => {\r\n  return <div className=\"border d-md-none\"></div>;\r\n};\r\n\r\nexport default BorderInline;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertAccept = (props: Props) => {\r\n  return (\r\n    <Button\r\n      id=\"noButton\"\r\n      className=\"_radius bg-primary border-0 px-5 ms-4\"\r\n      onClick={props.action}\r\n    >\r\n      Ok\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertAccept;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertDelete = (props: Props) => {\r\n  return (\r\n    <>\r\n      <Button id=\"noButton\" className=\"_radius bg-dark border-0 px-4 px-sm-5\">\r\n        Nie\r\n      </Button>\r\n      <Button\r\n        onClick={props.action}\r\n        className=\"_radius bg-primary border-0 px-4 px-sm-5 ms-4\"\r\n      >\r\n        Tak\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertDelete;\r\n","import { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./_alert.scss\";\r\nimport ButtonAlertAccept from \"./buttonsAlert/ButtonAlertAccept\";\r\nimport ButtonAlertDelete from \"./buttonsAlert/ButtonAlertDelete\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  if (!props.isPrinted) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"opacityContainer\"\r\n        className=\"fixed-top _d-center _alert\"\r\n        onClick={handleClose}\r\n      >\r\n        <div\r\n          className={`p-5 bg-white _radius text-center fs-2 fw-medium _anim-dropDown`}\r\n        >\r\n          {props.header}\r\n          <div className=\"_w-fitContent m-auto mt-4\">\r\n            {props.header.includes(\"Usunąć\") ? (\r\n              <ButtonAlertDelete action={props.action} />\r\n            ) : (\r\n              <ButtonAlertAccept action={props.action} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { RiDeleteBin6Line } from \"react-icons/ri\";\r\n\r\nconst IconTrash = () => {\r\n  return <RiDeleteBin6Line className=\"text-light-emphasis fs-2 ms-auto\" />;\r\n};\r\n\r\nexport default IconTrash;\r\n","import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\nimport \"./_autoLogout.scss\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n\r\n  if (secondsRemaining + 1 > 60) return null;\r\n\r\n  return (\r\n    <div className=\"fixed-top _d-center p-5 _autoLogout\">\r\n      <div className=\"p-4 bg-white text-center rounded-1 _fs-primary fw-semiBold _anim-dropDown\">\r\n        Wylogowanie nastąpi za\r\n        <div className=\"d-flex mx-auto _w-fitContent\">\r\n          {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport AutoLogout from \"../autoLogout/AutoLogout\";\r\nimport \"./_indexContainer.scss\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  return (\r\n    <main className=\"d-flex m-0 bg-secondary _indexContainer \">\r\n      <aside className=\"_indexContainer__aside\"></aside>\r\n\r\n      <div className=\"_indexContainer__rightSide\">\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger fs-1 text-center\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"primary\" className=\"fs-5\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { useState } from \"react\";\r\nimport Alert from \"../components/alert/Alert\";\r\n\r\nconst useAlertDelete = (action: any, header: string) => {\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = () => {\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const alert = (\r\n    <Alert\r\n      action={action}\r\n      isPrinted={isAlertPrinted}\r\n      setIsPrinted={setIsAlertPrinted}\r\n      header={header}\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleAlert,\r\n    alert,\r\n  };\r\n};\r\n\r\nexport default useAlertDelete;\r\n","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst useBtnContent = (isLoading: boolean, btn: JSX.Element) => {\r\n  let btnContent: JSX.Element = btn;\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"primary\"\r\n        className=\"text-dark\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useBtnContent;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(1);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return { monthURLStringFormat };\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return { monthURLStringFormat };\r\n  }\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useMonthDataQuery } from \"../../services/apiSliceMonths\";\r\nimport useURLValues from \"../useURLValues\";\r\n\r\n\r\nconst useReduxMonthData = () => {\r\n  const dispatch = useDispatch();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  const year = isMonthInURL ? yearFromURL : \"\";\r\n  const month = isMonthInURL ? monthFromURL : \"\";\r\n\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year,\r\n    month,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getMonth(data));\r\n    dispatch(getMonthError(error));\r\n    dispatch(getMonthIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxMonthData;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport \"./_monthPanelEmpty.scss\";\r\n\r\nconst MonthPanelEmpty = () => {\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  return (\r\n    <div className=\"_d-center fs-2 text-warning text-center _monthPanelEmpty\">\r\n      Brak danych z miesiąca {monthURLStringFormat}. Zapisz miesiąc w\r\n      ustawieniach.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelEmpty;\r\n","import useMonthURLToString from \"../../hooks/useMonthURLToString\";\r\n\r\nconst CurrentMonth = () => {\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n  const monthStringCapitalize =\r\n    monthURLStringFormat[0]?.toUpperCase() + monthURLStringFormat.slice(1);\r\n\r\n  return (\r\n    <div className=\"text-center fs-4 d-md-none\">{monthStringCapitalize}</div>\r\n  );\r\n};\r\n\r\nexport default CurrentMonth;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport CurrentMonth from \"./CurrentMonth\";\r\n\r\nconst HoursSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  return (\r\n    <div className=\"position-sticky z-3 fs-2 top-0 py-2 bg-secondary\">\r\n      <div className=\"d-flex mx-auto fw-medium _w-fitContent\">\r\n        <div>Wszystkie {month?.calcHours?.allHours}&nbsp;-&nbsp;</div>\r\n\r\n        <div\r\n          className={`${\r\n            month && month?.calcHours?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n          }`}\r\n        >\r\n          <strong>{month && month?.calcHours?.currentHours}</strong> {\"\"}\r\n          {month && month?.calcHours?.currentHours <= 0 ? \"Brak\" : \"Dostępne\"}\r\n        </div>\r\n      </div>\r\n      <CurrentMonth />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursSummary;\r\n","import { ModelMonth } from \"../../../sharedModels/modelMonth\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const deleteDayById = (obj: ModelMonth, idToDelete: string) => {\r\n  const updatedColumns = obj.columns.map((column: ModelColumn) => {\r\n    const updatedDays = column?.days?.filter(day => {\r\n      console.log('',day?.id)\r\n       if (day && day.id) return day.id !== idToDelete;\r\n       return false;\r\n    });\r\n    return { ...column, days: updatedDays };\r\n  });\r\n  return { ...obj, columns: updatedColumns };\r\n};\r\n\r\nexport const calculateUpdatedCalcHours = (\r\n  month: ModelMonth | null,\r\n  columnIdx: number,\r\n  subtractedHours: number | undefined\r\n) => {\r\n  if (!month || !month.calcHours) {\r\n    return {\r\n      currentHours: 0,\r\n      submittedHours: 0,\r\n      acceptedHours: 0,\r\n      rejectedHours: 0,\r\n      allHours: 0,\r\n    };\r\n  }\r\n\r\n  const { calcHours } = month;\r\n\r\n  return {\r\n    ...calcHours,\r\n    currentHours:\r\n      columnIdx !== 2 && subtractedHours\r\n        ? calcHours.currentHours + subtractedHours\r\n        : calcHours.currentHours,\r\n    submittedHours:\r\n      columnIdx === 0 && subtractedHours\r\n        ? calcHours.submittedHours - subtractedHours\r\n        : calcHours.submittedHours,\r\n    acceptedHours:\r\n      columnIdx === 1 && subtractedHours\r\n        ? calcHours.acceptedHours - subtractedHours\r\n        : calcHours.acceptedHours,\r\n    rejectedHours:\r\n      columnIdx === 2 && subtractedHours\r\n        ? calcHours.rejectedHours - subtractedHours\r\n        : calcHours.rejectedHours,\r\n  };\r\n};\r\n","import { useDeleteDayMutation } from \"../../../services/apiSliceMonths\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { deleteDayById, calculateUpdatedCalcHours } from \"./utilsDeleteDay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useDeleteDayAsync = (day: ModelDay, columnIndex: number) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n\r\n  const deleteDayAsync = async () => {\r\n    const subtractedHours = day?.hours;\r\n\r\n    console.log(\"async\", day.id);\r\n    month &&\r\n      (await deleteDay({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        colIdx: columnIndex,\r\n        monthBody: {\r\n          ...month,\r\n          calcHours: calculateUpdatedCalcHours(\r\n            month,\r\n            +columnIndex,\r\n            subtractedHours\r\n          ),\r\n          columns: deleteDayById({ ...month }, day?.id).columns,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { deleteDayAsync, success };\r\n};\r\n\r\nexport default useDeleteDayAsync;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport IconTrash from \"../../../components/icons/IconTrash\";\r\nimport useAlertDelete from \"../../../hooks/useAlertDelete\";\r\nimport useBtnContent from \"../../../hooks/useBtnContent\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport useDeleteDayAsync from \"./useDeleteDayAsync\";\r\n\r\ntype Props = {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n};\r\n\r\nconst ButtonDeleteDay = (props: Props) => {\r\n  const { deleteDayAsync, success } = useDeleteDayAsync(\r\n    props.day,\r\n    props.columnIdx\r\n  );\r\n  const { handleAlert, alert } = useAlertDelete(\r\n    deleteDayAsync,\r\n    \"Usunąć dzień?\"\r\n  );\r\n\r\n  const { btnContent } = useBtnContent(success.isLoading, <IconTrash />);\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        onClick={handleAlert}\r\n        className=\"d-flex justify-content-between fs-4 _fw-semiBold align-items-center w-100 p-0 bg-transparent border-0 text-dark\"\r\n        disabled={success.isLoading}\r\n      >\r\n        <div>{props.day?.hours} h</div>\r\n        <div>{btnContent}</div>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteDay;\r\n","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\n\r\ntype Props = {\r\n  place: string;\r\n};\r\n\r\nconst DayIcon = (props: Props) => {\r\n  return (\r\n    <div>\r\n      {props.place === \"Poza\" ? (\r\n        <TbArrowBigRightLineFilled className=\"text-light-emphasis\" />\r\n      ) : (\r\n        <MdFactory className=\"text-light-emphasis\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayIcon;\r\n","import { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport { dateShort } from \"./utilsDayDetails\";\r\nimport DayIcon from \"../dayIcon/DayIcon\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n}\r\n\r\nconst DayDetails = (props: Props) => {\r\n  if (!props?.day) return <div>Brak danych</div>;\r\n\r\n  const printDate = dateShort(props?.day?.date);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between text-light-emphasis fs-4 \">\r\n        <div>{props.day?.userName}</div>\r\n        <DayIcon place={props.day.place} />\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between text-light-emphasis fs-4 _fw-semiBold\">\r\n        <div>{printDate ? printDate : \"\"}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayDetails;\r\n","export const dateShort = (propsDate: string) => {\r\n  const date = new Date(propsDate);\r\n  return new Intl.DateTimeFormat(\"pl-PL\", {\r\n    day: \"numeric\",\r\n    month: \"short\",\r\n  }).format(date);\r\n\r\n};\r\n\r\n\r\n","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\nimport ButtonDeleteDay from \"./buttonDeleteDay/ButtonDeleteDay\";\r\nimport DayDetails from \"./dayDetails/DayDetails\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst Day = (props: Props) => {\r\n  const { searchedName } = useSelector((state: RootState) => state.filterDays);\r\n\r\n  let printDay: string;\r\n\r\n  if (!searchedName || searchedName === \"Szukaj\") {\r\n    printDay = \"d-block\";\r\n  } else if (searchedName !== props.day.userName) {\r\n    printDay = \"d-none\";\r\n  }\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white _radius border ${\r\n              snapshot.isDragging ? \"border-dark\" : \"border-dark-subtle\"\r\n            } ${printDay}`}\r\n          >\r\n            <div\r\n              className=\"ps-2 pe-1 py-2 py-sm-1 _radius\"\r\n              style={{\r\n                borderTop: `8px solid ${props.day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.8 : 1,\r\n              }}\r\n            >\r\n              <DayDetails day={props.day} />\r\n\r\n              <ButtonDeleteDay columnIdx={props.columnIdx} day={props.day} />\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport Day from \"../Day\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_column.scss\";\r\n\r\ninterface Props {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n}\r\n\r\nconst Column = (props: Props) => {\r\n  const { searchedName } = useSelector((state: RootState) => state.filterDays);\r\n\r\n  const isDraging = (stapshot: boolean) => {\r\n    return stapshot ? \"_isDragging\" : \"_noDragging\";\r\n  };\r\n\r\n  const isSearching =\r\n    searchedName && searchedName !== \"Szukaj\" ? \"_isSearching\" : \"\";\r\n\r\n  return (\r\n    <div className=\"_column position-relative\">\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={`p-1 pt-3 px-lg-3 h-100 overflow-hidden border border-1 border border-top-0  ${isDraging(\r\n                snapshot.isDraggingOver\r\n              )} ${isSearching}`}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <Day\r\n                        key={UUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_counter.scss\";\r\n\r\ntype Props = {\r\n  counter: any;\r\n  text: string;\r\n};\r\n\r\nconst Counter = (props: Props) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [counter, setCounter] = useState<number[]>([props.counter]);\r\n  const didMountRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    setCounter([props.counter]);\r\n    didMountRef.current = false;\r\n  }, [month?.id]);\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      setCounter(prev => [...prev, props?.counter ?? 0]);\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [props.counter]);\r\n\r\n  return (\r\n    <div className=\"_counter\">\r\n      <div\r\n        style={{\r\n          transform: `translateY(-${(counter.length - 1) * 20}px)`,\r\n          transition: \"transform 0.3s\",\r\n        }}\r\n      >\r\n        {counter.map((item, idx) => {\r\n          return (\r\n            <div key={idx} className=\"_counter__dygit\">\r\n              {item}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useDataCoumnsHeader = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  const dataColumnsHeader = [\r\n    {\r\n      headerText: \"Złożone:\",\r\n      counter: month?.calcHours?.submittedHours,\r\n    },\r\n    {\r\n      headerText: \"Przyznane:\",\r\n      counter: month?.calcHours?.acceptedHours,\r\n    },\r\n    {\r\n      headerText: \"Odrzucone:\",\r\n      counter: month?.calcHours?.rejectedHours,\r\n    },\r\n  ];\r\n\r\n  return { dataColumnsHeader };\r\n};\r\n\r\nexport default useDataCoumnsHeader;\r\n","import Counter from \"../counter/Counter\";\r\nimport useDataCoumnsHeader from \"./useDataCoumnsHeader\";\r\nimport \"./_columnsHeader.scss\";\r\n\r\nconst ColumnsHeader = () => {\r\n  const { dataColumnsHeader } = useDataCoumnsHeader();\r\n\r\n  return (\r\n    <div className=\"_d-between _columnsHeader\">\r\n      {dataColumnsHeader.map(({ headerText, counter }) => {\r\n        return (\r\n          <div\r\n            key={headerText}\r\n            className={`text-primary _d-center _fw-semiBold p-1 _columnsHeader__item bg-secondary  border border-bottom-0            \r\n            `}\r\n          >\r\n            {headerText}\r\n            <Counter counter={counter} text={headerText} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnsHeader;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { addDaysToColumns } from \"../utils/utilsAddDaysToColumns\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nconst useUpdateColumns = (\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  const columnsWithDays = month && addDaysToColumns(month?.columns);\r\n\r\n  useEffect(() => {\r\n    if (columnsWithDays) {\r\n      setColumns(columnsWithDays);\r\n    }\r\n  }, [month?.columns]);\r\n};\r\n\r\nexport default useUpdateColumns;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column: ModelColumn) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n","import { ModelDay } from \"../../../../sharedModels/modelDay\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nconst getHoursFromColumn = (days: ModelDay[]) => {\r\n  return days?.reduce((acu, day) => {\r\n    const dayHours = day?.hours || 0;\r\n    return acu + dayHours;\r\n  }, 0);\r\n};\r\n\r\nexport const getHoursFromColumns = (columns: ModelColumn[]) => {\r\n  const submittedHours = getHoursFromColumn(columns[0]?.days);\r\n  const acceptedHours = getHoursFromColumn(columns[1]?.days);\r\n  const rejectedHours = getHoursFromColumn(columns[2]?.days);\r\n\r\n  return { submittedHours, acceptedHours, rejectedHours };\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { getHoursFromColumns } from \"../utils/utilsGetHoursFromColumns\";\r\nimport useURLValues from \"../../../../hooks/useURLValues\";\r\nimport { useUpdateMonthMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\n\r\nconst useUpdateMonth = (\r\n  columns: ModelColumn[],\r\n  executeUpdateMonth: boolean\r\n) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { submittedHours, acceptedHours, rejectedHours } =\r\n    getHoursFromColumns(columns);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0 && month) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calcHours: {\r\n            ...month?.calcHours,\r\n            currentHours:\r\n              month?.calcHours?.allHours -\r\n              submittedHours -\r\n              acceptedHours -\r\n              rejectedHours +\r\n              rejectedHours,\r\n            submittedHours,\r\n            acceptedHours,\r\n            rejectedHours,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [executeUpdateMonth]);\r\n};\r\n\r\nexport default useUpdateMonth;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../../../sharedModels/modelDay\";\r\n\r\nconst findSourceColumnIdx = (columns: ModelColumn[], source: any) => {\r\n  return columns?.findIndex((column: ModelColumn) => {\r\n    return column.id === source.droppableId;\r\n  });\r\n};\r\n\r\nconst findDestinationColumnIdx = (columns: ModelColumn[], destination: any) => {\r\n  return columns?.findIndex((column: ModelColumn) => {\r\n    return column.id === destination.droppableId;\r\n  });\r\n};\r\n\r\nconst findDeletedDay = (newSourceDays: ModelDay[], source: any) => {\r\n  const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n  return deletedDay;\r\n};\r\n\r\nconst updateColumnDays = (\r\n  columns: ModelColumn[],\r\n  columnIndex: number,\r\n  newDays: ModelDay[]\r\n): ModelColumn[] => {\r\n  const newColumns = [...columns];\r\n  newColumns[columnIndex] = { ...columns[columnIndex], days: newDays };\r\n  return newColumns;\r\n};\r\n\r\nconst moveItemFromColumn = (\r\n  columns: ModelColumn[],\r\n  source: any,\r\n  destination: any,\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n  const destinationColumnIdx = findDestinationColumnIdx(columns, destination);\r\n  const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n  const newDestinationDays =\r\n    source.droppableId !== destination.dropableId\r\n      ? [...columns[destinationColumnIdx].days]\r\n      : newSourceDays;\r\n\r\n  const deletedDay = findDeletedDay(newSourceDays, source);\r\n  newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n  const newColumns = updateColumnDays(columns, sourceColumnIdx, newSourceDays);\r\n  setColumns(\r\n    updateColumnDays(newColumns, destinationColumnIdx, newDestinationDays)\r\n  );\r\n};\r\n\r\nconst moveItemInColumn = (\r\n  columns: ModelColumn[],\r\n  source: any,\r\n  destination: any,\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const destintionIdx = destination.index;\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n\r\n  const days = [...columns[sourceColumnIdx].days];\r\n  const deletedDay = findDeletedDay(days, source);\r\n\r\n  days.splice(destintionIdx, 0, deletedDay);\r\n\r\n  const newColumns = updateColumnDays(columns, sourceColumnIdx, days);\r\n  setColumns(newColumns);\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: any,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>,\r\n  searchedName: string\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  // if (searchedName) return;\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId === \"rejected\") return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    moveItemFromColumn(columns, source, destination, setColumns);\r\n  } else {\r\n    moveItemInColumn(columns, source, destination, setColumns);\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport Column from \"../column/Column\";\r\nimport ColumnsHeader from \"../columnsHeader.tsx/ColumnsHeader\";\r\nimport \"./_columns.scss\";\r\n\r\nimport useUpdateColumns from \"./hooks/useUpdateColumns\";\r\nimport useUpdateMonth from \"./hooks/useUpdateMonth\";\r\nimport { handleDragDrop } from \"./utils/utilsHandleDragDrop\";\r\n\r\nconst Columns = () => {\r\n  // const { scrollableRef, thumbPosition, handleScroll } =\r\n  //   useScrollThumbPosition();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { searchedName } = useSelector((state: RootState) => state.filterDays);\r\n\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n  const [executeUpdateMonth, setExecuteUpdateMonth] = useState(false);\r\n  useUpdateColumns(setColumns);\r\n  useUpdateMonth(columns, executeUpdateMonth);\r\n\r\n  const handleDragEnd = (results: DropResult) => {\r\n    month && handleDragDrop(results, columns, setColumns, searchedName);\r\n    setExecuteUpdateMonth(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"_columnsContainer\">\r\n      <ColumnsHeader />\r\n      <div className=\"_d-between _dragDropContex\">\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {columns?.map((column: ModelColumn, idx: number) => {\r\n            return <Column key={column.id} columnIdx={idx} column={column} />;\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Columns;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport BorderInline from \"../../../components/BorderInline\";\r\nimport HoursSummary from \"../HoursSummary\";\r\nimport Columns from \"../columns/Columns\";\r\nimport ColumnsHeader from \"../columnsHeader.tsx/ColumnsHeader\";\r\nimport \"./_monthPanelContent.scss\";\r\n\r\nconst MonthPanelContent = () => {\r\n  const { pathname } = useLocation();\r\n  const [isAnimate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAnimate(false);\r\n    const timeoutId = setTimeout(() => {\r\n      setAnimate(true);\r\n    });\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      {isAnimate && (\r\n        <div className=\"px-2 px-sm-5 px-md-3 pb-3 _anim-opacity\">\r\n          <BorderInline />\r\n          <HoursSummary />\r\n          <Columns />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/indexContainer/IndexContainer\";\r\nimport useReduxMonthData from \"../../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport MonthPanelEmpty from \"../monthPanelEmpty/MonthPanelEmpty\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport MonthPanelContent from \"../monthPanelContent/MonthPanelContent\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  useReduxMonthData();\r\n\r\n  const { month, monthErrorGet, monthIsLoading } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let content;\r\n\r\n  if (monthIsLoading || listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (monthErrorGet || listUsersError || listMonthsError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else if (!month || month?.id === \"\") {\r\n    content = <MonthPanelEmpty />;\r\n  } else {\r\n    content = <MonthPanelContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n\r\n// const auth = getAuth();\r\n// onAuthStateChanged(auth, user => {\r\n//   if (user) {\r\n//     // User is signed in, see docs for a list of available properties\r\n//     // https://firebase.google.com/docs/reference/js/auth.user\r\n//     const uid = user.uid;\r\n\r\n//     // ...\r\n//   } else {\r\n//     // User is signed out\r\n//     // ...\r\n//   }\r\n// });\r\n","\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top _d-center fs-4 _requestContainer\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_jsx","className","props","Button","id","onClick","action","children","_jsxs","_Fragment","dispatch","useDispatch","isPrinted","e","_e$target","includes","target","setIsPrinted","printAlert","header","ButtonAlertDelete","ButtonAlertAccept","RiDeleteBin6Line","_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","AutoLogout","styles","Spinner","animation","variant","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","isLoading","btn","btnContent","size","monthURL","useLocation","pathname","slice","test","_Intl$DateTimeFormat","monthURLToDateFormat","monthURLStringFormat","Intl","DateTimeFormat","year","month","timeZone","format","split","yearFromURL","monthFromURL","isMonthInURL","_useURLValues","useURLValues","_useMonthDataQuery","useMonthDataQuery","data","error","getMonth","getMonthError","getMonthIsLoading","useMonthURLToString","_monthURLStringFormat","monthStringCapitalize","toUpperCase","_month$calcHours","_month$calcHours2","_month$calcHours3","_month$calcHours4","useSelector","state","monthPanel","calcHours","allHours","concat","currentHours","CurrentMonth","deleteDayById","obj","idToDelete","updatedColumns","columns","column","_column$days","updatedDays","days","filter","day","console","log","_objectSpread","calculateUpdatedCalcHours","columnIdx","subtractedHours","submittedHours","acceptedHours","rejectedHours","columnIndex","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","deleteDay","success","deleteDayAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","hours","t0","colIdx","monthBody","stop","apply","arguments","_props$day","_useDeleteDayAsync","useDeleteDayAsync","_useAlertDelete","useAlertDelete","useBtnContent","IconTrash","disabled","place","TbArrowBigRightLineFilled","MdFactory","_props$day2","printDate","propsDate","date","dateShort","userName","DayIcon","printDay","searchedName","filterDays","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","style","borderTop","userColor","opacity","DayDetails","ButtonDeleteDay","isSearching","Droppable","droppableId","droppableProps","stapshot","isDraggingOver","Array","isArray","idx","Day","UUID","placeholder","counter","setCounter","didMountRef","useRef","current","_props$counter","_toConsumableArray","transform","length","transition","item","dataColumnsHeader","headerText","useDataCoumnsHeader","Counter","text","setColumns","columnsWithDays","hasOwnProperty","getHoursFromColumn","reduce","acu","executeUpdateMonth","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","_getHoursFromColumns","_columns$","_columns$2","_columns$3","getHoursFromColumns","findSourceColumnIdx","source","findIndex","findDeletedDay","newSourceDays","_newSourceDays$splice","splice","updateColumnDays","newDays","newColumns","handleDragDrop","results","destination","sourceColumnIdx","destinationColumnIdx","findDestinationColumnIdx","newDestinationDays","dropableId","deletedDay","moveItemFromColumn","destintionIdx","moveItemInColumn","_useState3","_useState4","setExecuteUpdateMonth","useUpdateColumns","useUpdateMonth","ColumnsHeader","DragDropContext","onDragEnd","Column","isAnimate","setAnimate","timeoutId","setTimeout","clearTimeout","BorderInline","HoursSummary","Columns","useReduxMonthData","content","_useSelector","monthErrorGet","monthIsLoading","_useSelector2","listUsers","listUsersError","listUsersIsLoading","listMonthsError","listMonths","RequestLoading","requestContainer","RequestError","MonthPanelContent","MonthPanelEmpty","IndexContainer","contentJSX","width","height","zIndex","backgroundColor"],"sourceRoot":""}