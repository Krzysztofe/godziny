{"version":3,"file":"static/js/535.fdf16cf1.chunk.js","mappings":"kLA+CA,EA5CsB,WACpB,IAAAA,GAAgDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAExCI,EAAa,EAWXC,EAAmB,WACvBD,EAAaE,KAAKC,MAAQ,GAC5B,EAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,YAdP,WACtB,IAAMC,EAAYC,KAAKC,IAAI,EAAGD,KAAKE,OAAOV,EAAaE,KAAKC,OAAS,MACrEJ,EAAoBQ,GAEhBP,EAAaE,KAAKC,OACpBQ,EAAAA,GAAKC,SAET,CAQIC,EACF,GAAG,KAEH,OAAO,kBAAMC,cAAcT,EAAU,CACvC,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACRH,IACA,IAAMc,EAAS,CAAC,YAAa,WAAY,QAAS,UAMlD,OAJAA,EAAOC,KAAI,SAAAC,GACT,OAAOC,SAASC,iBAAiBF,EAAOhB,EAC1C,IAEO,WACLc,EAAOC,KAAI,SAAAC,GACT,OAAOC,SAASC,iBAAiBF,EAAOhB,EAC1C,GACF,CACF,GAAG,IAEI,CAAEH,iBAAAA,EACX,E,SCZA,EA/BmB,WACjB,IAAQA,EAAqBsB,IAArBtB,iBAGR,OAFAsB,KAGEC,EAAAA,EAAAA,KAAA,OAAAC,SACGxB,EAAmB,GAAK,KACvBuB,EAAAA,EAAAA,KAAA,OACEE,GAAG,mBACHC,UAAU,8DACVC,MAAO,CACLC,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,mBACjBN,UAEFO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,2DAA0DF,SAAA,CAAC,+BAExEO,EAAAA,EAAAA,MAAA,OACCL,UAAU,+BAA8BF,SAAA,CAEtCxB,EAAmB,EAAE,KAACuB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAE9BD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAM3B,ECUA,EAjCuB,SAACM,GACtB,IAAQC,GAAgBC,EAAAA,EAAAA,KAAhBD,YAGR,OACEF,EAAAA,EAAAA,MAAA,QACEL,UAAU,6BACVC,MAAO,CACLC,OAAQ,QACRO,SAAU,SACVC,SAAU,YACVZ,SAAA,EAEFD,EAAAA,EAAAA,KAAA,SACEI,MAAO,CACLU,MAAOJ,GAAe,IAAM,MAAQ,EACpCK,SAAU,QACVV,OAAQ,WAGZG,EAAAA,EAAAA,MAAA,OACEL,UAAU,wBACVC,MAAO,CACLU,MAAOJ,GAAe,IAAM,MAAQ,QACpCT,SAAA,EAEFD,EAAAA,EAAAA,KAACgB,EAAU,IACVP,EAAMR,cAIf,C,kGC6BA,EAxDc,SAACQ,GACb,IAAMQ,GAAWC,EAAAA,EAAAA,MAYjB,OACElB,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAlB,SACGQ,EAAMW,WACLpB,EAAAA,EAAAA,KAAA,OACEE,GAAG,mBACHC,UAAU,8DACVkB,QAAS,SAAAC,GAAC,OAhBE,SAACA,GAAqD,IAADC,EAAAC,EAEnC,sBAAzB,QAATD,EAACD,EAAEG,cAAM,IAAAF,OAAA,EAATA,EAA2BrB,KACO,cAAzB,QAATsB,EAACF,EAAEG,cAAM,IAAAD,OAAA,EAATA,EAA2BtB,MAGpB,OAALO,QAAK,IAALA,GAAAA,EAAOiB,eAAmB,OAALjB,QAAK,IAALA,GAAAA,EAAOiB,cAAa,IAC7CT,GAASU,EAAAA,EAAAA,IAAW,KACtB,CAQsBC,CAAYN,EAAE,EAC5BlB,MAAO,CACLC,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,mBACjBN,UAEFO,EAAAA,EAAAA,MAAA,OACEL,UAAS,2DAA6DF,SAAA,CAErEQ,EAAMoB,QACP7B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,SAClCQ,EAAMoB,OAAOC,SAAS,qBACrBtB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAlB,SAAA,EACED,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAAC7B,GAAG,WAAUD,SAAC,SACtBD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLV,QAASZ,EAAMuB,OACf7B,UAAU,yBAAwBF,SACnC,YAKHD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAAC7B,GAAG,WAAWmB,QAASZ,EAAMuB,OAAO/B,SAAC,eAQrDD,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,KAIR,C,uHCCA,EA/D8B,WAC5B,IAAMc,GAAYC,EAAAA,EAAAA,IAAIC,EAAAA,IACtB9D,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B+D,EAAK7D,EAAA,GAAE8D,EAAQ9D,EAAA,GACtB+D,GAAoDhE,EAAAA,EAAAA,UAAc,IAAGiE,GAAA/D,EAAAA,EAAAA,GAAA8D,EAAA,GAA9DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAsDhD,OApDAxD,EAAAA,EAAAA,YAAU,WACR,IAAM2D,GAAcC,EAAAA,EAAAA,IAClBV,GACA,SAAAW,GACE,IAAIC,EAAsB,GACtBC,EAAwB,GAEpB,OAARF,QAAQ,IAARA,GAAAA,EAAUG,SAAQ,SAACC,GACjB,IAAMC,EAAgBD,EAAmBE,IACzCL,EAAUM,KAAKF,GAEf,IAAMG,GAAgBlB,EAAAA,EAAAA,IAAIC,EAAAA,GAAS,GAADkB,OAAKJ,KACvCN,EAAAA,EAAAA,IACES,GACA,SAAAE,GACE,IAAIC,EAAuB,GAEb,OAAdD,QAAc,IAAdA,GAAAA,EAAgBP,SAAQ,SAACS,GACvB,IAAMC,EAAYD,EAAkBN,IACpCK,EAAWJ,KAAKM,EAAUC,MAAM,GAClC,IAEAZ,EAAiBK,KAAKI,EACxB,IAEA,SAAAI,GACEtB,EAAS,gDACX,GAEJ,IAEA,IAAMuB,EAAS,GAAAP,OAAIP,GAChBnD,KAAI,SAACkE,EAAcC,GAClB,OAAOD,EAAalE,KAAI,SAACoE,GACvB,OAAOlB,EAAUiB,GAAO,IAAMC,CAChC,GACF,IACCC,OACAC,UAEHxB,EAAsBmB,EACxB,IACA,SAAAxB,GACEC,EAAS,gDACX,IAGF,OAAO,WACLK,GACF,CACF,GAAG,IAEI,CACLF,mBAAAA,EACAJ,MAAAA,EAEJ,EC/CA,EAV2B,WACzB,IAAMnB,GAAWC,EAAAA,EAAAA,MACjBgD,EAAsCC,IAA9B3B,EAAkB0B,EAAlB1B,mBAAoBJ,EAAK8B,EAAL9B,OAE5BrD,EAAAA,EAAAA,YAAU,WACRkC,GAASmD,EAAAA,EAAAA,IAAc5B,IACvBvB,GAASoD,EAAAA,EAAAA,IAAmBjC,GAC9B,GAAG,CAACI,EAAoBvB,GAC1B,C,8CCEA,IAdqB,SAACqD,EAAuBC,GAC3C,IAAIC,EAAiCD,EAUrC,OARID,EAAQG,YACVD,GACExE,EAAAA,EAAAA,KAAC0E,EAAAA,EAAO,CAACC,UAAU,SAASC,KAAK,KAAKC,QAAQ,YAAW5E,UACvDD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,kBAAiBF,SAAC,kBAKjC,CAAEuE,WAAAA,EACX,C,qCCQA,IAtB4B,WAC1B,IACMM,GADeC,EAAAA,EAAAA,MAAbC,SACkBtB,MAAM,GAIhC,GAFqBoB,GAAY,gBAAgBG,KAAKH,GAEpC,CAAC,IAADI,EACVC,EAAuBL,GAAY,IAAIjG,KAAKiG,GAQlD,MAAO,CAAEM,qBANPD,IAKE,QALkBD,EACpB,IAAIG,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNxB,MAAO,OACPyB,SAAU,eACV,IAAAN,OAAA,EAJFA,EAIIO,OAAON,IAEf,CAEE,MAAO,CAAEC,qBADoB,GAGjC,C,qCCTA,IAXqB,WACnB,IACMN,GADeC,EAAAA,EAAAA,MAAbC,SACkBU,MAAM,KAAKhC,OAAO,GAAG,GACzCiC,EAAsB,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUpB,MAAM,EAAG,GACjCkC,EAAuB,OAARd,QAAQ,IAARA,OAAQ,EAARA,EAAUpB,OAAO,GAItC,MAAO,CAAEoB,SAAAA,EAAUa,YAAAA,EAAaC,aAAAA,EAAcC,aAFzB,gBAAgBZ,KAAKH,GAG5C,C,+CCSA,IAlBuB,WACrB,IAAAzG,GAAsCC,EAAAA,EAAAA,UAASwH,OAAOC,YAAWxH,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DqC,EAAWnC,EAAA,GAAEyH,EAAczH,EAAA,GAclC,OAbAQ,EAAAA,EAAAA,YAAU,WACR,IAAMkH,EAAe,WACnBD,EAAeF,OAAOC,WACxB,EAGA,OAFAD,OAAOhG,iBAAiB,SAAUmG,GAE3B,WACLH,OAAOI,oBAAoB,SAAUD,EACvC,CACF,GAAG,IAII,CAAEvF,YAAAA,EACX,C,mICKA,EAd0B,WACxB,IAAMO,GAAWC,EAAAA,EAAAA,MAEjBiF,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAIF,EAAJE,KAAMjE,EAAK+D,EAAL/D,MAAOqC,EAAS0B,EAAT1B,WAErB1F,EAAAA,EAAAA,YAAU,WACRkC,GAASqF,EAAAA,EAAAA,IAAaD,IAEtBpF,GAASsF,EAAAA,EAAAA,IAAkBnE,IAE3BnB,GAASuF,EAAAA,EAAAA,IAAsB/B,GACjC,GAAG,CAAC4B,EAAMjE,EAAOqC,EAAWxD,GAC9B,E,8BCWA,EApB0B,WACxB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBuF,GAAsCC,EAAAA,EAAAA,KAA9Bf,EAAWc,EAAXd,YAAaC,EAAYa,EAAZb,aACbC,GAAiBa,EAAAA,EAAAA,KAAjBb,aAEFN,EAAOM,EAAeF,EAAc,GACpC5B,EAAQ8B,EAAeD,EAAe,GAE5Ce,GAAmCC,EAAAA,EAAAA,IAAkB,CACnDrB,KAAAA,EACAxB,MAAAA,IAFMsC,EAAIM,EAAJN,KAAMjE,EAAKuE,EAALvE,MAAOqC,EAASkC,EAATlC,WAKrB1F,EAAAA,EAAAA,YAAU,WACRkC,GAAS4F,EAAAA,EAAAA,IAASR,IAClBpF,GAAS6F,EAAAA,EAAAA,IAAc1E,IACvBnB,GAAS8F,EAAAA,EAAAA,IAAkBtC,GAC7B,GAAG,CAAC4B,EAAMjE,EAAOqC,EAAWxD,GAC9B,E,2DCRA,EAnBqB,WAAO,IAAD+F,EAAAC,EAAAC,EAAAC,EACjBpD,GAAUqD,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvD,MAER,OACEvD,EAAAA,EAAAA,MAAA,OAAKL,UAAU,8CAA6CF,SAAA,EAC1DO,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAK,aAAgB,OAAL8D,QAAK,IAALA,GAAgB,QAAXiD,EAALjD,EAAOwD,iBAAS,IAAAP,OAAX,EAALA,EAAkBQ,SAAS,gBAE3ChH,EAAAA,EAAAA,MAAA,OACEL,UAAS,GAAAkD,OACPU,IAAc,OAALA,QAAK,IAALA,GAAgB,QAAXkD,EAALlD,EAAOwD,iBAAS,IAAAN,OAAX,EAALA,EAAkBQ,eAAgB,EAAI,cAAgB,IAC9DxH,SAAA,CAEF8D,IAAc,OAALA,QAAK,IAALA,GAAgB,QAAXmD,EAALnD,EAAOwD,iBAAS,IAAAL,OAAX,EAALA,EAAkBO,cAAa,IAAE,GAC1C1D,IAAc,OAALA,QAAK,IAALA,GAAgB,QAAXoD,EAALpD,EAAOwD,iBAAS,IAAAJ,OAAX,EAALA,EAAkBM,cAAe,EAAI,OAAS,qBAIhE,E,mGCuBA,EAlC+B,SAAChH,GAAkB,IAADiH,EAC3CC,EAEJ,GAAU,OAALlH,QAAK,IAALA,GAAU,QAALiH,EAALjH,EAAOmH,WAAG,IAAAF,GAAVA,EAAYG,KAEV,CAAC,IAADC,EAAAC,EACCF,EAAO,IAAIhJ,KAAK4B,EAAMmH,IAAIC,MAMhC,OALAF,EAAc,IAAItC,KAAKC,eAAe,QAAS,CAC7CsC,IAAK,UACL7D,MAAO,UACN0B,OAAOoC,IAGRrH,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAlB,SAAA,EACEO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uCAAsCF,SAAA,EACnDD,EAAAA,EAAAA,KAAA,OAAAC,SAAe,QAAf6H,EAAMrH,EAAMmH,WAAG,IAAAE,OAAA,EAATA,EAAWE,YAEjBhI,EAAAA,EAAAA,KAAA,OAAAC,SACwB,UAAZ,QAAT8H,EAAAtH,EAAMmH,WAAG,IAAAG,OAAA,EAATA,EAAWE,QACVjI,EAAAA,EAAAA,KAACkI,EAAAA,IAAyB,CAAC9H,MAAO,CAAE+H,MAAO,sBAE3CnI,EAAAA,EAAAA,KAACoI,EAAAA,IAAS,CAAChI,MAAO,CAAE+H,MAAO,4BAKjCnI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2CAA0CF,UACvDD,EAAAA,EAAAA,KAAA,OAAAC,SAAM0H,GAA4B,SAI1C,CA3BE,OAAO3H,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eA4BhB,ECtCaoI,EAAgB,SAACC,EAAiBC,GAC7C,IAAMC,EAAiBF,EAAIG,QAAQ9I,KAAI,SAAC+I,GAAyB,IAADC,EACxDC,EAAoB,OAANF,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQG,YAAI,IAAAF,OAAN,EAANA,EAAcG,QAAO,SAAAlB,GAAG,OAAIA,EAAI1H,KAAOqI,CAAU,IACrE,OAAAQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYL,GAAM,IAAEG,KAAMD,GAC5B,IACA,OAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYT,GAAG,IAAEG,QAASD,GAC5B,EAEaQ,EAA4B,SACvCjF,EACAkF,EACAC,GAEA,IAAKnF,IAAUA,EAAMwD,UAClB,MAAO,CACLE,aAAc,EACd0B,eAAgB,EAChBC,cAAe,EACfC,cAAe,EACf7B,SAAU,GAIf,IAAQD,EAAcxD,EAAdwD,UAER,OAAAwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKxB,GAAS,IACZE,aACgB,IAAdwB,GAAmBC,EACf3B,EAAUE,aAAeyB,EACzB3B,EAAUE,aAChB0B,eACgB,IAAdF,GAAmBC,EACf3B,EAAU4B,eAAiBD,EAC3B3B,EAAU4B,eAChBC,cACgB,IAAdH,GAAmBC,EACf3B,EAAU6B,cAAgBF,EAC1B3B,EAAU6B,cAChBC,cACgB,IAAdJ,GAAmBC,EACf3B,EAAU8B,cAAgBH,EAC1B3B,EAAU8B,eAEpB,ECyEA,EApGsB,SAAC5I,GAAkB,IAAD6I,EAAA5B,EACtCjB,GAAsCC,EAAAA,EAAAA,KAA9Bf,EAAWc,EAAXd,YAAaC,EAAYa,EAAZb,aACb7B,GAAUqD,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvD,MACRwF,GAA6BC,EAAAA,EAAAA,MAAsBC,GAAAjL,EAAAA,EAAAA,GAAA+K,EAAA,GAA5CG,EAASD,EAAA,GAAEnF,EAAOmF,EAAA,GACjBjF,GAAemF,EAAAA,EAAAA,GACrBrF,GACAtE,EAAAA,EAAAA,KAAC4J,EAAAA,IAAgB,CAACzJ,UAAU,iBAFtBqE,WAKRnG,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvC4K,EAAS1K,EAAA,GAAEsL,EAAYtL,EAAA,GAC9B+D,GAA0BhE,EAAAA,EAAAA,UAAS,IAAGiE,GAAA/D,EAAAA,EAAAA,GAAA8D,EAAA,GAA/BwH,EAAKvH,EAAA,GAAEwH,EAAQxH,EAAA,GACtByH,GAA4C1L,EAAAA,EAAAA,WAAS,GAAM2L,GAAAzL,EAAAA,EAAAA,GAAAwL,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAElCG,GAAOrB,EAAAA,EAAAA,GAAA,GACH,OAALhF,QAAK,IAALA,GAAoC,QAA/BuF,EAALvF,EAAO0E,QAAQhI,EAAMwI,WAAWJ,YAAI,IAAAS,OAA/B,EAALA,EAAsCe,MAAK,SAAAzC,GAC5C,OAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAK1H,MAAOO,EAAMmH,IAAI1H,EAC/B,KAUIoK,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAzB,EAAA,OAAAuB,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACV,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASlK,MAAO4J,EAAK,CAAAe,EAAAE,KAAA,QAGlB,GAFC7B,EAAyB,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASY,MAAKH,EAAAI,GAEtClH,GAAK8G,EAAAI,GAAA,CAAAJ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACIrB,EAAU,CACfnE,KAAMI,EACN5B,MAAO6B,EACPsF,OAAQzK,EAAMwI,UACdkC,WAASpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJhF,GAAK,IACRwD,UAAWyB,EACTjF,GACCkF,EACDC,GAGFT,QAASJ,GAAaU,EAAAA,EAAAA,GAAC,CAAC,EAAIhF,GAAS+F,GAAOrB,YAE9C,wBAAAoC,EAAAO,OAAA,GAAAT,EAAE,KAET,kBArBmB,OAAAJ,EAAAc,MAAA,KAAAC,UAAA,KAyBpB,OACEtL,EAAAA,EAAAA,KAACuL,EAAAA,GAAS,CACRC,YAAa/K,EAAMmH,MAAY,OAALnH,QAAK,IAALA,GAAU,QAALiH,EAALjH,EAAOmH,WAAG,IAAAF,OAAL,EAALA,EAAYxH,IACtCuL,MAAOhL,EAAMiL,OACbC,gBAAgB,EAAM1L,SAErB,SAAC2L,EAAUhJ,GAAc,IAADkF,EAAAC,EACvB,OACEvH,EAAAA,EAAAA,MAAA,OAAAuI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM6C,EAASC,gBACTD,EAASE,iBAAe,IAC5B5J,IAAK0J,EAASG,SACd5L,UAAS,gCAAAkD,OACPT,EAASoJ,WAAa,cAAgB,qBAAoB,KACxD/L,SAAA,EAEJD,EAAAA,EAAAA,KAACiM,EAAAA,EAAK,CACJjK,OAAQsI,EACRlJ,UAAW8I,EACXxI,aAAcyI,EACdtI,OAAQ,kCAEVrB,EAAAA,EAAAA,MAAA,OACEL,UAAU,4BACVC,MAAO,CACL8L,UAAU,aAAD7I,OAAwB,QAAxByE,EAAerH,EAAMmH,WAAG,IAAAE,OAAA,EAATA,EAAWqE,WACnCC,QAASxJ,EAASoJ,WAAa,GAAM,GACrC/L,SAAA,EAEFD,EAAAA,EAAAA,KAACqM,EAAsB,CAACzE,IAAKnH,EAAMmH,OAEnCpH,EAAAA,EAAAA,MAACuB,EAAAA,EAAM,CACLV,QAAS,kBAhEFyC,EAiEOrD,EAAMwI,UAAUqD,WAjEVpM,EAiEsBO,EAAMmH,IAAI1H,GAhEhE2J,EAAa/F,GACbiG,EAAS7J,QAETiK,GAAkB,GAJA,IAACrG,EAAa5D,CAiEmC,EAEvDC,UAAU,2GACVoM,SAAUjI,EAAQG,UAAUxE,SAAA,EAE5BO,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAe,QAAf8H,EAAMtH,EAAMmH,WAAG,IAAAG,OAAA,EAATA,EAAWiD,MAAM,SACvBhL,EAAAA,EAAAA,KAAA,OAAAC,SAAMuE,aAKhB,GAGN,E,UCrEA,EAtCyB,SAAC/D,GACxB,OACET,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAEU,MAAO,OAAQb,UAC3BD,EAAAA,EAAAA,KAACwM,EAAAA,GAAS,CAACC,YAAahM,EAAMiI,OAAOxI,GAAGD,SACrC,SAAC2L,EAAUhJ,GACV,OACEpC,EAAAA,EAAAA,MAAA,OAAAuI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM6C,EAASc,gBAAc,IAC3BxK,IAAK0J,EAASG,SACd5L,UAAS,gEACTC,MAAO,CACLG,gBAAiBqC,EAAS+J,eACtB,qBACA,2BACJtM,OAAQ,QACRJ,SAAA,CAED2M,MAAMC,QAAQpM,EAAMiI,OAAOG,MACxBpI,EAAMiI,OAAOG,KAAKlJ,KAAI,SAACiI,EAAe9D,GACpC,OACE9D,EAAAA,EAAAA,KAAC8M,EAAa,CAEZlF,IAAKA,EACLqB,UAAWxI,EAAMwI,UACjByC,OAAQ5H,IAHHiJ,EAAAA,EAAAA,KAMX,IACA,GACHnB,EAASoB,eAGhB,KAIR,E,UCoBA,EAzD6B,SAACvM,GAC5B,IAAQsD,GAAUqD,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvD,MACR1F,GAA8BC,EAAAA,EAAAA,UAAmB,CAACmC,EAAMwM,UAAS1O,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D4O,EAAO1O,EAAA,GAAE2O,EAAU3O,EAAA,GAEpB4O,GAAcC,EAAAA,EAAAA,SAAO,GACrBC,GAAaD,EAAAA,EAAAA,UA0BnB,OAxBArO,EAAAA,EAAAA,YAAU,WACRsO,EAAWC,QAAUL,EAEnBI,EAAWC,SACXD,EAAWC,QAAQC,OAAS,GAC0B,IAAtDF,EAAWC,QAAQD,EAAWC,QAAQC,OAAS,KAE/CJ,EAAYG,SAAU,EAE1B,GAAG,CAACL,KAEJlO,EAAAA,EAAAA,YAAU,WACRmO,EAAW,CAACzM,EAAMwM,UAClBE,EAAYG,SAAU,CACxB,GAAG,CAAM,OAALvJ,QAAK,IAALA,OAAK,EAALA,EAAO7D,MAEXnB,EAAAA,EAAAA,YAAU,WACJoO,EAAYG,QACdJ,GAAW,SAAApC,GAAI,IAAA0C,EAAA,SAAAnK,QAAAoK,EAAAA,EAAAA,GAAQ3C,GAAI,CAAgB,QAAhB0C,EAAO,OAAL/M,QAAK,IAALA,OAAK,EAALA,EAAOwM,eAAO,IAAAO,EAAAA,EAAI,GAAI,IAEnDL,EAAYG,SAAU,CAE1B,GAAG,CAAC7M,EAAMwM,WAGRjN,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,UACnCD,EAAAA,EAAAA,KAAA,OACEI,MAAO,CACLsN,UAAU,eAADrK,OAAwC,IAAtB4J,EAAQM,OAAS,GAAO,OACnDI,WAAY,uBACZ1N,SAEDgN,EAAQtN,KAAI,SAACiO,EAAM9J,GAClB,OACE9D,EAAAA,EAAAA,KAAA,OAEEI,MAAO,CACLC,OAAQ,OACRwN,WAAY,OACZ5N,SAED2N,GANI9J,EASX,OAIR,EClBA,EAtCgC,SAACrD,GAAkB,IAADuG,EAAAC,EAAAC,EACxCnD,GAAUqD,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvD,MAER,OACE/D,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAlB,SACG,CACC,CACE6N,WAAY,qBACZb,QAAc,OAALlJ,QAAK,IAALA,GAAgB,QAAXiD,EAALjD,EAAOwD,iBAAS,IAAAP,OAAX,EAALA,EAAkBmC,gBAE7B,CACE2E,WAAY,aACZb,QAAc,OAALlJ,QAAK,IAALA,GAAgB,QAAXkD,EAALlD,EAAOwD,iBAAS,IAAAN,OAAX,EAALA,EAAkBmC,eAE7B,CACE0E,WAAY,aACZb,QAAc,OAALlJ,QAAK,IAALA,GAAgB,QAAXmD,EAALnD,EAAOwD,iBAAS,IAAAL,OAAX,EAALA,EAAkBmC,gBAE7B1J,KAAI,SAAA4K,GAA8B,IAA3BuD,EAAUvD,EAAVuD,WAAYb,EAAO1C,EAAP0C,QACnB,OACEzM,EAAAA,EAAAA,MAAA,OAEEL,UAAS,sFAAAkD,OACiB,IAAxB5C,EAAMsN,cACF,sCACA,0BAEN3N,MAAO,CAAEC,OAAQ,OAAQS,MAAO,OAAQb,SAAA,CAEvC6N,EACAb,GAAUjN,EAAAA,EAAAA,KAACgO,EAAO,CAACf,QAASA,EAASgB,KAAMH,KAAiB9N,EAAAA,EAAAA,KAACgO,EAAO,CAACf,QAAS,EAAGgB,KAAMH,MATnFA,EAYX,KAGN,ECzBA,EAlB+B,WAC7B,IAAMI,GAAgBd,EAAAA,EAAAA,QAAO,MAC7B/O,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C0P,EAAaxP,EAAA,GAAE4P,EAAgB5P,EAAA,GAatC,MAAO,CAAE2P,cAAAA,EAAeH,cAAAA,EAAeK,aAXlB,WACnB,IAAMC,EAAUH,EAAcZ,QAE9B,GAAIe,EAAS,CACX,IAAQC,EAA0CD,EAA1CC,UAAWC,EAA+BF,EAA/BE,aAAcC,EAAiBH,EAAjBG,aAGjCL,EADuBG,GADFC,EAAeC,GACe,IAErD,CACF,EAGF,E,UCfMC,EAAqB,SAAC5F,GAC1B,OAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6F,QAAO,SAACC,EAAK/G,GAExB,OAAO+G,IADa,OAAH/G,QAAG,IAAHA,OAAG,EAAHA,EAAKoD,QAAS,EAEjC,GAAG,EACL,EAUA,EAR4B,SAACvC,GAA4B,IAADmG,EAAAC,EAAAC,EAKtD,MAAO,CAAE3F,eAJcsF,EAA6B,QAAXG,EAACnG,EAAQ,UAAE,IAAAmG,OAAA,EAAVA,EAAY/F,MAI7BO,cAHHqF,EAA6B,QAAXI,EAACpG,EAAQ,UAAE,IAAAoG,OAAA,EAAVA,EAAYhG,MAGbQ,cAFlBoF,EAA6B,QAAXK,EAACrG,EAAQ,UAAE,IAAAqG,OAAA,EAAVA,EAAYjG,MAGvD,EC2FA,EA7F0B,WACxB,IAAApC,GAAsCC,EAAAA,EAAAA,KAA9Bf,EAAWc,EAAXd,YAAaC,EAAYa,EAAZb,aACrBmJ,GAAsBC,EAAAA,EAAAA,MAAfC,GAAuCzQ,EAAAA,EAAAA,GAAAuQ,EAAA,GAA5B,GACVhL,GAAUqD,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvD,MACFmL,EAAkBnL,GChBM,SAAC0E,GAC/B,OAAKmE,MAAMC,QAAQpE,GAGL,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAAS9I,KAAI,SAAC+I,GACnB,OAAW,OAANA,QAAM,IAANA,GAAAA,EAAQyG,eAAe,QAGrBzG,GAFLK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYL,GAAM,IAAEG,KAAM,IAG9B,IAPS,EAQX,CDMmCuG,CAAsB,OAALrL,QAAK,IAALA,OAAK,EAALA,EAAO0E,SACzDpK,GAA8BC,EAAAA,EAAAA,UAAwB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDoK,EAAOlK,EAAA,GAAE8Q,EAAU9Q,EAAA,GAC1B+D,GAAoDhE,EAAAA,EAAAA,WAAS,GAAMiE,GAAA/D,EAAAA,EAAAA,GAAA8D,EAAA,GAA5DgN,EAAkB/M,EAAA,GAAEgN,EAAqBhN,EAAA,GAChDiN,EACEC,EAAoBhH,GADdU,EAAcqG,EAAdrG,eAAgBC,EAAaoG,EAAbpG,cAAeC,EAAamG,EAAbnG,cAEvCqG,EACEC,IADMzB,EAAawB,EAAbxB,cAAeH,EAAa2B,EAAb3B,cAAeK,EAAYsB,EAAZtB,aAE9B1N,GAAgBC,EAAAA,EAAAA,KAAhBD,aAER3B,EAAAA,EAAAA,YAAU,WACJmQ,GACFG,EAAWH,EAEf,GAAG,CAAM,OAALnL,QAAK,IAALA,OAAK,EAALA,EAAO0E,WAEX1J,EAAAA,EAAAA,YAAU,WAC0B,IAADiI,EAA7ByB,EAAQ8E,OAAS,GAAKxJ,GACxBkL,EAAY,CACV1J,KAAMI,EACN5B,MAAO6B,EACPuF,WAASpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJhF,GAAK,IACR0E,QAASA,EACTlB,WAASwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACC,OAALhF,QAAK,IAALA,OAAK,EAALA,EAAOwD,WAAS,IACnBE,cACO,OAAL1D,QAAK,IAALA,GAAgB,QAAXiD,EAALjD,EAAOwD,iBAAS,IAAAP,OAAX,EAALA,EAAkBQ,UAClB2B,EACAC,EACAC,EACAA,EACFF,eAAAA,EACAC,cAAAA,EACAC,cAAAA,OAKV,GAAG,CAACiG,IAEJ,IAWMM,EAAY,iCAElB,OACEpP,EAAAA,EAAAA,MAAA,OACE0B,IAAKgM,EACL2B,SAAUzB,EACVjO,UAAU,0BACVC,MAAO,CACL0P,UACEpP,GAAe,IACX,oBACA,8BACNT,SAAA,EAEFD,EAAAA,EAAAA,KAAA,OAAKG,UAAS,GAAAkD,OAAKuM,EAAS,eAAc3P,UACxCD,EAAAA,EAAAA,KAAC+P,EAAuB,CAAChC,cAAeA,OAG1C/N,EAAAA,EAAAA,KAAA,OACEG,UAAS,GAAAkD,OAAKuM,GACdxP,MAAO,CAAE4P,UAAW,qBAAsB/P,UAE1CD,EAAAA,EAAAA,KAACiQ,EAAAA,GAAe,CAACC,UAjCD,SAACC,GACrBpM,GC7C0B,SAC5BoM,EACA1I,EACAgB,EACA4G,GAEA,IAAQe,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YAEhB,GAAKA,IAEHD,EAAO5E,cAAgB6E,EAAY5D,aACnC2D,EAAO3E,QAAU4E,EAAY5E,QAKJ,aAAvB2E,EAAO3D,YAEX,GAAI2D,EAAO3D,cAAgB4D,EAAY5D,YAAa,CAClD,IAAM6D,EAAyB,OAAP7H,QAAO,IAAPA,OAAO,EAAPA,EAAS8H,WAAU,SAAC7H,GAC1C,OAAOA,EAAOxI,KAAOkQ,EAAO3D,WAC9B,IAEM+D,EAA8B,OAAP/H,QAAO,IAAPA,OAAO,EAAPA,EAAS8H,WAAU,SAAC7H,GAC/C,OAAOA,EAAOxI,KAAOmQ,EAAY5D,WACnC,IAEMgE,EAAgBhI,IAAOgF,EAAAA,EAAAA,GAAQhF,EAAQ6H,GAAiBzH,MAExD6H,EACJN,EAAO3D,cAAgB4D,EAAYM,YAAUlD,EAAAA,EAAAA,GACrChF,EAAQ+H,GAAsB3H,MAClC4H,EAENG,EAAqBH,EAAcI,OAAOT,EAAO3E,MAAO,GAAjDqF,GAAmDtS,EAAAA,EAAAA,GAAAoS,EAAA,GAAzC,GACjBF,EAAmBG,OAAOR,EAAY5E,MAAO,EAAGqF,GAEhD,IAAMC,GAAUtD,EAAAA,EAAAA,GAAOhF,GAEvBsI,EAAWT,IAAgBvH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBN,EAAQ6H,IAAgB,IAC3BzH,KAAM4H,IAGRM,EAAWP,IAAqBzH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3BN,EAAQ+H,IAAqB,IAChC3H,KAAM6H,IAGRrB,EAAW0B,EACb,KAAO,CACL,IAAMC,EAAgBX,EAAY5E,MAE5B6E,EAAkB7H,EAAQ8H,WAAU,SAAC7H,GACzC,OAAOA,EAAOxI,KAAOkQ,EAAO3D,WAC9B,IAEM5D,GAAI4E,EAAAA,EAAAA,GAAOhF,EAAQ6H,GAAiBzH,MAC1CoI,EAAqBpI,EAAKgI,OAAOT,EAAO3E,MAAO,GAAxCqF,GAA0CtS,EAAAA,EAAAA,GAAAyS,EAAA,GAAhC,GACjBpI,EAAKgI,OAAOG,EAAe,EAAGF,GAE9B,IAAMI,GAAUzD,EAAAA,EAAAA,GAAOhF,GAEvByI,EAAWZ,IAAgBvH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBN,EAAQ6H,IAAgB,IAC3BzH,KAAMA,IAGRwG,EAAW6B,EACb,CACF,CDxBMC,CACEhB,EACK,OAALpM,QAAK,IAALA,GAAAA,EAAOwD,UAAUE,aACjBgB,EACA4G,GAEJE,GAAsB,SAAAzE,GAAI,OAAKA,CAAI,GACrC,EAwBgD7K,SAChC,OAAPwI,QAAO,IAAPA,OAAO,EAAPA,EAAS9I,KAAI,SAAC+I,EAAqB5E,GAClC,OACE9D,EAAAA,EAAAA,KAACoR,EAAgB,CAEf1I,OAAQA,EACRO,UAAWnF,GAFN4E,EAAOxI,GAKlB,UAKV,EEnEA,EAjC0B,WACxB,IAAQ8E,GAAaD,EAAAA,EAAAA,MAAbC,SACR3G,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCgT,EAAS9S,EAAA,GAAE+S,EAAU/S,EAAA,GAa5B,OAXAQ,EAAAA,EAAAA,YAAU,WACRuS,GAAW,GACX,IAAMC,EAAYC,YAAW,WAC3BF,GAAW,EACb,IAEA,OAAO,WACLG,aAAaF,EACf,CACF,GAAG,CAACvM,KAGFhF,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAlB,SACGoR,IACC7Q,EAAAA,EAAAA,MAAA,OACEL,UAAU,6BACVC,MAAO,CACLW,SAAU,SACVD,MAAO,QACPb,SAAA,EAEFD,EAAAA,EAAAA,KAAC0R,EAAY,KACb1R,EAAAA,EAAAA,KAAC2R,EAAiB,QAK5B,ECYA,EAtC6B,WAC3B,IAAAC,GAAoCxK,EAAAA,EAAAA,KAClC,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IADhCvD,EAAK6N,EAAL7N,MAAO3B,EAAKwP,EAALxP,MAAOqC,EAASmN,EAATnN,UAGtBoN,GAA+CzK,EAAAA,EAAAA,KAC7C,SAACC,GAAgB,OAAKA,EAAMyK,SAAS,IAD/BC,EAAcF,EAAdE,eAAgBC,EAAkBH,EAAlBG,mBAGhBC,GAAoB7K,EAAAA,EAAAA,KAC1B,SAACC,GAAgB,OAAKA,EAAM6K,UAAU,IADhCD,gBAIA7M,GAAyB+M,EAAAA,EAAAA,KAAzB/M,qBAwBR,MAAO,CAAEgN,aApBL3N,GAAauN,GACAK,EAAAA,EAAAA,IACbrS,EAAAA,EAAAA,KAAC0E,EAAAA,EAAO,CAACC,UAAU,SAASE,QAAQ,YAAY1E,UAAU,OAAMF,UAC9DD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,kBAAiBF,SAAC,kBAG7BmC,GAAS2P,GAAkBE,GACrBI,EAAAA,EAAAA,IACbrS,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BF,SAAC,mDAEvC8D,GAAuB,MAAT,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO7D,KAQXF,EAAAA,EAAAA,KAACsS,EAAiB,KAPlBC,EAAAA,EAAAA,IACb/R,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAK,+BACqBmF,EAAqB,4CAQrD,E,UCJA,EAjCwB,WACtBoN,IACEC,KACAC,EAAAA,EAAAA,KAIF,IAAMpT,GAAOqT,EAAAA,EAAAA,OACbC,EAAAA,EAAAA,IAAmBtT,GAAM,SAAAuT,GACvB,GAAIA,EAGUA,EAAKC,GAOrB,IAIA,IAAQV,EAAiBW,IAAjBX,aAKR,OAJAI,KAIOhS,EAAAA,EAAAA,MAACwS,EAAAA,EAAc,CAAA/S,SAAA,CAAEmS,EAAa,MAGvC,C,2FCxCaG,EAAoB,SAACU,GAA2B,OAC3DjT,EAAAA,EAAAA,KAAA,OACEG,UAAU,iFACVC,MAAO,CACLW,SAAU,SACVD,MAAO,OACPT,OAAQ,QACRJ,SAEDgT,GACG,EAGKZ,EAA2B,SAACY,GAA2B,OAClEjT,EAAAA,EAAAA,KAAA,OACEG,UAAU,6DACVC,MAAO,CACLU,MAAO,QACPT,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,yBACjBN,SAEDgT,GACG,C","sources":["components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/IndexContainer.tsx","components/alert/Alert.tsx","services/useDatabaseListMonths.tsx","hooks/updateReduxDatabase/useReduxListMonths.tsx","hooks/useHTTPState.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx","hooks/updateReduxDatabase/useReduxListUsers.tsx","hooks/updateReduxDatabase/useReduxMonthData.tsx","pages/monthPanel/HoursSummary.tsx","pages/monthPanel/MonthPanelDayPrintData.tsx","pages/monthPanel/monthPanelDay/utilsMonthPanelDay.tsx","pages/monthPanel/monthPanelDay/MonthPanelDay.tsx","pages/monthPanel/MonthPanelColumn.tsx","pages/monthPanel/columnsHeaderCounter/ColumnsHeaderCounter.tsx","pages/monthPanel/monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader.tsx","pages/monthPanel/monthPanelColmns/useScrollThumbPosition.tsx","utils/getHoursFromColumns.tsx","pages/monthPanel/monthPanelColmns/MonthPanelColumns.tsx","pages/monthPanel/monthPanelColmns/utilsMonthPanelColumns.tsx","pages/monthPanel/indexMonthPanel/MonthPanelContent.tsx","pages/monthPanel/indexMonthPanel/useRequestMonthPanel.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","utils/printPanelContent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown\">\r\n            Wylogowanie nastąpi za\r\n            <div\r\n             className=\"d-flex mx-auto w-fit-content\"\r\n            >\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\nimport AutoLogout from \"./autoLogout/AutoLogout\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { onValue, ref } from \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { database } from \"../data/firebaseConfig\";\r\n\r\nconst useDatabaseListMonths = () => {\r\n  const reference = ref(database);\r\n  const [error, setError] = useState(\"\");\r\n  const [databaseListMonths, setDatabaseListMonths] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(\r\n      reference,\r\n      snapshot => {\r\n        let keysYears: string[] = [];\r\n        let monthsCollection: any = [];\r\n\r\n        snapshot?.forEach((firstLevelSnapshot: any) => {\r\n          const firstLevelKey = firstLevelSnapshot.key;\r\n          keysYears.push(firstLevelKey);\r\n\r\n          const nestedKeysRef = ref(database, `${firstLevelKey}`);\r\n          onValue(\r\n            nestedKeysRef,\r\n            nestedSnapshot => {\r\n              let keysMonths: string[] = [];\r\n\r\n              nestedSnapshot?.forEach((nestedKeySnapshot: any) => {\r\n                const nestedKey = nestedKeySnapshot.key;\r\n                keysMonths.push(nestedKey.slice(6));\r\n              });\r\n\r\n              monthsCollection.push(keysMonths);\r\n            },\r\n\r\n            nestedError => {\r\n              setError(\"Błąd. Odśwież stronę\");\r\n            }\r\n          );\r\n        });\r\n\r\n        const months = [...monthsCollection]\r\n          .map((monthsInYear, idx) => {\r\n            return monthsInYear.map((month: any) => {\r\n              return keysYears[idx] + \"-\" + month;\r\n            });\r\n          })\r\n          .flat()\r\n          .reverse();\r\n\r\n        setDatabaseListMonths(months);\r\n      },\r\n      error => {\r\n        setError(\"Błąd. Odśwież stronę\");\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    databaseListMonths,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useDatabaseListMonths;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getListMonths,\r\n  getListMonthsError,\r\n} from \"../../redux/storeFeatures/listMonthsSlice\";\r\nimport useDatabaseListMonths from \"../../services/useDatabaseListMonths\";\r\n\r\nconst useReduxListMonths = () => {\r\n  const dispatch = useDispatch();\r\n  const { databaseListMonths, error } = useDatabaseListMonths();\r\n\r\n  useEffect(() => {\r\n    dispatch(getListMonths(databaseListMonths));\r\n    dispatch(getListMonthsError(error));\r\n  }, [databaseListMonths, dispatch]);\r\n};\r\n\r\nexport default useReduxListMonths;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(9);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return { monthURLStringFormat };\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return { monthURLStringFormat };\r\n  }\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import { useEffect } from \"react\";\r\nimport { useUsersQuery } from \"../../services/apiSliceUsers\";\r\nimport {\r\n  geListtUsers,\r\n  getListUsersError,\r\n  getListUsersIsLoading,\r\n} from \"../../redux/storeFeatures/listUsersSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useReduxListUsers = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading } = useUsersQuery();\r\n\r\n  useEffect(() => {\r\n    dispatch(geListtUsers(data));\r\n\r\n    dispatch(getListUsersError(error));\r\n\r\n    dispatch(getListUsersIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxListUsers;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useMonthDataQuery } from \"../../services/apiSliceMonths\";\r\nimport useURLValues from \"../useURLValues\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nconst useReduxMonthData = () => {\r\n  const dispatch = useDispatch();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  const year = isMonthInURL ? yearFromURL : \"\";\r\n  const month = isMonthInURL ? monthFromURL : \"\";\r\n\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year,\r\n    month,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getMonth(data));\r\n    dispatch(getMonthError(error));\r\n    dispatch(getMonthIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxMonthData;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\nconst HoursSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  return (\r\n    <div className=\"d-flex mx-auto fw-medium pb-2 w-fit-content\">\r\n      <div>Wszystkie {month?.calcHours?.allHours}&nbsp;-&nbsp;</div>\r\n\r\n      <div\r\n        className={`${\r\n          month && month?.calcHours?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n        }`}\r\n      >\r\n        {month && month?.calcHours?.currentHours} {\"\"}\r\n        {month && month?.calcHours?.currentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursSummary;\r\n","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n}\r\n\r\nconst MonthPanelDayPrintData = (props: Props) => {\r\n  let dateToPrint;\r\n\r\n  if (!props?.day?.date) {\r\n    return <div>Brak danych</div>;\r\n  } else {\r\n    const date = new Date(props.day.date);\r\n    dateToPrint = new Intl.DateTimeFormat(\"pl-PL\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(date);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between fs-7 \">\r\n          <div>{props.day?.userName}</div>\r\n\r\n          <div>\r\n            {props.day?.place === \"Poza\" ? (\r\n              <TbArrowBigRightLineFilled style={{ color: \"rgb(80,173,150)\" }} />\r\n            ) : (\r\n              <MdFactory style={{ color: \"rgb(255, 181, 9)\" }} />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex fw-medium justify-content-between\">\r\n          <div>{dateToPrint ? dateToPrint : \"\"}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MonthPanelDayPrintData;\r\n","import { ModelMonth } from \"../../../sharedModels/modelMonth\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const deleteDayById = (obj: ModelMonth, idToDelete: string) => {\r\n  const updatedColumns = obj.columns.map((column: ModelColumn) => {\r\n    const updatedDays = column?.days?.filter(day => day.id !== idToDelete);\r\n    return { ...column, days: updatedDays };\r\n  });\r\n  return { ...obj, columns: updatedColumns };\r\n};\r\n\r\nexport const calculateUpdatedCalcHours = (\r\n  month: ModelMonth | null,\r\n  columnIdx: number,\r\n  subtractedHours: number | undefined\r\n) => {\r\n  if (!month || !month.calcHours) {\r\n     return {\r\n       currentHours: 0,\r\n       submittedHours: 0,\r\n       acceptedHours: 0,\r\n       rejectedHours: 0,\r\n       allHours: 0,\r\n     };\r\n  }\r\n\r\n  const { calcHours } = month;\r\n\r\n  return {\r\n    ...calcHours,\r\n    currentHours:\r\n      columnIdx !== 2 && subtractedHours\r\n        ? calcHours.currentHours + subtractedHours\r\n        : calcHours.currentHours,\r\n    submittedHours:\r\n      columnIdx === 0 && subtractedHours\r\n        ? calcHours.submittedHours - subtractedHours\r\n        : calcHours.submittedHours,\r\n    acceptedHours:\r\n      columnIdx === 1 && subtractedHours\r\n        ? calcHours.acceptedHours - subtractedHours\r\n        : calcHours.acceptedHours,\r\n    rejectedHours:\r\n      columnIdx === 2 && subtractedHours\r\n        ? calcHours.rejectedHours - subtractedHours\r\n        : calcHours.rejectedHours,\r\n  };\r\n};","import { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useDeleteDayMutation } from \"../../../services/apiSliceMonths\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport MonthPanelDayPrintData from \"../MonthPanelDayPrintData\";\r\nimport { calculateUpdatedCalcHours, deleteDayById } from \"./utilsMonthPanelDay\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst MonthPanelDay = (props: Props) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger\" />\r\n  );\r\n\r\n  const [columnIdx, setColumnIdx] = useState(\"\");\r\n  const [dayId, setDayId] = useState(\"\");\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const findDay = {\r\n    ...month?.columns[props.columnIdx].days?.find(day => {\r\n      return day?.id === props.day.id;\r\n    }),\r\n  };\r\n\r\n  const handleAlert = (idx: string, id: string) => {\r\n    setColumnIdx(idx);\r\n    setDayId(id);\r\n\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteDayAsync = async () => {\r\n    if (findDay?.id === dayId) {\r\n      const subtractedHours = findDay?.hours;\r\n\r\n      month &&\r\n        (await deleteDay({\r\n          year: yearFromURL,\r\n          month: monthFromURL,\r\n          colIdx: props.columnIdx,\r\n          monthBody: {\r\n            ...month,\r\n            calcHours: calculateUpdatedCalcHours(\r\n              month,\r\n              +columnIdx,\r\n              subtractedHours\r\n            ),\r\n\r\n            columns: deleteDayById({ ...month }, dayId).columns,\r\n          },\r\n        }));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white rounded border ${\r\n              snapshot.isDragging ? \"border-dark\" : \"border-dark-subtle\"\r\n            } `}\r\n          >\r\n            <Alert\r\n              action={deleteDayAsync}\r\n              isPrinted={isAlertPrinted}\r\n              setIsPrinted={setIsAlertPrinted}\r\n              header={\"Usunąć dzień?\"}\r\n            />\r\n            <div\r\n              className=\"px-1 py-2 py-sm-1 rounded\"\r\n              style={{\r\n                borderTop: `8px solid ${props.day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.8 : 1,\r\n              }}\r\n            >\r\n              <MonthPanelDayPrintData day={props.day} />\r\n\r\n              <Button\r\n                onClick={() =>\r\n                  handleAlert(props.columnIdx.toString(), props.day.id)\r\n                }\r\n                className=\"d-flex justify-content-between  align-items-center w-100 p-0 bg-transparent border-0 fw-medium text-dark\"\r\n                disabled={success.isLoading}\r\n              >\r\n                <div>{props.day?.hours} h</div>\r\n                <div>{btnContent}</div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default MonthPanelDay;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport MonthPanelDay from \"./monthPanelDay/MonthPanelDay\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { ModelColumn } from \"../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ninterface Props {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n}\r\n\r\nconst MonthPanelColumn = (props: Props) => {\r\n  return (\r\n    <div style={{ width: \"33%\" }}>\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={`p-1 h-100 overflow-hidden border border-1 border border-top-0`}\r\n              style={{\r\n                backgroundColor: snapshot.isDraggingOver\r\n                  ? \"rgba(0, 0, 0, 0.1)\"\r\n                  : \"rgba(255, 255, 255, 0.2)\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <MonthPanelDay\r\n                        key={UUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumn;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_columnsHeaderCounter.scss\";\r\n\r\ntype Props = {\r\n  counter: any;\r\n  text: string;\r\n};\r\n\r\nconst ColumnsHeaderCounter = (props: Props) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [counter, setCounter] = useState<number[]>([props.counter]);\r\n\r\n  const didMountRef = useRef(true);\r\n  const counterRef = useRef<number[]>();\r\n\r\n  useEffect(() => {\r\n    counterRef.current = counter;\r\n    if (\r\n      counterRef.current &&\r\n      counterRef.current.length > 0 &&\r\n      counterRef.current[counterRef.current.length - 1] === 0\r\n    ) {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [counter]);\r\n\r\n  useEffect(() => {\r\n    setCounter([props.counter]);\r\n    didMountRef.current = false;\r\n  }, [month?.id]);\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      setCounter(prev => [...prev, props?.counter ?? 0]);\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [props.counter]);\r\n\r\n  return (\r\n    <div className=\"columnsHeaderCounter\">\r\n      <div\r\n        style={{\r\n          transform: `translateY(-${(counter.length - 1) * 20}px)`,\r\n          transition: \"transform 0.3s ease\",\r\n        }}\r\n      >\r\n        {counter.map((item, idx) => {\r\n          return (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                height: \"20px\",\r\n                marginLeft: \"3px\",\r\n              }}\r\n            >\r\n              {item}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnsHeaderCounter;\r\n","import Col from \"react-bootstrap/Col\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport Counter from \"../columnsHeaderCounter/ColumnsHeaderCounter\";\r\n\r\ninterface Props {\r\n  thumbPosition: number;\r\n}\r\n\r\nconst MonthPanelColumnsHeader = (props: Props) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  return (\r\n    <>\r\n      {[\r\n        {\r\n          headerText: \"Złożone:\",\r\n          counter: month?.calcHours?.submittedHours,\r\n        },\r\n        {\r\n          headerText: \"Przyznane:\",\r\n          counter: month?.calcHours?.acceptedHours,\r\n        },\r\n        {\r\n          headerText: \"Odrzucone:\",\r\n          counter: month?.calcHours?.rejectedHours,\r\n        },\r\n      ].map(({ headerText, counter }) => {\r\n        return (\r\n          <div\r\n            key={headerText}\r\n            className={`text-dark-emphasis fs-responsive bg-white fw-medium p-1 d-flex align-items-center  ${\r\n              props.thumbPosition === 0\r\n                ? \"border-bottom border-3 border-white\"\r\n                : \"border-bottom border-3\"\r\n            }`}\r\n            style={{ height: \"35px\", width: \"33%\" }}\r\n          >\r\n            {headerText}\r\n            {counter ? <Counter counter={counter} text={headerText} /> : <Counter counter={0} text={headerText} />}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumnsHeader;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useScrollThumbPosition = () => {\r\n  const scrollableRef = useRef(null);\r\n  const [thumbPosition, setThumbPosition] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const element = scrollableRef.current;\r\n\r\n    if (element) {\r\n      const { scrollTop, scrollHeight, clientHeight } = element;\r\n      const maxScrollTop = scrollHeight - clientHeight;\r\n      const thumbPosition = (scrollTop / maxScrollTop) * 100;\r\n      setThumbPosition(thumbPosition);\r\n    }\r\n  };\r\n\r\n  return { scrollableRef, thumbPosition, handleScroll };\r\n};\r\n\r\nexport default useScrollThumbPosition;\r\n","import { ModelDay } from \"../sharedModels/modelDay\";\r\nimport { ModelColumn } from \"../sharedModels/modelColumn\";\r\n\r\nconst getHoursFromColumn = (days: ModelDay[]) => {\r\n  return days?.reduce((acu, day) => {\r\n    const dayHours = day?.hours || 0;\r\n    return acu + dayHours;\r\n  }, 0);\r\n};\r\n\r\nconst getHoursFromColumns = (columns: ModelColumn[]) => {\r\n  const submittedHours = getHoursFromColumn(columns[0]?.days);\r\n  const acceptedHours = getHoursFromColumn(columns[1]?.days);\r\n  const rejectedHours = getHoursFromColumn(columns[2]?.days);\r\n\r\n  return { submittedHours, acceptedHours, rejectedHours };\r\n};\r\n\r\nexport default getHoursFromColumns;\r\n","import { useEffect, useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useUpdateMonthMutation } from \"../../../services/apiSliceMonths\";\r\nimport MonthPanelColumn from \"../MonthPanelColumn\";\r\nimport MonthPanelColumnsHeader from \"../monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader\";\r\nimport useScrollThumbPosition from \"./useScrollThumbPosition\";\r\nimport { addDaysToColumns, handleDragDrop } from \"./utilsMonthPanelColumns\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\nimport getHoursFromColumns from \"../../../utils/getHoursFromColumns\";\r\n\r\nconst MonthPanelColumns = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const columnsWithDays = month && addDaysToColumns(month?.columns);\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n  const [executeUpdateMonth, setExecuteUpdateMonth] = useState(false);\r\n  const { submittedHours, acceptedHours, rejectedHours } =\r\n    getHoursFromColumns(columns);\r\n  const { scrollableRef, thumbPosition, handleScroll } =\r\n    useScrollThumbPosition();\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  useEffect(() => {\r\n    if (columnsWithDays) {\r\n      setColumns(columnsWithDays);\r\n    }\r\n  }, [month?.columns]);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0 && month) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calcHours: {\r\n            ...month?.calcHours,\r\n            currentHours:\r\n              month?.calcHours?.allHours -\r\n              submittedHours -\r\n              acceptedHours -\r\n              rejectedHours +\r\n              rejectedHours,\r\n            submittedHours,\r\n            acceptedHours,\r\n            rejectedHours,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [executeUpdateMonth]);\r\n\r\n  const handleDragEnd = (results: DropResult) => {\r\n    month &&\r\n      handleDragDrop(\r\n        results,\r\n        month?.calcHours.currentHours,\r\n        columns,\r\n        setColumns\r\n      );\r\n    setExecuteUpdateMonth(prev => !prev);\r\n  };\r\n\r\n  const rowStyles = \"d-flex justify-content-between\";\r\n\r\n  return (\r\n    <div\r\n      ref={scrollableRef}\r\n      onScroll={handleScroll}\r\n      className=\"overflow-y-scroll h-100\"\r\n      style={{\r\n        maxHeight:\r\n          windowWidth >= 500\r\n            ? \"calc(100% - 32px)\"\r\n            : \"calc(100% - 32px - 2.5rem)\",\r\n      }}\r\n    >\r\n      <div className={`${rowStyles} sticky-top`}>\r\n        <MonthPanelColumnsHeader thumbPosition={thumbPosition} />\r\n      </div>\r\n\r\n      <div\r\n        className={`${rowStyles}`}\r\n        style={{ minHeight: \"calc(100% - 35px)\" }}\r\n      >\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {columns?.map((column: ModelColumn, idx: number) => {\r\n            return (\r\n              <MonthPanelColumn\r\n                key={column.id}\r\n                column={column}\r\n                columnIdx={idx}\r\n              />\r\n            );\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumns;\r\n","import { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column: ModelColumn) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: any,\r\n  currentHours: number,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n\r\n  if (source.droppableId === \"rejected\") return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns?.findIndex((column: ModelColumn) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns?.findIndex((column: ModelColumn) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: ModelColumn) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport HoursSummary from \"../HoursSummary\";\r\nimport MonthPanelColumns from \"../monthPanelColmns/MonthPanelColumns\";\r\n\r\nconst MonthPanelContent = () => {\r\n  const { pathname } = useLocation();\r\n  const [isAnimate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAnimate(false);\r\n    const timeoutId = setTimeout(() => {\r\n      setAnimate(true);\r\n    });\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      {isAnimate && (\r\n        <div\r\n          className=\"pe-1 pb-1 opacityAnimation\"\r\n          style={{\r\n            maxWidth: \"1000px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <HoursSummary />\r\n          <MonthPanelColumns />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelContent;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  printPanelContent,\r\n  printPanelLoadingContent,\r\n} from \"../../../utils/printPanelContent\";\r\nimport MonthPanelContent from \"./MonthPanelContent\";\r\n\r\nconst useRequestMonthPanel = () => {\r\n  const { month, error, isLoading } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  let requestState;\r\n\r\n  if (isLoading || listUsersIsLoading) {\r\n    requestState = printPanelLoadingContent(\r\n      <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (error || listUsersError || listMonthsError) {\r\n    requestState = printPanelLoadingContent(\r\n      <div className=\"text-danger text-center fs-4 \">Błąd. Odśwież stronę</div>\r\n    );\r\n  } else if (!month || month?.id === \"\") {\r\n    requestState = printPanelContent(\r\n      <div>\r\n        Brak danych z miesiąca {monthURLStringFormat}. Zapisz miesiąc w\r\n        ustawieniach.\r\n      </div>\r\n    );\r\n  } else {\r\n    requestState = <MonthPanelContent />;\r\n  }\r\n  return { requestState };\r\n};\r\n\r\nexport default useRequestMonthPanel;\r\n","import { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport IndexContainer from \"../../../components/IndexContainer\";\r\nimport useReduxListMonths from \"../../../hooks/updateReduxDatabase/useReduxListMonths\";\r\nimport useReduxListUsers from \"../../../hooks/updateReduxDatabase/useReduxListUsers\";\r\nimport useReduxMonthData from \"../../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport useRequestMonthPanel from \"./useRequestMonthPanel\";\r\nimport { auth } from \"../../../data/firebaseConfig\";\r\n  import { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  useReduxMonthData();\r\n    useReduxListUsers();\r\n    useReduxListMonths();\r\n  // const [user] = useAuthState(auth);\r\n\r\n\r\n  const auth = getAuth();\r\n  onAuthStateChanged(auth, user => {\r\n    if (user) {\r\n      // User is signed in, see docs for a list of available properties\r\n      // https://firebase.google.com/docs/reference/js/auth.user\r\n      const uid = user.uid;\r\n  \r\n      // ...\r\n    } else {\r\n      // User is signed out\r\n      // ...\r\n    }\r\n  });\r\n\r\n\r\n\r\n  const { requestState } = useRequestMonthPanel();\r\n  useReduxMonthData()\r\n\r\n  // console.log(\"\", auth.currentUser?.reloadUserInfo);\r\n\r\n  return <IndexContainer>{requestState} </IndexContainer>;\r\n\r\n    // return <IndexContainer> uuuu </IndexContainer>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n","export const printPanelContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"d-flex justify-content-center align-items-center fs-3 text-warning text-center\"\r\n    style={{\r\n      maxWidth: \"1000px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n\r\nexport const printPanelLoadingContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top d-flex justify-content-center align-items-center\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","_jsx","children","id","className","style","height","zIndex","backgroundColor","_jsxs","props","windowWidth","useWindowWidth","overflow","position","width","maxWidth","AutoLogout","dispatch","useDispatch","_Fragment","isPrinted","onClick","e","_e$target","_e$target2","target","setIsPrinted","printAlert","handleClose","header","includes","Button","action","reference","ref","database","error","setError","_useState3","_useState4","databaseListMonths","setDatabaseListMonths","unsubscribe","onValue","snapshot","keysYears","monthsCollection","forEach","firstLevelSnapshot","firstLevelKey","key","push","nestedKeysRef","concat","nestedSnapshot","keysMonths","nestedKeySnapshot","nestedKey","slice","nestedError","months","monthsInYear","idx","month","flat","reverse","_useDatabaseListMonth","useDatabaseListMonths","getListMonths","getListMonthsError","success","btnText","btnContent","isLoading","Spinner","animation","size","variant","monthURL","useLocation","pathname","test","_Intl$DateTimeFormat","monthURLToDateFormat","monthURLStringFormat","Intl","DateTimeFormat","year","timeZone","format","split","yearFromURL","monthFromURL","isMonthInURL","window","innerWidth","setWindowWidth","handleResize","removeEventListener","_useUsersQuery","useUsersQuery","data","geListtUsers","getListUsersError","getListUsersIsLoading","_useURLValues","useURLValues","_useMonthDataQuery","useMonthDataQuery","getMonth","getMonthError","getMonthIsLoading","_month$calcHours","_month$calcHours2","_month$calcHours3","_month$calcHours4","useSelector","state","monthPanel","calcHours","allHours","currentHours","_props$day","dateToPrint","day","date","_props$day2","_props$day3","userName","place","TbArrowBigRightLineFilled","color","MdFactory","deleteDayById","obj","idToDelete","updatedColumns","columns","column","_column$days","updatedDays","days","filter","_objectSpread","calculateUpdatedCalcHours","columnIdx","subtractedHours","submittedHours","acceptedHours","rejectedHours","_month$columns$props$","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","deleteDay","useHTTPState","RiDeleteBin6Line","setColumnIdx","dayId","setDayId","_useState5","_useState6","isAlertPrinted","setIsAlertPrinted","findDay","find","deleteDayAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","hours","t0","colIdx","monthBody","stop","apply","arguments","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","draggableProps","dragHandleProps","innerRef","isDragging","Alert","borderTop","userColor","opacity","MonthPanelDayPrintData","toString","disabled","Droppable","droppableId","droppableProps","isDraggingOver","Array","isArray","MonthPanelDay","UUID","placeholder","counter","setCounter","didMountRef","useRef","counterRef","current","length","_props$counter","_toConsumableArray","transform","transition","item","marginLeft","headerText","thumbPosition","Counter","text","scrollableRef","setThumbPosition","handleScroll","element","scrollTop","scrollHeight","clientHeight","getHoursFromColumn","reduce","acu","_columns$","_columns$2","_columns$3","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","columnsWithDays","hasOwnProperty","addDaysToColumns","setColumns","executeUpdateMonth","setExecuteUpdateMonth","_getHoursFromColumns","getHoursFromColumns","_useScrollThumbPositi","useScrollThumbPosition","rowStyles","onScroll","maxHeight","MonthPanelColumnsHeader","minHeight","DragDropContext","onDragEnd","results","source","destination","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","MonthPanelColumn","isAnimate","setAnimate","timeoutId","setTimeout","clearTimeout","HoursSummary","MonthPanelColumns","_useSelector","_useSelector2","listUsers","listUsersError","listUsersIsLoading","listMonthsError","listMonths","useMonthURLToString","requestState","printPanelLoadingContent","MonthPanelContent","printPanelContent","useReduxMonthData","useReduxListUsers","useReduxListMonths","getAuth","onAuthStateChanged","user","uid","useRequestMonthPanel","IndexContainer","contentJSX"],"sourceRoot":""}