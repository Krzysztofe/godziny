{"version":3,"file":"static/js/615.35599cfd.chunk.js","mappings":"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","sources":["components/inputs/TextInput.tsx","components/inputs/RadioInput.tsx","pages/hoursPanel/DayForm.tsx","pages/hoursPanel/utils.tsx","pages/hoursPanel/Day.tsx","pages/hoursPanel/Column.tsx","pages/hoursPanel/dataHoursPanel.tsx","pages/hoursPanel/HeaderInPanel.tsx","pages/hoursPanel/IndexHoursPanel.tsx"],"sourcesContent":["export interface Props {\r\n  type: string;\r\n  name: string;\r\n  value: string | number;\r\n  label: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst TextInput = (props: Props) => {\r\n  return (\r\n    <div >\r\n      <label>{props.label}</label>\r\n      <input\r\n        type={props.type}\r\n        name={props.name}\r\n        value={props.value}\r\n        onChange={props.handleChange}\r\n        placeholder={props.placeholder}\r\n        style={{ width: 50 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import { ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  value: string;\r\n  name: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  checked: boolean;\r\n  containerClass?: string;\r\n  inuptClass?: string;\r\n  labelClass?: string;\r\n  label?: ReactNode;\r\n}\r\n\r\nconst RadioInput = (props: Props) => {\r\n  return (\r\n    <div className={props.containerClass}>\r\n      <input\r\n        type=\"radio\"\r\n        name={props.name}\r\n        value={props.value}\r\n        checked={props.checked}\r\n        onChange={props.handleChange}\r\n        className={props.inuptClass}\r\n        id={props.value}\r\n      />\r\n      <label htmlFor={props.value} className={props.labelClass}>\r\n       <small> {props.label ? props.label : props.value}</small>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import { FormEvent, useState } from \"react\";\r\nimport TextInput from \"../../components/inputs/TextInput\";\r\nimport RadioInput from \"../../components/inputs/RadioInput\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { FcApproval } from \"react-icons/fc\";\r\n\r\nconst DayForm = () => {\r\n  const [userData, setUserData] = useState({\r\n    hours: \"\",\r\n    userName: \"\",\r\n    location: \"\",\r\n  });\r\n\r\n  const handleInputChange = () => {\r\n    return;\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        {[\r\n          { type: \"date\", name: \"date\", label: \"Dzień\" },\r\n          { type: \"number\", name: \"hours\", label: \"Godz\" },\r\n          { type: \"text\", name: \"userName\", label: \"Imię\" },\r\n        ].map(({ type, name, label }) => {\r\n          return (\r\n            <TextInput\r\n              key={name}\r\n              type={type}\r\n              name={name}\r\n              value={userData[name as keyof typeof userData]}\r\n              label={label}\r\n              placeholder={label}\r\n              handleChange={handleInputChange}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {[\"Wewnątrz\", \"Poza\"].map(location => {\r\n          return (\r\n            <RadioInput\r\n              key={location}\r\n              value={location}\r\n              name={\"location\"}\r\n              handleChange={handleInputChange}\r\n              checked={userData.location === location}\r\n            />\r\n          );\r\n        })}\r\n        <button>\r\n          <FcApproval />\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayForm;\r\n","export const createDaysInColumn = (num: number) => {\r\n  let days = [];\r\n\r\n  for (let i = 1; i <= num; i++) {\r\n    days.push({\r\n      id: crypto.randomUUID(),\r\n      content: i.toString(),\r\n      userName: \"\",\r\n      date:\"\",\r\n      hours: 0,\r\n      location: \"\",\r\n    });\r\n  }\r\n\r\n  return days;\r\n};\r\n\r\nexport const addDaysToEmptyColumns = (arr: any) => {\r\n  return arr?.map((obj: any) => {\r\n    if (!obj.hasOwnProperty(\"days\")) {\r\n      return { ...obj, days: [] };\r\n    }\r\n    return obj;\r\n  });\r\n};\r\n\r\nexport const handleDragDrop = (results: any, columns: any, setColumns: any) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId\r\n     &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = [...columns[sourceColumnIdx].days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport DayForm from \"./DayForm\";\r\nimport {\r\n  useUpdateColumnsMutation,\r\n  useDeleteAllColumnsMutation,\r\n  useDeleteDayMutation,\r\n  useColumnsQuery,\r\n} from \"../../services/apiSlice\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { addDaysToEmptyColumns } from \"./utils\";\r\n\r\ninterface Props {\r\n  day: any;\r\n  index: any;\r\n  columnIdx: any;\r\n  dayIdx: any;\r\n}\r\n\r\nconst Day = (props: Props) => {\r\n  const [updateColumns] = useUpdateColumnsMutation();\r\n\r\n  const [deleteDay, isLoading] = useDeleteDayMutation();\r\n\r\n  const { data, error } = useColumnsQuery(undefined);\r\n  const columnsIdFRomDatabase = data && Object.keys(data).join();\r\n  const columnsFromDatabase = data ? Object.values(data).flat() : [];\r\n  const columnsToPrint = addDaysToEmptyColumns(columnsFromDatabase);\r\n \r\n  const updatedColumnsx = data ? [...columnsToPrint] : [];\r\n\r\n\r\n\r\n  const handleUpdate = async (id: any) => {\r\n    const updatedColumnsWithFilteredDay = updatedColumnsx.map((column: any) => {\r\n      if (column && column.days) {\r\n        return {\r\n          ...column,\r\n          days: column.days.filter((day: any) => day.id !== id),\r\n        };\r\n      }\r\n      return column;\r\n    });\r\n\r\n    await updateColumns({\r\n      id: columnsIdFRomDatabase,\r\n      columns: updatedColumnsWithFilteredDay,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"1px solid black\" }}>\r\n      <Draggable\r\n        draggableId={props.day && props.day.id.toString()}\r\n        index={props.index}\r\n      >\r\n        {provided => {\r\n          return (\r\n            <div\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <strong>{props.day.content}</strong>\r\n\r\n              <DayForm />\r\n\r\n              <button onClick={() => handleUpdate(props.day.id)}>\r\n                <FaTrashAlt />\r\n              </button>\r\n            </div>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport Day from \"./Day\";\r\n\r\ninterface Props {\r\n  column: any;\r\n  columnIdx:any\r\n}\r\n\r\nconst Column = (props: Props) => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h4>{props.column.columnName} </h4>\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={{\r\n                border: \"1px solid black\",\r\n                width: \"30vw\",\r\n                minHeight: \"100vh\",\r\n                height: \"fit-content\",\r\n              }}\r\n            >\r\n              {props.column.days && props.column.days.length >0 &&\r\n                props.column?.days?.map((day: any, idx: any) => {\r\n                  return (\r\n                    <Day day={day} index={idx} key={crypto.randomUUID()} columnIdx = {props.columnIdx}\r\n                    dayIdx = {idx}\r\n                    />\r\n                  );\r\n                })}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","// interface DayModel {\r\n//   id: string;\r\n//   content: string;\r\n// }\r\n\r\ninterface ColumnModel {\r\n  id: string;\r\n  columnName: string;\r\n  days?: any;\r\n}\r\n\r\nexport const columnsWithDays: ColumnModel[] = [\r\n  {\r\n    id: \"miesiac\",\r\n    columnName: \"Miesiąc\",\r\n    days: [],\r\n  },\r\n  {\r\n    id: \"oczekujące\",\r\n    columnName: \"Oczekujące\",\r\n  },\r\n  {\r\n    id: \"zatwierdzone\",\r\n    columnName: \"Zatwierdzone\",\r\n  },\r\n];\r\n\r\n\r\n\r\n\r\n// const columnsWithDays = [\r\n//   {\r\n//     id: \"miesiac\",\r\n//     columnName: \"Miesiąc\",\r\n//     days: [\r\n//       {\r\n//         content: \"1\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f0806492\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//       {\r\n//         content: \"2\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f0806498\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//       {\r\n//         content: \"3\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f0806490\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"oczekujące\",\r\n//     columnName: \"Oczekujące\",\r\n//     days: [\r\n//       {\r\n//         content: \"1\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f08064926\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//       {\r\n//         content: \"2\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f08064987\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//       {\r\n//         content: \"3\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f08064909\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//     ],\r\n//   },\r\n//   {\r\n//     id: \"zatwierdzone\",\r\n//     columnName: \"Zatwierdzone\",\r\n//     days: [\r\n//       {\r\n//         content: \"1\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f080649\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//       {\r\n//         content: \"2\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f080649\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//       {\r\n//         content: \"3\",\r\n//         date: \"\",\r\n//         hours: 0,\r\n//         id: \"40e4e6b4-4c37-4df4-8015-2394f080649\",\r\n//         location: \"\",\r\n//         userName: \"\",\r\n//       },\r\n//     ],\r\n//   },\r\n// ];\r\n\r\n\r\n","import TextInput from \"../../components/inputs/TextInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { handleChange } from \"../../redux/storeFeatures/hoursPanelSlice\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport {\r\n  useAddDaysMutation,\r\n  useColumnsQuery,\r\n  useUpdateColumnsMutation,\r\n  useDeleteAllColumnsMutation,\r\n} from \"../../services/apiSlice\";\r\nimport { addDaysToEmptyColumns, createDaysInColumn } from \"./utils\";\r\nimport { columnsWithDays } from \"./dataHoursPanel\";\r\n\r\nconst HeaderInPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const { numberOfDays } = useSelector((state: RootState) => state.hoursPanel);\r\n\r\n  const { data, error } = useColumnsQuery(undefined);\r\n  const [addDays, success] = useAddDaysMutation();\r\n  const [updateColumns] = useUpdateColumnsMutation();\r\n  const [deleteAllColumns, isLoading] = useDeleteAllColumnsMutation();\r\n\r\n  columnsWithDays[0].days = createDaysInColumn(numberOfDays);\r\n  const addedDays = createDaysInColumn(numberOfDays);\r\n\r\n  const columnsIdFRomDatabase = data && Object.keys(data).join();\r\n  const columnsFromDatabase = data ? Object.values(data).flat() : [];\r\n  const columnsToPrint = addDaysToEmptyColumns(columnsFromDatabase);\r\n\r\n  const updatedCoumns = data ? [...columnsToPrint] : [];\r\n\r\n  updatedCoumns[0] = data &&\r\n    columnsFromDatabase?.length > 0 && {\r\n      ...columnsToPrint?.[0],\r\n      days: [...columnsToPrint?.[0]?.days, ...addedDays],\r\n    };\r\n\r\n\r\n// console.log(\"\", columnsToPrint[0]?.days && columnsToPrint[0].days);\r\n// console.log(\"\", columnsToPrint[1]?.days && columnsToPrint[1].days);\r\n// console.log(\"\", columnsToPrint[2]?.days && columnsToPrint[2].days);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    dispatch(handleChange(value));\r\n  };\r\n\r\n  const handleAddDays = async () => {\r\n    data === null\r\n      ? await addDays(columnsWithDays)\r\n      : await updateColumns({\r\n          id: columnsIdFRomDatabase,\r\n          columns: updatedCoumns,\r\n        });\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    await deleteAllColumns(columnsIdFRomDatabase);\r\n  };\r\n\r\n// console.log('',data)\r\n\r\n  return (\r\n    <header>\r\n      <TextInput\r\n        type=\"number\"\r\n        name=\"numberOfDays\"\r\n        value={numberOfDays}\r\n        label=\"Ilość planowanych dni \"\r\n        placeholder=\"Dni\"\r\n        handleChange={handleInputChange}\r\n      />\r\n      <button onClick={handleAddDays}>Dodaj dni</button>\r\n      <button onClick={handleDelete}> usuń wszystko</button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderInPanel;\r\n","import { useEffect, useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport {\r\n  useDeleteAllColumnsMutation,\r\n  useColumnsQuery,\r\n  useUpdateColumnsMutation,\r\n} from \"../../services/apiSlice\";\r\nimport Column from \"./Column\";\r\nimport HeaderInPanel from \"./HeaderInPanel\";\r\nimport { handleDragDrop, addDaysToEmptyColumns } from \"./utils\";\r\n\r\nconst IndexHoursPanel = () => {\r\n  const { data, error } = useColumnsQuery(undefined);\r\n  const [deleteAllColumns, isLoading] = useDeleteAllColumnsMutation();\r\n  const [updateColumns, success] = useUpdateColumnsMutation();\r\n\r\n  const columnsFromDatabase = data && Object.values(data).flat();\r\n  const columnsToPrint = addDaysToEmptyColumns(columnsFromDatabase);\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  const columnsId = data && Object.keys(data).join();\r\n  const columnsToUpdate = { id: columnsId, columns: columns };\r\n\r\n  useEffect(() => {\r\n    setColumns(columnsToPrint);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    updateColumns(columnsToUpdate);\r\n  }, [columns]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderInPanel />\r\n\r\n      <div style={{ display: \"flex\" }}>\r\n        <DragDropContext\r\n          onDragEnd={results => handleDragDrop(results, columns, setColumns)}\r\n        >\r\n          {columns &&\r\n            columns.length > 0 &&\r\n            columns.map((column: any, idx:any) => {\r\n              return <Column column={column} key={column.id}  columnIdx = {idx}/>;\r\n            })}\r\n        </DragDropContext>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexHoursPanel;\r\n"],"names":["props","_jsxs","children","_jsx","label","type","name","value","onChange","handleChange","placeholder","style","width","className","containerClass","checked","inuptClass","id","htmlFor","labelClass","_useState","useState","hours","userName","location","_useState2","_slicedToArray","userData","handleInputChange","_Fragment","onSubmit","e","preventDefault","map","_ref","TextInput","RadioInput","FcApproval","createDaysInColumn","num","days","i","push","crypto","randomUUID","content","toString","date","addDaysToEmptyColumns","arr","obj","hasOwnProperty","_objectSpread","_useUpdateColumnsMuta","useUpdateColumnsMutation","updateColumns","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","_useColumnsQuery","useColumnsQuery","undefined","data","columnsIdFRomDatabase","error","Object","keys","join","columnsFromDatabase","values","flat","columnsToPrint","updatedColumnsx","_toConsumableArray","handleUpdate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","updatedColumnsWithFilteredDay","wrap","_context","prev","next","column","filter","day","columns","stop","_x","apply","arguments","border","Draggable","draggableId","index","provided","draggableProps","dragHandleProps","ref","innerRef","DayForm","onClick","FaTrashAlt","columnName","Droppable","droppableId","snapshot","_props$column","_props$column$days","droppableProps","minHeight","height","length","idx","Day","columnIdx","dayIdx","columnsWithDays","_columnsToPrint$","dispatch","useDispatch","numberOfDays","useSelector","state","hoursPanel","_useAddDaysMutation","useAddDaysMutation","_useAddDaysMutation2","addDays","_useDeleteAllColumnsM","useDeleteAllColumnsMutation","_useDeleteAllColumnsM2","deleteAllColumns","addedDays","updatedCoumns","concat","handleAddDays","handleDelete","_ref2","_callee2","_context2","target","_useUpdateColumnsMuta2","setColumns","columnsToUpdate","useEffect","HeaderInPanel","display","DragDropContext","onDragEnd","results","source","destination","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","Column"],"sourceRoot":""}