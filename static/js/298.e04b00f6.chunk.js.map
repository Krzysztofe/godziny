{"version":3,"file":"static/js/298.e04b00f6.chunk.js","mappings":"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","sources":["components/alert/Alert.tsx","components/collapseContainer/collapseArrow/CollapseArrow.tsx","components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/indexContainer/IndexContainer.tsx","components/inputs/inputError/InputError.tsx","components/inputs/inputsText/InputsText.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","components/ListContainer.tsx","pages/settings/dataStylesSettingsLists.tsx","pages/settings/listMonths/useMonthDate.tsx","pages/settings/listMonths/buttonDeleteMonth/useDeleteMonthAsync.tsx","pages/settings/listMonths/buttonDeleteMonth/ButtonDeleteMonth.tsx","pages/settings/listMonths/monthTitle/MonthTitle.tsx","hooks/updateReduxDatabase/useReduxCalcHours.tsx","components/inputs/inputsRange/InputsRange.tsx","pages/settings/listMonths/formHours/FormHoursError.tsx","pages/settings/listMonths/formHours/FormHoursTop.tsx","pages/settings/listMonths/formHours/useFormikHours.tsx","pages/settings/listMonths/formHours/FormHoursContext.tsx","pages/settings/listMonths/formHours/utilsRequestContainer.tsx","pages/settings/listMonths/formHours/FormHoursContainer.tsx","pages/settings/listMonths/CollapseFormHours.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/buttonDeleteUser/useDeleteUserAsync.tsx","pages/settings/buttonDeleteUser/ButtonDeleteUser.tsx","pages/settings/listUsers/ListUsers.tsx","pages/settings/settingsContent/SettinsContent.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/utilsCapitalizeFirstLetter.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top _d-center _alert\"\r\n          onClick={e => handleClose(e)}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium _anim-dropDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"_w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport \"./_collapseArrow.scss\";\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n};\r\n\r\nconst CollapseArrow = (props: Props) => {\r\n  return (\r\n    <MdOutlineKeyboardArrowDown\r\n      className={`fs-3 _collapseArrow ${\r\n        props.isOpen ? \"_collapseArrow--rotate\" : \"\"\r\n      }`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollapseArrow;\r\n","import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\nimport \"./_autoLogout.scss\"\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top _d-center _autoLogout\"\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium _anim-dropDown\">\r\n            Wylogowanie nastąpi za\r\n            <div className=\"d-flex mx-auto _w-fit-content\">\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"_w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport AutoLogout from \"../autoLogout/AutoLogout\";\r\nimport \"./_indexContainer.scss\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  return (\r\n    <main className=\"d-flex m-0 _backgroundImage _indexContainer \">\r\n      <aside className=\"_indexContainer__aside\"></aside>\r\n      <div className=\"d-flex ps-1 flex-fill _indexContainer__rightSide\">\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport \"./_inputError.scss\"\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst InputError = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-8 _inputError\">\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputError;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputError from \"../inputError/InputError\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport \"./_inputsText.scss\"\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({ value, label, type, isErrorPrint, min, max, placeholder }) => {\r\n          return (\r\n            <Form.Group key={value}>\r\n              {label && (\r\n                <Form.Label\r\n                  htmlFor=\"date\"\r\n                  className=\"mb-0 _fs-responsive fw-medium\"\r\n                >\r\n                  {label}\r\n                </Form.Label>\r\n              )}\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className={`p-0 border border-primary shadow-sm w-100 text-capitalize _inputsText _cursor-pointer ${\r\n                  type === \"color\" ? \"px-0\" : \"px-1\"\r\n                }`}\r\n              />\r\n              {isErrorPrint && (\r\n                <InputError value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger text-centerh\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { useState } from \"react\";\r\nimport Alert from \"../components/alert/Alert\";\r\n\r\nconst useAlertDelete = (action: any, header: string) => {\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = () => {\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const alert = (\r\n    <Alert\r\n      action={action}\r\n      isPrinted={isAlertPrinted}\r\n      setIsPrinted={setIsAlertPrinted}\r\n      header={header}\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleAlert,\r\n    alert,\r\n  };\r\n};\r\n\r\nexport default useAlertDelete;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  let print;\r\n  if (props.listContent?.length === 0 || !props.listContent) {\r\n    print = \"Brak danych\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"h6\">\r\n        {props.header}: {props.listContent?.length}\r\n      </h3>\r\n\r\n      <ListGroup className=\"border-0 p-0\">\r\n        <ListGroup.Item className=\"py-1 px-2 text-warning border-0\">\r\n          {print}\r\n        </ListGroup.Item>\r\n\r\n        {props.children}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","export const dataStylesListGroupItem = \"shadow-sm p-0 mb-2 ps-2 pe-0 rounded-1\";\r\nexport const dataStylesButton =\r\n  \"w-100 d-flex justify-content-between align-items-center px-1 rounded-0 bg-white border-0\";\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useMonthDate = (idx: number) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const monthDate = listMonths && listMonths[idx];\r\n\r\n  return { monthDate };\r\n};\r\n\r\nexport default useMonthDate;\r\n","import useMonthDate from \"../useMonthDate\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setCollapseIndex } from \"../../../../redux/storeFeatures/listMonthsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useDeleteMonthMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { useEffect } from \"react\";\r\nimport { getUpdateMonthError } from \"../../../../redux/storeFeatures/monthPanelSlice\";\r\n\r\nconst useDeleteMonthAsync = (monthIdx: number) => {\r\n  const dispatch = useDispatch();\r\n  const { monthDate } = useMonthDate(monthIdx);\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n\r\n  const deleteMonthAsync = async () => {\r\n    if (monthDate && listMonths?.includes(monthDate)) {\r\n      dispatch(setCollapseIndex(-1));\r\n      const year = monthDate.slice(0, 4);\r\n      const month = monthDate.slice(-2);\r\n      await deleteMonth({ year: year, month: month });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getUpdateMonthError(success.isError));\r\n  }, [success.isError]);\r\n\r\n\r\n  return { deleteMonthAsync, success };\r\n};\r\n\r\nexport default useDeleteMonthAsync;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useHTTPState from \"../../../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport useAlertDelete from \"../../../../hooks/useAlertDelete\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport useDeleteMonthAsync from \"./useDeleteMonthAsync\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst ButtonDeleteMonth = (props: Props) => {\r\n  const { deleteMonthAsync, success } = useDeleteMonthAsync(props.idx);\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const { handleAlert, alert } = useAlertDelete(\r\n    deleteMonthAsync,\r\n    \"Usunąć miesiąc?\"\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={handleAlert}\r\n        className=\"ms-auto bg-transparent border-0 p-1\"\r\n      >\r\n        {listMonths && monthDate === listMonths[props.idx] ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteMonth;\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalizeFirstLetter } from \"../../../../utils/utilsCapitalizeFirstLetter\";\r\nimport useMonthDates from \"../../../../hooks/useMonthDates\";\r\nimport \"./_monthTitle.scss\"\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\nconst MonthTitle = (props: Props) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n\r\n  const title =\r\n    databaseMonthsDatesToString &&\r\n    capitalizeFirstLetter(databaseMonthsDatesToString[props.idx]);\r\n\r\n  return (\r\n    <div className=\"_monthTitle\">\r\n      <Link\r\n        to={`/godziny/${listMonths?.[props.idx]}`}\r\n        className=\"text-decoration-none _fs-responsive text-dark fw-medium\"\r\n      >\r\n        <ImArrowLeft className=\"fs-6 me-1 text-primary\" />\r\n        {title}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCalcHoursQuery } from \"../../services/apiSliceMonths\";\r\nimport {\r\n  getCalcHours,\r\n  getCalcHoursError,\r\n  getCalcHoursIsLoading,\r\n} from \"../../redux/storeFeatures/calcHursSlice\";\r\n\r\nconst useReduxCalcHours = (yearValue: string, monthValue: string) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    data: calcHours,\r\n    isLoading,\r\n    error,\r\n  } = useCalcHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getCalcHours(calcHours));\r\n\r\n    dispatch(getCalcHoursError(error));\r\n\r\n    dispatch(getCalcHoursIsLoading(isLoading));\r\n  }, [calcHours, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxCalcHours;\r\n","// import { useFormikContext } from \"formik\";\r\n// import Form from \"react-bootstrap/Form\";\r\n\r\n// type ModelFormValues = {\r\n//   allHours: number;\r\n// };\r\n\r\n// type Props = {\r\n//   inputsValues: string[];\r\n// };\r\n\r\n// const InputsRange = (props: Props) => {\r\n//   const { values, handleBlur, setFieldValue } =\r\n//     useFormikContext<ModelFormValues>();\r\n\r\n//   const gradientValue = values.allHours / 3.2;\r\n//   const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n//   return (\r\n//     <>\r\n//       {props.inputsValues.map(value => {\r\n//         return (\r\n//           <Form.Group\r\n//             key={value}\r\n//             className=\"mt-2 d-flex align-items-center w-100\"\r\n//           >\r\n//             <Form.Range\r\n//               name={value}\r\n//               min={0}\r\n//               max={320}\r\n//               value={values[value as keyof typeof values]}\r\n//               onChange={e => setFieldValue(value, e.target.value)}\r\n//               onBlur={handleBlur}\r\n//               className=\"form-range custom-range medium\"\r\n//               style={{\r\n//                 height: 10,\r\n//                 backgroundColor: gradientBackground,\r\n//               }}\r\n//             />\r\n//           </Form.Group>\r\n//         );\r\n//       })}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default InputsRange;\r\n\r\nimport { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./_formHeaderMonthPanel.scss\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right,  rgb(135, 136, 143)${gradientValue}%, rgb(222, 226, 230) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range _custom-range medium position-relative\"\r\n              style={{\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\n\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props: Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { calcHours } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n  let content = \"\";\r\n\r\n  if (calcHours) {\r\n    if (\r\n      calcHours?.submittedHours + calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        calcHours?.submittedHours + calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-8\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import { useSelector } from \"react-redux\";\r\nimport InputsText from \"../../../../components/inputs/inputsText/InputsText\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\nconst FormHoursTop = () => {\r\n  const { calcHours } = useSelector((state: RootState) => state.calcHours);\r\n\r\n  const dataInputsText = [\r\n    { value: \"allHours\", type: \"number\", isErrorPrint: false },\r\n  ];\r\n\r\n  console.log(\"\", calcHours);\r\n\r\n  const styles = \"fs-7 d-flex align-items-end\";\r\n  return (\r\n    <div className=\"d-flex justify-content-between fw-medium \">\r\n      <div className={styles}>0 h</div>\r\n      Zapisane: {calcHours?.allHours} h\r\n      <div className=\"col-6 col-sm-5 d-flex\" style={{ width: \"62px\" }}>\r\n        <InputsText inputsData={dataInputsText} /> &nbsp;\r\n        <div>h</div>\r\n      </div>\r\n      <div className={styles}>320 h</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useSelector } from \"react-redux\";\r\nimport { useAddAllHoursMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (\r\n \r\n  yearValue: string,\r\n  monthValue: string\r\n) => {\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n  const {calcHours} = useSelector((state:RootState) => state.calcHours);\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport InputsRange from \"../../../../components/inputs/inputsRange/InputsRange\";\r\nimport useHTTPState from \"../../../../hooks/useHTTPState\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = monthDate?.slice(5) ?? \"\";\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle\r\n      className=\"text-primary\"\r\n      style={{ fontSize: \"1.4rem\" }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop />\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n        <div className=\"_d-between align-items-center mt-2\">\r\n          <FormHoursError />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={success.isLoading}\r\n            className=\"col-2 _d-center m-0 p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n          >\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","export const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div className=\"_d-center fs-6\" style={{ height: \"88px\" }}>\r\n    {contentJSX}\r\n  </div>\r\n);\r\n","import { useSelector } from \"react-redux\";\r\nimport RequestError from \"../../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../../components/requestStates/RequestLoading\";\r\nimport useReduxCalcHours from \"../../../../hooks/updateReduxDatabase/useReduxCalcHours\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport FormHoursContext from \"./FormHoursContext\";\r\nimport { requestContainer } from \"./utilsRequestContainer\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst FormHoursContainer = (props: Props) => {\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = monthDate?.slice(5) ?? \"\";\r\n  useReduxCalcHours(yearValue, monthValue);\r\n  const { calcHoursIsLoading, calcHoursError } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n  let content;\r\n\r\n  if (calcHoursIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (calcHoursError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <FormHoursContext idx={props.idx} />;\r\n  }\r\n\r\n  return <> {content} </>;\r\n};\r\n\r\nexport default FormHoursContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport ButtonDeleteMonth from \"./buttonDeleteMonth/ButtonDeleteMonth\";\r\nimport MonthTitle from \"./monthTitle/MonthTitle\";\r\nimport CollapseArrow from \"../../../components/collapseContainer/collapseArrow/CollapseArrow\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCollapseIndex } from \"../../../redux/storeFeatures/listMonthsSlice\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormHoursContainer from \"./formHours/FormHoursContainer\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst CollapseFormHours = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const { openCollapseIndex } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const isOpen = props.idx === openCollapseIndex;\r\n\r\n  const handleTogle = (idx: number) => {\r\n    dispatch(setCollapseIndex(idx));\r\n    isOpen && dispatch(setCollapseIndex(-1));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle idx={props.idx} />\r\n        <Button\r\n          onClick={() => {\r\n            handleTogle(props.idx);\r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`fw-medium _fs-responsive d-flex justify-content-between align-items-center p-0 ps-1`}\r\n        >\r\n          Zapisz godziny\r\n          <CollapseArrow isOpen={isOpen} />\r\n        </Button>\r\n        <ButtonDeleteMonth idx={props.idx} />\r\n      </div>\r\n      <Collapse in={isOpen}>\r\n        <div className=\"pe-1\">\r\n          {isOpen ? (\r\n            <FormHoursContainer idx={props.idx} />\r\n          ) : (\r\n            <div style={{ height: \"88px\" }}></div>\r\n          )}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseFormHours;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport { dataStylesListGroupItem } from \"../dataStylesSettingsLists\";\r\nimport CollapseFormHours from \"./CollapseFormHours\";\r\n\r\nconst ListMonths = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n\r\n  return (\r\n    <>\r\n      {databaseMonthsDatesToString?.map(\r\n        (monthDateToString: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item\r\n              key={monthDateToString}\r\n              className={dataStylesListGroupItem}\r\n            >\r\n              <CollapseFormHours idx={idx} />\r\n            </ListGroup.Item>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { ModelUser } from \"../../../sharedModels/modelUser\";\r\nimport { useDeleteUserMutation } from \"../../../services/apiSliceUsers\";\r\n\r\nconst useDeleteUserAsync = (userName: string) => {\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (userName) {\r\n      const userBodyPUTRequest = listUsers?.filter(\r\n        (user: ModelUser) => user?.userName !== userName\r\n      );\r\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\r\n    }\r\n  };\r\n\r\n  return { deleteUserAsync, success };\r\n};\r\n\r\nexport default useDeleteUserAsync;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport useAlertDelete from \"../../../hooks/useAlertDelete\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { dataStylesButton } from \"../dataStylesSettingsLists\";\r\nimport { ModelUser } from \"../../../sharedModels/modelUser\";\r\nimport useDeleteUserAsync from \"../buttonDeleteUser/useDeleteUserAsync\";\r\n\r\ntype Props = {\r\n  user: ModelUser;\r\n};\r\n\r\nconst ButtonDeleteUser = (props: Props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const { deleteUserAsync, success } = useDeleteUserAsync(userName);\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { alert, handleAlert } = useAlertDelete(\r\n    deleteUserAsync,\r\n    \"Usunąć użytkownika?\"\r\n  );\r\n\r\n  const getUserName = (userName: string) => {\r\n    setUserName(userName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        onClick={() => {\r\n          getUserName(props.user?.userName);\r\n          handleAlert();\r\n        }}\r\n        disabled={success.isLoading}\r\n        className={dataStylesButton}\r\n        style={{ color: props.user.userColor }}\r\n      >\r\n        {props.user.userName}\r\n\r\n        {userName === props.user.userName ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteUser;\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { dataStylesListGroupItem } from \"../dataStylesSettingsLists\";\r\nimport ButtonDeleteUser from \"../buttonDeleteUser/ButtonDeleteUser\";\r\n\r\nconst ListUsers = () => {\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  return (\r\n    <>\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={`${dataStylesListGroupItem} _overflow-hidden`}\r\n            style={{\r\n              backgroundColor: user.userColor,\r\n            }}\r\n          >\r\n            <ButtonDeleteUser user={user} />\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListContainer from \"../../../components/ListContainer\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\nimport ListUsers from \"../listUsers/ListUsers\";\r\nimport \"./_settingsContent.scss\";\r\n\r\nconst SettinsContent = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  return (\r\n    <div className=\"bg-white p-2 py-4 p-sm-4 w-100 _settinsContent\">\r\n      <div className=\"_settinsContent__wrapper\">\r\n        <ListContainer header={\"Zapisane miesiące\"} listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <div className=\"border my-4\"></div>\r\n\r\n        <ListContainer header={\"Zapisani użytkownicy\"} listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettinsContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/indexContainer/IndexContainer\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport SettinsContent from \"../settingsContent/SettinsContent\";\r\n\r\nconst IndexSettings = () => {\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n  const { updateMonthError } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n\r\n  let content;\r\n\r\n  if (listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (updateMonthError || listMonthsError || listUsersError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <SettinsContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const capitalizeFirstLetter = (inputString: string) => {\r\n  return inputString\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word?.charAt(0)?.toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n","\r\n\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top _d-center fs-4\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["props","dispatch","useDispatch","_jsx","_Fragment","children","isPrinted","id","className","onClick","e","_e$target","includes","target","setIsPrinted","printAlert","handleClose","_jsxs","header","Button","action","MdOutlineKeyboardArrowDown","concat","isOpen","_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","AutoLogout","touched","value","errors","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","_ref","label","type","isErrorPrint","min","placeholder","Form","Group","Label","htmlFor","Control","name","onChange","onBlur","size","InputError","styles","Spinner","animation","variant","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","success","btnText","btnContent","isLoading","listMonths","useSelector","state","databaseMonthsDatesToString","_toConsumableArray","monthDate","monthToDateFormat","Intl","DateTimeFormat","year","month","timeZone","format","_props$listContent","_props$listContent2","print","listContent","length","ListGroup","Item","dataStylesListGroupItem","idx","monthIdx","useMonthDate","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","deleteMonthAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","setCollapseIndex","slice","stop","apply","arguments","getUpdateMonthError","isError","_useDeleteMonthAsync","useDeleteMonthAsync","useHTTPState","RiDeleteBin6Line","_useAlertDelete","useAlertDelete","disabled","useMonthDates","title","capitalizeFirstLetter","Link","to","ImArrowLeft","yearValue","monthValue","_useCalcHoursQuery","useCalcHoursQuery","calcHours","data","error","getCalcHours","getCalcHoursError","getCalcHoursIsLoading","gradientValue","allHours","gradientBackground","inputsValues","Range","style","background","content","submittedHours","acceptedHours","console","log","width","InputsText","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","onSubmit","abrupt","t0","_objectSpread","currentHours","_x","initialValues","_monthDate$slice","_monthDate$slice2","_useFormikHours","useFormikHours","AiOutlinePlusCircle","fontSize","Formik","FormHoursTop","InputsRange","FormHoursError","requestContainer","contentJSX","height","useReduxCalcHours","_useSelector","calcHoursIsLoading","calcHoursError","RequestLoading","RequestError","FormHoursContext","openCollapseIndex","MonthTitle","CollapseArrow","ButtonDeleteMonth","Collapse","in","FormHoursContainer","monthDateToString","CollapseFormHours","userName","listUsers","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","deleteUserAsync","userBodyPUTRequest","filter","user","setUserName","_useDeleteUserAsync","useDeleteUserAsync","_props$user","getUserName","color","userColor","backgroundColor","ButtonDeleteUser","ListContainer","ListMonths","ListUsers","listUsersError","listUsersIsLoading","listMonthsError","updateMonthError","monthPanel","SettinsContent","IndexContainer","inputString","toLowerCase","split","word","_word$charAt","charAt","toUpperCase","join","zIndex"],"sourceRoot":""}