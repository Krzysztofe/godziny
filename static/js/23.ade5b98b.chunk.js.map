{"version":3,"file":"static/js/23.ade5b98b.chunk.js","mappings":"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","sources":["components/BorderInline.tsx","components/alert/buttonsAlert/ButtonAlertAccept.tsx","components/alert/buttonsAlert/ButtonAlertDelete.tsx","components/alert/Alert.tsx","components/icons/IconTrash.tsx","components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/indexContainer/IndexContainer.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useBtnContent.tsx","hooks/useMonthQuery.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","pages/monthPanel/HoursSummary.tsx","pages/monthPanel/buttonDeleteDay/utilsDeleteDay.tsx","pages/monthPanel/buttonDeleteDay/useDeleteDayAsync.tsx","pages/monthPanel/buttonDeleteDay/ButtonDeleteDay.tsx","pages/monthPanel/dayIcon/DayIcon.tsx","pages/monthPanel/dayDetails/DayDetails.tsx","pages/monthPanel/dayDetails/utilsDayDetails.tsx","pages/monthPanel/Day.tsx","pages/monthPanel/column/Column.tsx","pages/monthPanel/columns/hooks/useUpdateColumns.tsx","pages/monthPanel/columns/utils/utilsAddDaysToColumns.tsx","pages/monthPanel/columns/utils/utilsGetHoursFromColumns.tsx","pages/monthPanel/columns/hooks/useUpdateMonth.tsx","pages/monthPanel/columns/utils/utilsHandleDragDrop.tsx","pages/monthPanel/columns/Columns.tsx","pages/monthPanel/columns/utils/utilsPlayDragSound.tsx","pages/monthPanel/counterHeader/CounterHeader.tsx","pages/monthPanel/columnsHeader.tsx/useDataCoumnsHeader.tsx","pages/monthPanel/columnsHeader.tsx/ColumnsHeader.tsx","pages/monthPanel/currentMonth/CurrentMonth.tsx","pages/monthPanel/monthPanelContent/MonthPanelContent.tsx","pages/monthPanel/monthPanelEmpty/MonthPanelEmpty.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","utils/utilsCapitalizeFirstLetter.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["const BorderInline = () => {\r\n  return <div className=\"border d-md-none\"></div>;\r\n};\r\n\r\nexport default BorderInline;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertAccept = (props: Props) => {\r\n  return (\r\n    <Button\r\n      id=\"noButton\"\r\n      className=\"_radius bg-primary border-0 px-5 ms-4\"\r\n      onClick={props.action}\r\n    >\r\n      Ok\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertAccept;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertDelete = (props: Props) => {\r\n  return (\r\n    <>\r\n      <Button id=\"noButton\" className=\"_radius bg-dark border-0 px-4 px-sm-5\">\r\n        Nie\r\n      </Button>\r\n      <Button\r\n        onClick={props.action}\r\n        className=\"_radius bg-primary border-0 px-4 px-sm-5 ms-4\"\r\n      >\r\n        Tak\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertDelete;\r\n","import { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./_alert.scss\";\r\nimport ButtonAlertAccept from \"./buttonsAlert/ButtonAlertAccept\";\r\nimport ButtonAlertDelete from \"./buttonsAlert/ButtonAlertDelete\";\r\nimport { memo, useEffect } from \"react\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = memo((props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  if (!props.isPrinted) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"opacityContainer\"\r\n        className=\"fixed-top _d-center _alert\"\r\n        onClick={handleClose}\r\n      >\r\n        <div\r\n          className={`p-5 bg-white _radius text-center fs-2 fw-medium _anim-dropDown`}\r\n        >\r\n          {props.header}\r\n          <div className=\"_w-fitContent m-auto mt-4\">\r\n            {props.header.includes(\"Usunąć\") ? (\r\n              <ButtonAlertDelete action={props.action} />\r\n            ) : (\r\n              <ButtonAlertAccept action={props.action} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Alert;\r\n","import { RiDeleteBin6Line } from \"react-icons/ri\";\r\n\r\nconst IconTrash = () => {\r\n  return <RiDeleteBin6Line className=\"text-light-emphasis  fs-2 ms-auto\" />;\r\n};\r\n\r\nexport default IconTrash;\r\n","import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\nimport \"./_autoLogout.scss\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n\r\n  if (secondsRemaining + 1 > 60) return null;\r\n\r\n  return (\r\n    <div className=\"fixed-top _d-center p-5 _autoLogout\">\r\n      <div className=\"p-4 bg-white text-center rounded-1 _fs-primary fw-semiBold _anim-dropDown\">\r\n        Wylogowanie nastąpi za\r\n        <div className=\"d-flex mx-auto _w-fitContent\">\r\n          {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport AutoLogout from \"../autoLogout/AutoLogout\";\r\nimport \"./_indexContainer.scss\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  return (\r\n    <main className=\"d-flex m-0  bg-secondary _indexContainer \">\r\n      <aside className=\"_indexContainer__aside\"></aside>\r\n\r\n      <div className=\"_indexContainer__rightSide bg-secondary\">\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger fs-1 text-center\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"primary\" className=\"fs-5\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { useState } from \"react\";\r\nimport Alert from \"../components/alert/Alert\";\r\n\r\n\r\nconst useAlertDelete = (action: any, header: string) => {\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = () => {\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const alert = (\r\n    <Alert\r\n      action={action}\r\n      isPrinted={isAlertPrinted}\r\n      setIsPrinted={setIsAlertPrinted}\r\n      header={header}\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleAlert,\r\n    alert,\r\n  };\r\n};\r\n\r\nexport default useAlertDelete;\r\n","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst useBtnContent = (isLoading: boolean, btn: JSX.Element) => {\r\n  let btnContent: JSX.Element = btn;\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"primary\"\r\n        className=\"text-dark\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useBtnContent;\r\n","import { useMonthDataQuery } from \"../services/apiSliceMonths\";\r\nimport useURLValues from \"./useURLValues\";\r\n\r\nconst useMonthQuery = () => {\r\n  const { yearFromURL: year, monthFromURL: month } = useURLValues();\r\n\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year,\r\n    month,\r\n  });\r\n\r\n  return { data, error, isLoading };\r\n};\r\n\r\nexport default useMonthQuery;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(1);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return { monthURLStringFormat };\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return { monthURLStringFormat };\r\n  }\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import useMonthQuery from \"../../hooks/useMonthQuery\";\r\n\r\nconst HoursSummary = () => {\r\n  const { data: month } = useMonthQuery();\r\n\r\n  return (\r\n    <div className=\"position-sticky top-0 z-3 fs-2 pt-4 py-md-4 bg-secondary\">\r\n      <div className=\"d-flex mx-auto fw-medium _w-fitContent\">\r\n        <div>Wszystkie {month?.calcHours?.allHours}&nbsp;-&nbsp;</div>\r\n\r\n        <div\r\n          className={`${\r\n            month && month?.calcHours?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n          }`}\r\n        >\r\n          <strong>{month && month?.calcHours?.currentHours}&nbsp;</strong>\r\n          {month && month?.calcHours?.currentHours <= 0 ? \"Brak\" : \"Dostępne\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursSummary;\r\n","import { ModelMonth } from \"../../../sharedModels/modelMonth\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const deleteDayById = (obj: ModelMonth, idToDelete: string) => {\r\n  const updatedColumns = obj.columns.map((column: ModelColumn) => {\r\n    const updatedDays = column?.days?.filter(day => {\r\n      if (day && day.id) return day.id !== idToDelete;\r\n      return false;\r\n    });\r\n    return { ...column, days: updatedDays };\r\n  });\r\n  return { ...obj, columns: updatedColumns };\r\n};\r\n\r\nexport const calculateUpdatedCalcHours = (\r\n  month: ModelMonth | null,\r\n  columnIdx: number,\r\n  subtractedHours: number | undefined\r\n) => {\r\n  if (!month || !month.calcHours) {\r\n    return {\r\n      currentHours: 0,\r\n      submittedHours: 0,\r\n      acceptedHours: 0,\r\n      rejectedHours: 0,\r\n      allHours: 0,\r\n    };\r\n  }\r\n\r\n  const { calcHours } = month;\r\n\r\n  return {\r\n    ...calcHours,\r\n    currentHours:\r\n      columnIdx !== 2 && subtractedHours\r\n        ? calcHours.currentHours + subtractedHours\r\n        : calcHours.currentHours,\r\n    submittedHours:\r\n      columnIdx === 0 && subtractedHours\r\n        ? calcHours.submittedHours - subtractedHours\r\n        : calcHours.submittedHours,\r\n    acceptedHours:\r\n      columnIdx === 1 && subtractedHours\r\n        ? calcHours.acceptedHours - subtractedHours\r\n        : calcHours.acceptedHours,\r\n    rejectedHours:\r\n      columnIdx === 2 && subtractedHours\r\n        ? calcHours.rejectedHours - subtractedHours\r\n        : calcHours.rejectedHours,\r\n  };\r\n};\r\n","import useMonthQuery from \"../../../hooks/useMonthQuery\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { useDeleteDayMutation } from \"../../../services/apiSliceMonths\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport { calculateUpdatedCalcHours, deleteDayById } from \"./utilsDeleteDay\";\r\n\r\nconst useDeleteDayAsync = (day: ModelDay, columnIndex: number) => {\r\n  const { data: month } = useMonthQuery();\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n\r\n  const deleteDayAsync = async () => {\r\n    const subtractedHours = day?.hours;\r\n\r\n    month &&\r\n      (await deleteDay({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        colIdx: columnIndex,\r\n        monthBody: {\r\n          ...month,\r\n          calcHours: calculateUpdatedCalcHours(\r\n            month,\r\n            +columnIndex,\r\n            subtractedHours\r\n          ),\r\n          columns: deleteDayById({ ...month }, day?.id).columns,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { deleteDayAsync, success };\r\n};\r\n\r\nexport default useDeleteDayAsync;\r\n","import { useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport IconTrash from \"../../../components/icons/IconTrash\";\r\nimport useAlertDelete from \"../../../hooks/useAlertDelete\";\r\nimport useBtnContent from \"../../../hooks/useBtnContent\";\r\nimport { DayItemContext } from \"../column/Column\";\r\nimport \"./_buttonDeleteDay.scss\";\r\nimport useDeleteDayAsync from \"./useDeleteDayAsync\";\r\n\r\nconst ButtonDeleteDay = () => {\r\n  const { day, columnIdx } = useContext(DayItemContext);\r\n  const { deleteDayAsync, success } = useDeleteDayAsync(day, columnIdx);\r\n\r\n  const { handleAlert, alert } = useAlertDelete(\r\n    deleteDayAsync,\r\n    \"Usunąć dzień?\"\r\n  );\r\n  const { btnContent } = useBtnContent(success.isLoading, <IconTrash />);\r\n\r\n  if (!day) return null;\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        onClick={handleAlert}\r\n        className=\"d-flex justify-content-between fs-4 _fw-semiBold align-items-center w-100 p-0 bg-transparent border-0 text-dark _buttonDeleteDay  text-light-emphasis\"\r\n        disabled={success.isLoading}\r\n      >\r\n        <div>{day?.hours} h</div>\r\n        <div>{btnContent}</div>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteDay;\r\n","import { useContext } from \"react\";\r\nimport { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport { DayItemContext } from \"../column/Column\";\r\n\r\nconst DayIcon = () => {\r\n  const { day } = useContext(DayItemContext);\r\n\r\n  if (day.place === \"Poza\")\r\n    return <TbArrowBigRightLineFilled className=\"text-light-emphasis\" />;\r\n\r\n  return <MdFactory className=\"text-light-emphasis\" />;\r\n};\r\n\r\nexport default DayIcon;\r\n","import { useContext } from \"react\";\r\nimport { DayItemContext } from \"../column/Column\";\r\nimport DayIcon from \"../dayIcon/DayIcon\";\r\nimport { dateShort } from \"./utilsDayDetails\";\r\n\r\nconst DayDetails = () => {\r\n  const { day } = useContext(DayItemContext);\r\n  \r\n  if (!day) return <div>Brak danych</div>;\r\n\r\n  const printDate = day && dateShort(day.date);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between text-light-emphasis fs-4 \">\r\n        <div>{day.userName}</div>\r\n        <DayIcon />\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between text-light-emphasis fs-4 _fw-semiBold\">\r\n        <div>{printDate ? printDate : \"\"}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayDetails;\r\n","export const dateShort = (propsDate: string) => {\r\n  const date = new Date(propsDate);\r\n  return new Intl.DateTimeFormat(\"pl-PL\", {\r\n    day: \"numeric\",\r\n    month: \"short\",\r\n  }).format(date);\r\n\r\n};\r\n\r\n\r\n","import { useContext } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport ButtonDeleteDay from \"./buttonDeleteDay/ButtonDeleteDay\";\r\nimport { DayItemContext } from \"./column/Column\";\r\nimport DayDetails from \"./dayDetails/DayDetails\";\r\n\r\nconst Day = () => {\r\n  const { searchedName } = useSelector((state: RootState) => state.searchName);\r\n  const { day, dayIdx } = useContext(DayItemContext);\r\n\r\n  let printDay: string;\r\n\r\n  if (!searchedName || searchedName === \"Szukaj\") {\r\n    printDay = \"d-block\";\r\n  } else if (searchedName !== day.userName) {\r\n    printDay = \"d-none\";\r\n  }\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={day && day?.id}\r\n      index={dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white _radius border _overflow-hidden ${\r\n              snapshot.isDragging ? \"border-dark\" : \"border-dark-subtle\"\r\n            } ${printDay}`}\r\n          >\r\n            <div\r\n              className=\"ps-2 pe-1 py-2 py-sm-1\"\r\n              style={{\r\n                borderTop: `8px solid ${day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.6 : 1,\r\n              }}\r\n            >\r\n              <DayDetails />\r\n              <ButtonDeleteDay />\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport Day from \"../Day\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_column.scss\";\r\nimport { createContext } from \"react\";\r\n\r\ntype ContextType = {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n};\r\n\r\nexport const DayItemContext = createContext<ContextType>({} as ContextType);\r\n\r\ntype Props = {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n};\r\n\r\nconst Column = (props: Props) => {\r\n  const { searchedName } = useSelector((state: RootState) => state.searchName);\r\n\r\n  const isDraging = (stapshot: boolean) => {\r\n    return stapshot ? \"_isDragging\" : \"_noDragging\";\r\n  };\r\n  const isSearching =\r\n    searchedName && searchedName !== \"Szukaj\"\r\n      ? \"_isSearching _bg-opacity-dark\"\r\n      : \"\";\r\n\r\n  return (\r\n    <div className=\"_column position-relative\">\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={`p-1 pt-3 px-lg-3 h-100 overflow-hidden border border-1 border border-top-0   ${isDraging(\r\n                snapshot.isDraggingOver\r\n              )} ${isSearching}`}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <DayItemContext.Provider\r\n                        key={UUID()}\r\n                        value={{ day, columnIdx: props.columnIdx, dayIdx: idx }}\r\n                      >\r\n                        <Day />\r\n                      </DayItemContext.Provider>\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import { useEffect } from \"react\";\r\nimport useMonthQuery from \"../../../../hooks/useMonthQuery\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { addDaysToColumns } from \"../utils/utilsAddDaysToColumns\";\r\n\r\nconst useUpdateColumns = (\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { data: month } = useMonthQuery();\r\n  const columnsWithDays = month && addDaysToColumns(month?.columns);\r\n\r\n  useEffect(() => {\r\n    if (columnsWithDays) {\r\n      setColumns(columnsWithDays);\r\n    }\r\n  }, [month?.columns]);\r\n};\r\n\r\nexport default useUpdateColumns;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n","import { ModelDay } from \"../../../../sharedModels/modelDay\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nconst getHoursFromColumn = (days: ModelDay[]) => {\r\n  return days?.reduce((acu, day) => {\r\n    const dayHours = day?.hours || 0;\r\n    return acu + dayHours;\r\n  }, 0);\r\n};\r\n\r\nexport const getHoursFromColumns = (columns: ModelColumn[]) => {\r\n  const submittedHours = getHoursFromColumn(columns[0]?.days);\r\n  const acceptedHours = getHoursFromColumn(columns[1]?.days);\r\n  const rejectedHours = getHoursFromColumn(columns[2]?.days);\r\n\r\n  return { submittedHours, acceptedHours, rejectedHours };\r\n};\r\n","import { useEffect } from \"react\";\r\nimport useMonthQuery from \"../../../../hooks/useMonthQuery\";\r\nimport useURLValues from \"../../../../hooks/useURLValues\";\r\nimport { useUpdateMonthMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { getHoursFromColumns } from \"../utils/utilsGetHoursFromColumns\";\r\n\r\nconst useUpdateMonth = (\r\n  columns: ModelColumn[],\r\n  executeUpdateMonth: boolean\r\n) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { data: month } = useMonthQuery();\r\n\r\n\r\n  const { submittedHours, acceptedHours, rejectedHours } =\r\n    getHoursFromColumns(columns);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0 && month) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calcHours: {\r\n            ...month?.calcHours,\r\n            currentHours:\r\n              month?.calcHours?.allHours -\r\n              submittedHours -\r\n              acceptedHours -\r\n              rejectedHours +\r\n              rejectedHours,\r\n            submittedHours,\r\n            acceptedHours,\r\n            rejectedHours,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [executeUpdateMonth]);\r\n};\r\n\r\nexport default useUpdateMonth;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../../../sharedModels/modelDay\";\r\nimport { DropResult } from \"react-beautiful-dnd\";\r\n\r\nconst findSourceColumnIdx = (\r\n  columns: ModelColumn[],\r\n  source: { droppableId: string }\r\n) => {\r\n  return columns.findIndex(\r\n    (column: ModelColumn) => column.id === source.droppableId\r\n  );\r\n};\r\n\r\nconst findDestinationColumnIdx = (\r\n  columns: ModelColumn[],\r\n  destination: { droppableId: string }\r\n) => {\r\n  return columns.findIndex(\r\n    (column: ModelColumn) => column.id === destination.droppableId\r\n  );\r\n};\r\n\r\nconst findDeletedDay = (\r\n  newSourceDays: ModelDay[],\r\n  source: { index: number }\r\n) => {\r\n  const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n  return deletedDay;\r\n};\r\n\r\nconst updateColumnDays = (\r\n  columns: ModelColumn[],\r\n  columnIndex: number,\r\n  newDays: ModelDay[]\r\n): ModelColumn[] => {\r\n  const newColumns = [...columns];\r\n  newColumns[columnIndex] = { ...columns[columnIndex], days: newDays };\r\n  return newColumns;\r\n};\r\n\r\nconst moveItemFromColumn = (\r\n  columns: ModelColumn[],\r\n  source: { droppableId: string; index: number },\r\n  destination: { droppableId: string; index: number },\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n  const destinationColumnIdx = findDestinationColumnIdx(columns, destination);\r\n  const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n  const newDestinationDays =\r\n    source.droppableId !== destination.droppableId\r\n      ? [...columns[destinationColumnIdx].days]\r\n      : newSourceDays;\r\n\r\n  const deletedDay = findDeletedDay(newSourceDays, source);\r\n  newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n  const newColumns = updateColumnDays(columns, sourceColumnIdx, newSourceDays);\r\n  setColumns(\r\n    updateColumnDays(newColumns, destinationColumnIdx, newDestinationDays)\r\n  );\r\n};\r\n\r\nconst moveItemInColumn = (\r\n  columns: ModelColumn[],\r\n  source: { droppableId: string; index: number },\r\n  destination: { droppableId: string; index: number },\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const destintionIdx = destination.index;\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n\r\n  const days = [...columns[sourceColumnIdx].days];\r\n  const deletedDay = findDeletedDay(days, source);\r\n\r\n  days.splice(destintionIdx, 0, deletedDay);\r\n\r\n  const newColumns = updateColumnDays(columns, sourceColumnIdx, days);\r\n  setColumns(newColumns);\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: DropResult,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source &&\r\n    destination &&\r\n    source.droppableId === destination.droppableId &&\r\n    source.index === destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId === \"rejected\") return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    moveItemFromColumn(columns, source, destination, setColumns);\r\n  } else {\r\n    moveItemInColumn(columns, source, destination, setColumns);\r\n  }\r\n};\r\n","import { useRef, useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport useMonthQuery from \"../../../hooks/useMonthQuery\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport Column from \"../column/Column\";\r\nimport \"./_columns.scss\";\r\nimport useUpdateColumns from \"./hooks/useUpdateColumns\";\r\nimport useUpdateMonth from \"./hooks/useUpdateMonth\";\r\nimport { handleDragDrop } from \"./utils/utilsHandleDragDrop\";\r\nimport { playDragSound } from \"./utils/utilsPlayDragSound\";\r\nconst click = require(\"../../../asets/dragSound.wav\");\r\n\r\nconst Columns = () => {\r\n  const { data: month } = useMonthQuery();\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n  const [executeUpdateMonth, setExecuteUpdateMonth] = useState(false);\r\n  const audioElem = useRef<HTMLAudioElement>(null);\r\n  useUpdateColumns(setColumns);\r\n  useUpdateMonth(columns, executeUpdateMonth);\r\n\r\n  const handleDragEnd = (e: DropResult) => {\r\n    month && handleDragDrop(e, columns, setColumns);\r\n    setExecuteUpdateMonth(prev => !prev);\r\n    playDragSound(e, audioElem);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <audio src={click} ref={audioElem}></audio>\r\n\r\n      <div className=\"_d-between _dragDropContex\">\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {columns?.map((column: ModelColumn, idx: number) => {\r\n            return <Column key={column.id} columnIdx={idx} column={column} />;\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Columns;\r\n","import { DropResult } from \"react-beautiful-dnd\";\r\n\r\nexport const playDragSound = (\r\n  e: DropResult,\r\n  audioElem: React.RefObject<HTMLAudioElement>\r\n) => {\r\n  if (\r\n    e.source.droppableId !== \"rejected\" &&\r\n    e.source.droppableId !== e.destination?.droppableId\r\n  ) {\r\n    const audio = audioElem.current;\r\n    if (audio) {\r\n      audio.volume = window.innerWidth <= 650 ? 0.8 : 0.05;\r\n      audio.play();\r\n    }\r\n  }\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport useMonthQuery from \"../../../hooks/useMonthQuery\";\r\nimport \"./_counterHeader.scss\";\r\n\r\ntype Props = {\r\n  counter: number | undefined;\r\n  text: string;\r\n};\r\n\r\nconst CounterHeader = (props: Props) => {\r\n  const { data: month } = useMonthQuery();\r\n  const [counter, setCounter] = useState<number[]>(\r\n    props.counter ? [props.counter] : [0]\r\n  );\r\n  const didMountRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    setCounter(props.counter ? [props.counter] : [0]);\r\n    didMountRef.current = false;\r\n  }, [month?.id]);\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current && props.counter !== undefined) {\r\n      setCounter(prev => [...prev, props?.counter as number]);\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [props.counter, month?.id]);\r\n\r\n  return (\r\n    <div className=\"_counterHeader\">\r\n      <div\r\n        style={{\r\n          transform: `translateY(-${(counter.length - 1) * 20}px)`,\r\n          transition: \"transform 0.3s\",\r\n        }}\r\n      >\r\n        {counter.map((item, idx) => {\r\n          return (\r\n            <div key={idx} className=\"_counterHeader__dygit\">\r\n              {item} \r\n            \r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CounterHeader;\r\n","import useMonthQuery from \"../../../hooks/useMonthQuery\";\r\n\r\nconst useDataCoumnsHeader = () => {\r\n  const { data: month } = useMonthQuery();\r\n\r\n  const { calcHours } = month || {};\r\n\r\n  const dataColumnsHeader = [\r\n    {\r\n      headerText: \"Złożone:\",\r\n      counter: calcHours?.submittedHours,\r\n    },\r\n    {\r\n      headerText: \"Przyznane:\",\r\n      counter: calcHours?.acceptedHours,\r\n    },\r\n    {\r\n      headerText: \"Odrzucone:\",\r\n      counter: calcHours?.rejectedHours,\r\n    },\r\n  ];\r\n\r\n  return { dataColumnsHeader };\r\n};\r\n\r\nexport default useDataCoumnsHeader;\r\n","import CounterHeader from \"../counterHeader/CounterHeader\";\r\nimport useDataCoumnsHeader from \"./useDataCoumnsHeader\";\r\nimport \"./_columnsHeader.scss\";\r\n\r\nconst ColumnsHeader = () => {\r\n  const { dataColumnsHeader } = useDataCoumnsHeader();\r\n\r\n  return (\r\n    <div className=\"_d-between _columnsHeader\">\r\n      {dataColumnsHeader.map(({ headerText, counter }) => {\r\n        return (\r\n          <div\r\n            key={headerText}\r\n            className={`text-primary _d-center _fw-semiBold p-1 _columnsHeader__item bg-secondary-light  border border-bottom-0            \r\n            `}\r\n          >\r\n            {headerText}\r\n            <CounterHeader counter={counter} text={headerText} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnsHeader;\r\n","import { memo } from \"react\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport { capitalizeFirstLetter } from \"../../../utils/utilsCapitalizeFirstLetter\";\r\nimport \"./_currentMonth.scss\";\r\n\r\nconst CurrentMonth = memo(() => {\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n  return (\r\n    <div className=\"text-center fs-4 d-md-none pt-1 pb-4 z-3 bg-secondary _currentMonth\">\r\n      {capitalizeFirstLetter(monthURLStringFormat)}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CurrentMonth;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport BorderInline from \"../../../components/BorderInline\";\r\nimport HoursSummary from \"../HoursSummary\";\r\nimport Columns from \"../columns/Columns\";\r\nimport ColumnsHeader from \"../columnsHeader.tsx/ColumnsHeader\";\r\nimport \"./_monthPanelContent.scss\";\r\nimport CurrentMonth from \"../currentMonth/CurrentMonth\";\r\n\r\nconst MonthPanelContent = () => {\r\n  const { pathname } = useLocation();\r\n  const [isAnimate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAnimate(false);\r\n\r\n    const timeoutId = setTimeout(() => {\r\n      setAnimate(true);\r\n    });\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      {isAnimate && (\r\n        <div className=\"px-2 px-sm-5 px-md-3 pb-3 _anim-opacity\">\r\n          <BorderInline />\r\n          <HoursSummary />\r\n          <CurrentMonth />\r\n          <ColumnsHeader />\r\n          <Columns />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelContent;\r\n","import useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport \"./_monthPanelEmpty.scss\";\r\n\r\nconst MonthPanelEmpty = () => {\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  return (\r\n    <div className=\"_d-center fs-2 text-danger text-center _monthPanelEmpty\">\r\n      Brak danych z miesiąca {monthURLStringFormat}. Zapisz miesiąc w\r\n      ustawieniach.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelEmpty;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/indexContainer/IndexContainer\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport useMonthQuery from \"../../../hooks/useMonthQuery\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useUsersQuery } from \"../../../services/apiSliceUsers\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\nimport MonthPanelContent from \"../monthPanelContent/MonthPanelContent\";\r\nimport MonthPanelEmpty from \"../monthPanelEmpty/MonthPanelEmpty\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  const {\r\n    data: month,\r\n    error: monthErrorGet,\r\n    isLoading: monthIsLoading,\r\n  } = useMonthQuery();\r\n\r\n  const { error: listUsersError, isLoading: listUsersIsLoading } =\r\n    useUsersQuery();\r\n\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let content;\r\n\r\n  if (monthIsLoading || listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (monthErrorGet || listUsersError || listMonthsError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else if (!month || month?.id === \"\") {\r\n    content = <MonthPanelEmpty />;\r\n  } else {\r\n    content = <MonthPanelContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n\r\n","export const capitalizeFirstLetter = (inputString: string) => {\r\n  return inputString\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word?.charAt(0)?.toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n","\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top _d-center fs-4 _requestContainer\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_jsx","className","props","Button","id","onClick","action","children","_jsxs","_Fragment","memo","dispatch","useDispatch","isPrinted","e","_e$target","includes","target","setIsPrinted","printAlert","header","ButtonAlertDelete","ButtonAlertAccept","RiDeleteBin6Line","_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","AutoLogout","styles","Spinner","animation","variant","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","isLoading","btn","btnContent","size","_useURLValues","useURLValues","year","yearFromURL","month","monthFromURL","_useMonthDataQuery","useMonthDataQuery","data","error","monthURL","useLocation","pathname","slice","test","_Intl$DateTimeFormat","monthURLToDateFormat","monthURLStringFormat","Intl","DateTimeFormat","timeZone","format","split","isMonthInURL","_month$calcHours","_month$calcHours2","_month$calcHours3","_month$calcHours4","useMonthQuery","calcHours","allHours","concat","currentHours","deleteDayById","obj","idToDelete","updatedColumns","columns","column","_column$days","updatedDays","days","filter","day","_objectSpread","calculateUpdatedCalcHours","columnIdx","subtractedHours","submittedHours","acceptedHours","rejectedHours","columnIndex","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","deleteDay","success","deleteDayAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","hours","t0","colIdx","monthBody","stop","apply","arguments","_useContext","useContext","DayItemContext","_useDeleteDayAsync","useDeleteDayAsync","_useAlertDelete","useAlertDelete","useBtnContent","IconTrash","disabled","place","TbArrowBigRightLineFilled","MdFactory","printDate","propsDate","date","dateShort","userName","DayIcon","printDay","searchedName","useSelector","state","searchName","dayIdx","Draggable","draggableId","index","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","style","borderTop","userColor","opacity","DayDetails","ButtonDeleteDay","createContext","isSearching","Droppable","droppableId","droppableProps","stapshot","isDraggingOver","Array","isArray","idx","Provider","value","Day","UUID","placeholder","setColumns","columnsWithDays","hasOwnProperty","getHoursFromColumn","reduce","acu","executeUpdateMonth","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","_getHoursFromColumns","_columns$","_columns$2","_columns$3","getHoursFromColumns","length","findSourceColumnIdx","source","findIndex","findDeletedDay","newSourceDays","_newSourceDays$splice","splice","updateColumnDays","newDays","newColumns","_toConsumableArray","handleDragDrop","results","destination","sourceColumnIdx","destinationColumnIdx","findDestinationColumnIdx","newDestinationDays","deletedDay","moveItemFromColumn","destintionIdx","moveItemInColumn","click","require","_useState3","_useState4","setExecuteUpdateMonth","audioElem","useRef","useUpdateColumns","useUpdateMonth","src","DragDropContext","onDragEnd","_e$destination","audio","current","volume","window","innerWidth","play","playDragSound","Column","counter","setCounter","didMountRef","undefined","transform","transition","item","dataColumnsHeader","headerText","useDataCoumnsHeader","CounterHeader","text","useMonthURLToString","capitalizeFirstLetter","isAnimate","setAnimate","timeoutId","setTimeout","clearTimeout","BorderInline","HoursSummary","CurrentMonth","ColumnsHeader","Columns","content","_useMonthQuery","monthErrorGet","monthIsLoading","_useUsersQuery","useUsersQuery","listUsersError","listUsersIsLoading","listMonthsError","listMonths","RequestLoading","requestContainer","RequestError","MonthPanelContent","MonthPanelEmpty","IndexContainer","inputString","toLowerCase","word","_word$charAt","charAt","toUpperCase","join","contentJSX","width","height","zIndex","backgroundColor"],"sourceRoot":""}