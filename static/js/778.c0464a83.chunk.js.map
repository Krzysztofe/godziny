{"version":3,"file":"static/js/778.c0464a83.chunk.js","mappings":"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","sources":["components/alert/Alert.tsx","components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/indexContainer/IndexContainer.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useHTTPState.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/updateReduxDatabase/useReduxMonthData.tsx","pages/monthPanel/monthPanelEmpty/MonthPanelEmpty.tsx","pages/monthPanel/HoursSummary.tsx","pages/monthPanel/buttonDeleteDay/utilsDeleteDay.tsx","pages/monthPanel/buttonDeleteDay/useDeleteDayAsync.tsx","pages/monthPanel/buttonDeleteDay/ButtonDeleteDay.tsx","pages/monthPanel/dayIcon/DayIcon.tsx","pages/monthPanel/dayDetails/DayDetails.tsx","pages/monthPanel/dayDetails/utilsDayDetails.tsx","pages/monthPanel/Day.tsx","pages/monthPanel/column/Column.tsx","pages/monthPanel/counter/Counter.tsx","pages/monthPanel/columnsHeader.tsx/useDataCoumnsHeader.tsx","pages/monthPanel/columnsHeader.tsx/ColumnsHeader.tsx","pages/monthPanel/columns/hooks/useScrollThumbPosition.tsx","pages/monthPanel/columns/hooks/useUpdateColumns.tsx","pages/monthPanel/columns/utils/utilsAddDaysToColumns.tsx","pages/monthPanel/columns/utils/utilsGetHoursFromColumns.tsx","pages/monthPanel/columns/hooks/useUpdateMonth.tsx","pages/monthPanel/columns/utils/utilsHandleDragDrop.tsx","pages/monthPanel/columns/Columns.tsx","pages/monthPanel/monthPanelContent/MonthPanelContent.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top _d-center _alert\"\r\n          onClick={e => handleClose(e)}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium _anim-dropDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"_w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\nimport \"./_autoLogout.scss\"\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top _d-center _autoLogout\"\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium _anim-dropDown\">\r\n            Wylogowanie nastąpi za\r\n            <div className=\"d-flex mx-auto _w-fit-content\">\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"_w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport AutoLogout from \"../autoLogout/AutoLogout\";\r\nimport \"./_indexContainer.scss\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  return (\r\n    <main className=\"d-flex m-0 _backgroundImage _indexContainer \">\r\n      <aside className=\"_indexContainer__aside\"></aside>\r\n      <div className=\"d-flex ps-1 flex-fill _indexContainer__rightSide\">\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger text-centerh\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { useState } from \"react\";\r\nimport Alert from \"../components/alert/Alert\";\r\n\r\nconst useAlertDelete = (action: any, header: string) => {\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = () => {\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const alert = (\r\n    <Alert\r\n      action={action}\r\n      isPrinted={isAlertPrinted}\r\n      setIsPrinted={setIsAlertPrinted}\r\n      header={header}\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleAlert,\r\n    alert,\r\n  };\r\n};\r\n\r\nexport default useAlertDelete;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(9);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return { monthURLStringFormat };\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return { monthURLStringFormat };\r\n  }\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useMonthDataQuery } from \"../../services/apiSliceMonths\";\r\nimport useURLValues from \"../useURLValues\";\r\n\r\n\r\nconst useReduxMonthData = () => {\r\n  const dispatch = useDispatch();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  const year = isMonthInURL ? yearFromURL : \"\";\r\n  const month = isMonthInURL ? monthFromURL : \"\";\r\n\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year,\r\n    month,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getMonth(data));\r\n    dispatch(getMonthError(error));\r\n    dispatch(getMonthIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxMonthData;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport \"./_monthPanelEmpty.scss\";\r\n\r\nconst MonthPanelEmpty = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  if (!month || month?.id === \"\") {\r\n    return (\r\n      <div className=\"_d-center fs-3 text-warning text-center _monthPanelEmpty\">\r\n        Brak danych z miesiąca {monthURLStringFormat}. Zapisz miesiąc w\r\n        ustawieniach.\r\n      </div>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nexport default MonthPanelEmpty;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\nconst HoursSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  return (\r\n    <div className=\"d-flex mx-auto fw-medium pb-2 _w-fit-content\">\r\n    \r\n      <div>Wszystkie {month?.calcHours?.allHours}&nbsp;-&nbsp;</div>\r\n\r\n      <div\r\n        className={`${\r\n          month && month?.calcHours?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n        }`}\r\n      >\r\n        {month && month?.calcHours?.currentHours} {\"\"}\r\n        {month && month?.calcHours?.currentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursSummary;\r\n","import { ModelMonth } from \"../../../sharedModels/modelMonth\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const deleteDayById = (obj: ModelMonth, idToDelete: string) => {\r\n  const updatedColumns = obj.columns.map((column: ModelColumn) => {\r\n    const updatedDays = column?.days?.filter(day => day.id !== idToDelete);\r\n    return { ...column, days: updatedDays };\r\n  });\r\n  return { ...obj, columns: updatedColumns };\r\n};\r\n\r\nexport const calculateUpdatedCalcHours = (\r\n  month: ModelMonth | null,\r\n  columnIdx: number,\r\n  subtractedHours: number | undefined\r\n) => {\r\n  if (!month || !month.calcHours) {\r\n     return {\r\n       currentHours: 0,\r\n       submittedHours: 0,\r\n       acceptedHours: 0,\r\n       rejectedHours: 0,\r\n       allHours: 0,\r\n     };\r\n  }\r\n\r\n  const { calcHours } = month;\r\n\r\n  return {\r\n    ...calcHours,\r\n    currentHours:\r\n      columnIdx !== 2 && subtractedHours\r\n        ? calcHours.currentHours + subtractedHours\r\n        : calcHours.currentHours,\r\n    submittedHours:\r\n      columnIdx === 0 && subtractedHours\r\n        ? calcHours.submittedHours - subtractedHours\r\n        : calcHours.submittedHours,\r\n    acceptedHours:\r\n      columnIdx === 1 && subtractedHours\r\n        ? calcHours.acceptedHours - subtractedHours\r\n        : calcHours.acceptedHours,\r\n    rejectedHours:\r\n      columnIdx === 2 && subtractedHours\r\n        ? calcHours.rejectedHours - subtractedHours\r\n        : calcHours.rejectedHours,\r\n  };\r\n};","import { useDeleteDayMutation } from \"../../../services/apiSliceMonths\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { deleteDayById, calculateUpdatedCalcHours } from \"./utilsDeleteDay\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useDeleteDayAsync = (day: ModelDay, columnIndex: number) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n\r\n  const deleteDayAsync = async () => {\r\n    const subtractedHours = day?.hours;\r\n\r\n    month &&\r\n      (await deleteDay({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        colIdx: columnIndex,\r\n        monthBody: {\r\n          ...month,\r\n          calcHours: calculateUpdatedCalcHours(\r\n            month,\r\n            +columnIndex,\r\n            subtractedHours\r\n          ),\r\n\r\n          columns: deleteDayById({ ...month }, day.id).columns,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { deleteDayAsync, success };\r\n};\r\n\r\nexport default useDeleteDayAsync;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport useAlertDelete from \"../../../hooks/useAlertDelete\";\r\nimport useDeleteDayAsync from \"./useDeleteDayAsync\";\r\n\r\ntype Props = {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n};\r\n\r\nconst ButtonDeleteDay = (props: Props) => {\r\n  const { deleteDayAsync, success } = useDeleteDayAsync(\r\n    props.day,\r\n    props.columnIdx\r\n  );\r\n  const { handleAlert, alert } = useAlertDelete(\r\n    deleteDayAsync,\r\n    \"Usunąć dzień?\"\r\n  );\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger\" />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        onClick={handleAlert}\r\n        className=\"d-flex justify-content-between  align-items-center w-100 p-0 bg-transparent border-0 fw-medium text-dark\"\r\n        disabled={success.isLoading}\r\n      >\r\n        <div>{props.day?.hours} h</div>\r\n        <div>{btnContent}</div>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteDay;\r\n","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport \"./_dayIcon.scss\"\r\n\r\ntype Props = {\r\n    place: string\r\n}\r\n\r\n\r\nconst DayIcon = (props:Props) => {\r\n  return (\r\n    <div>\r\n      {props.place === \"Poza\" ? (\r\n        <TbArrowBigRightLineFilled className=\"_dayIcon__arrow\" />\r\n      ) : (\r\n        <MdFactory className=\"_dayIcon__factory \" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayIcon;\r\n","import { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport { dateShort } from \"./utilsDayDetails\";\r\nimport DayIcon from \"../dayIcon/DayIcon\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n}\r\n\r\nconst DayDetails = (props: Props) => {\r\n  if (!props?.day?.date) return <div>Brak danych</div>;\r\n\r\n  const printDate = dateShort(props?.day?.date);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between fs-7 \">\r\n        <div>{props.day?.userName}</div>\r\n        <DayIcon place={props.day.place} />\r\n      </div>\r\n\r\n      <div className=\"d-flex fw-medium justify-content-between\">\r\n        <div>{printDate ? printDate : \"\"}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayDetails;\r\n","export const dateShort = (propsDate: string) => {\r\n  const date = new Date(propsDate);\r\n  return new Intl.DateTimeFormat(\"pl-PL\", {\r\n    day: \"numeric\",\r\n    month: \"short\",\r\n  }).format(date);\r\n\r\n};\r\n\r\n\r\n","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\nimport ButtonDeleteDay from \"./buttonDeleteDay/ButtonDeleteDay\";\r\nimport DayDetails from \"./dayDetails/DayDetails\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst Day = (props: Props) => {\r\n  const { searchedName } = useSelector((state: RootState) => state.filterDays);\r\n\r\n  let printDay: string;\r\n\r\n  if (!searchedName) {\r\n    printDay = \"d-block\";\r\n  } else if (searchedName !== props.day.userName) {\r\n    printDay = \"d-none\";\r\n  }\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white rounded border ${\r\n              snapshot.isDragging ? \"border-dark\" : \"border-dark-subtle\"\r\n            } ${printDay}`}\r\n          >\r\n            <div\r\n              className=\"px-1 py-2 py-sm-1 rounded\"\r\n              style={{\r\n                borderTop: `8px solid ${props.day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.8 : 1,\r\n              }}\r\n            >\r\n              <DayDetails day={props.day} />\r\n\r\n              <ButtonDeleteDay columnIdx={props.columnIdx} day={props.day} />\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport Day from \"../Day\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_column.scss\";\r\n\r\ninterface Props {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n}\r\n\r\nconst Column = (props: Props) => {\r\n  const { searchedName } = useSelector((state: RootState) => state.filterDays);\r\n\r\n  return (\r\n    <div className=\"_column position-relative\">\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={`p-1 h-100 overflow-hidden border border-1 border border-top-0 ${\r\n                snapshot.isDraggingOver ? \"_isDragging\" : \"_noDragging\"\r\n              } ${searchedName ? \"_filtered\" : \"\"}`}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <Day\r\n                        key={UUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_counter.scss\";\r\n\r\ntype Props = {\r\n  counter: any;\r\n  text: string;\r\n};\r\n\r\nconst Counter = (props: Props) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [counter, setCounter] = useState<number[]>([props.counter]);\r\n  const didMountRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    setCounter([props.counter]);\r\n    didMountRef.current = false;\r\n  }, [month?.id]);\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      setCounter(prev => [...prev, props?.counter ?? 0]);\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [props.counter]);\r\n\r\n  return (\r\n    <div className=\"_counter\">\r\n      <div\r\n        style={{\r\n          transform: `translateY(-${(counter.length - 1) * 20}px)`,\r\n          transition: \"transform 0.3s\",\r\n        }}\r\n      >\r\n        {counter.map((item, idx) => {\r\n          return (\r\n            <div key={idx} className=\"_counter__dygit\">\r\n              {item}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useDataCoumnsHeader = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  const dataColumnsHeader = [\r\n    {\r\n      headerText: \"Złożone:\",\r\n      counter: month?.calcHours?.submittedHours,\r\n    },\r\n    {\r\n      headerText: \"Przyznane:\",\r\n      counter: month?.calcHours?.acceptedHours,\r\n    },\r\n    {\r\n      headerText: \"Odrzucone:\",\r\n      counter: month?.calcHours?.rejectedHours,\r\n    },\r\n  ];\r\n\r\n  return { dataColumnsHeader };\r\n};\r\n\r\nexport default useDataCoumnsHeader;\r\n","import Counter from \"../counter/Counter\";\r\nimport useDataCoumnsHeader from \"./useDataCoumnsHeader\";\r\nimport \"./_columnsHeader.scss\";\r\n\r\ninterface Props {\r\n  thumbPosition: number;\r\n}\r\n\r\nconst ColumnsHeader = (props: Props) => {\r\n  const { dataColumnsHeader } = useDataCoumnsHeader();\r\n\r\n  return (\r\n    <div className=\"_d-between sticky-top\">\r\n      {dataColumnsHeader.map(({ headerText, counter }) => {\r\n        return (\r\n          <div\r\n            key={headerText}\r\n            className={`text-dark-emphasis _fs-responsive bg-white fw-medium p-1 d-flex align-items-center _columnsHeader  ${\r\n              props.thumbPosition === 0\r\n                ? \"border-bottom border-3 border-white\"\r\n                : \"border-bottom border-3\"\r\n            }`}\r\n          >\r\n            {headerText}\r\n\r\n            <Counter counter={counter} text={headerText} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnsHeader;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useScrollThumbPosition = () => {\r\n  const scrollableRef = useRef(null);\r\n  const [thumbPosition, setThumbPosition] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const element = scrollableRef.current;\r\n\r\n    if (element) {\r\n      const { scrollTop, scrollHeight, clientHeight } = element;\r\n      const maxScrollTop = scrollHeight - clientHeight;\r\n      const thumbPosition = (scrollTop / maxScrollTop) * 100;\r\n      setThumbPosition(thumbPosition);\r\n    }\r\n  };\r\n\r\n  return { scrollableRef, thumbPosition, handleScroll };\r\n};\r\n\r\nexport default useScrollThumbPosition;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { addDaysToColumns } from \"../utils/utilsAddDaysToColumns\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nconst useUpdateColumns = (\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  const columnsWithDays = month && addDaysToColumns(month?.columns);\r\n\r\n  useEffect(() => {\r\n    if (columnsWithDays) {\r\n      setColumns(columnsWithDays);\r\n    }\r\n  }, [month?.columns]);\r\n};\r\n\r\nexport default useUpdateColumns;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column: ModelColumn) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n","import { ModelDay } from \"../../../../sharedModels/modelDay\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nconst getHoursFromColumn = (days: ModelDay[]) => {\r\n  return days?.reduce((acu, day) => {\r\n    const dayHours = day?.hours || 0;\r\n    return acu + dayHours;\r\n  }, 0);\r\n};\r\n\r\nexport const getHoursFromColumns = (columns: ModelColumn[]) => {\r\n  const submittedHours = getHoursFromColumn(columns[0]?.days);\r\n  const acceptedHours = getHoursFromColumn(columns[1]?.days);\r\n  const rejectedHours = getHoursFromColumn(columns[2]?.days);\r\n\r\n  return { submittedHours, acceptedHours, rejectedHours };\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { getHoursFromColumns } from \"../utils/utilsGetHoursFromColumns\";\r\nimport useURLValues from \"../../../../hooks/useURLValues\";\r\nimport { useUpdateMonthMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\nconst useUpdateMonth = (\r\n  columns: ModelColumn[],\r\n  executeUpdateMonth: boolean\r\n) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { submittedHours, acceptedHours, rejectedHours } =\r\n    getHoursFromColumns(columns);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0 && month) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calcHours: {\r\n            ...month?.calcHours,\r\n            currentHours:\r\n              month?.calcHours?.allHours -\r\n              submittedHours -\r\n              acceptedHours -\r\n              rejectedHours +\r\n              rejectedHours,\r\n            submittedHours,\r\n            acceptedHours,\r\n            rejectedHours,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [executeUpdateMonth]);\r\n};\r\n\r\nexport default useUpdateMonth;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../../../sharedModels/modelDay\";\r\n\r\nconst findSourceColumnIdx = (columns: ModelColumn[], source: any) => {\r\n  return columns?.findIndex((column: ModelColumn) => {\r\n    return column.id === source.droppableId;\r\n  });\r\n};\r\n\r\nconst findDestinationColumnIdx = (columns: ModelColumn[], destination: any) => {\r\n  return columns?.findIndex((column: ModelColumn) => {\r\n    return column.id === destination.droppableId;\r\n  });\r\n};\r\n\r\nconst findDeletedDay = (newSourceDays: ModelDay[], source: any) => {\r\n  const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n  return deletedDay;\r\n};\r\n\r\nconst updateColumnDays = (\r\n  columns: ModelColumn[],\r\n  columnIndex: number,\r\n  newDays: ModelDay[]\r\n): ModelColumn[] => {\r\n  const newColumns = [...columns];\r\n  newColumns[columnIndex] = { ...columns[columnIndex], days: newDays };\r\n  return newColumns;\r\n};\r\n\r\nconst moveItemFromColumn = (\r\n  columns: ModelColumn[],\r\n  source: any,\r\n  destination: any,\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n  const destinationColumnIdx = findDestinationColumnIdx(columns, destination);\r\n  const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n  const newDestinationDays =\r\n    source.droppableId !== destination.dropableId\r\n      ? [...columns[destinationColumnIdx].days]\r\n      : newSourceDays;\r\n\r\n  const deletedDay = findDeletedDay(newSourceDays, source);\r\n  newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n  const newColumns = updateColumnDays(columns, sourceColumnIdx, newSourceDays);\r\n  setColumns(\r\n    updateColumnDays(newColumns, destinationColumnIdx, newDestinationDays)\r\n  );\r\n};\r\n\r\nconst moveItemInColumn = (\r\n  columns: ModelColumn[],\r\n  source: any,\r\n  destination: any,\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const destintionIdx = destination.index;\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n\r\n  const days = [...columns[sourceColumnIdx].days];\r\n  const deletedDay = findDeletedDay(days, source);\r\n\r\n  days.splice(destintionIdx, 0, deletedDay);\r\n\r\n  const newColumns = updateColumnDays(columns, sourceColumnIdx, days);\r\n  setColumns(newColumns);\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: any,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>,\r\n  searchedName: string\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  // if (searchedName) return;\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId === \"rejected\") return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    moveItemFromColumn(columns, source, destination, setColumns);\r\n  } else {\r\n    moveItemInColumn(columns, source, destination, setColumns);\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport Column from \"../column/Column\";\r\nimport ColumnsHeader from \"../columnsHeader.tsx/ColumnsHeader\";\r\nimport \"./_columns.scss\";\r\nimport useScrollThumbPosition from \"./hooks/useScrollThumbPosition\";\r\nimport useUpdateColumns from \"./hooks/useUpdateColumns\";\r\nimport useUpdateMonth from \"./hooks/useUpdateMonth\";\r\nimport { handleDragDrop } from \"./utils/utilsHandleDragDrop\";\r\n\r\nconst Columns = () => {\r\n  const { scrollableRef, thumbPosition, handleScroll } =\r\n    useScrollThumbPosition();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { searchedName } = useSelector((state: RootState) => state.filterDays);\r\n\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n  const [executeUpdateMonth, setExecuteUpdateMonth] = useState(false);\r\n  useUpdateColumns(setColumns);\r\n  useUpdateMonth(columns, executeUpdateMonth);\r\n\r\n  const handleDragEnd = (results: DropResult) => {\r\n    month && handleDragDrop(results, columns, setColumns, searchedName);\r\n    setExecuteUpdateMonth(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={scrollableRef}\r\n      onScroll={handleScroll}\r\n      className=\"overflow-y-scroll h-100 _columnsContainer\"\r\n    >\r\n      <ColumnsHeader thumbPosition={thumbPosition} />\r\n\r\n      <div className=\"_d-between _dragDropContex\">\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {columns?.map((column: ModelColumn, idx: number) => {\r\n            return <Column key={column.id} columnIdx={idx} column={column} />;\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Columns;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport HoursSummary from \"../HoursSummary\";\r\nimport Columns from \"../columns/Columns\";\r\nimport \"./_monthPanelContent.scss\";\r\n\r\nconst MonthPanelContent = () => {\r\n  const { pathname } = useLocation();\r\n  const [isAnimate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAnimate(false);\r\n    const timeoutId = setTimeout(() => {\r\n      setAnimate(true);\r\n    });\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      {isAnimate && (\r\n        <div className=\"pe-1 pb-1 _anim-opacity _monthPanelContent\">\r\n          <HoursSummary />\r\n          <Columns />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/indexContainer/IndexContainer\";\r\nimport useReduxMonthData from \"../../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport MonthPanelEmpty from \"../monthPanelEmpty/MonthPanelEmpty\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport MonthPanelContent from \"../monthPanelContent/MonthPanelContent\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  useReduxMonthData();\r\n\r\n  const { month, monthErrorGet, monthIsLoading } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let content;\r\n\r\n  if (monthIsLoading || listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (monthErrorGet || listUsersError || listMonthsError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else if (!month || month?.id === \"\") {\r\n    content = <MonthPanelEmpty />;\r\n  } else {\r\n    content = <MonthPanelContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n\r\n// const auth = getAuth();\r\n// onAuthStateChanged(auth, user => {\r\n//   if (user) {\r\n//     // User is signed in, see docs for a list of available properties\r\n//     // https://firebase.google.com/docs/reference/js/auth.user\r\n//     const uid = user.uid;\r\n\r\n//     // ...\r\n//   } else {\r\n//     // User is signed out\r\n//     // ...\r\n//   }\r\n// });\r\n","\r\n\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top _d-center fs-4\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["props","dispatch","useDispatch","_jsx","_Fragment","children","isPrinted","id","className","onClick","e","_e$target","includes","target","setIsPrinted","printAlert","handleClose","_jsxs","header","Button","action","_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","AutoLogout","styles","Spinner","animation","variant","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","success","btnText","btnContent","isLoading","size","monthURL","useLocation","pathname","slice","test","_Intl$DateTimeFormat","monthURLToDateFormat","monthURLStringFormat","Intl","DateTimeFormat","year","month","timeZone","format","split","yearFromURL","monthFromURL","isMonthInURL","_useURLValues","useURLValues","_useMonthDataQuery","useMonthDataQuery","data","error","getMonth","getMonthError","getMonthIsLoading","useSelector","state","monthPanel","useMonthURLToString","_month$calcHours","_month$calcHours2","_month$calcHours3","_month$calcHours4","calcHours","allHours","concat","currentHours","deleteDayById","obj","idToDelete","updatedColumns","columns","column","_column$days","updatedDays","days","filter","day","_objectSpread","calculateUpdatedCalcHours","columnIdx","subtractedHours","submittedHours","acceptedHours","rejectedHours","columnIndex","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","deleteDay","deleteDayAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","hours","t0","colIdx","monthBody","stop","apply","arguments","_props$day","_useDeleteDayAsync","useDeleteDayAsync","_useAlertDelete","useAlertDelete","useHTTPState","RiDeleteBin6Line","disabled","place","TbArrowBigRightLineFilled","MdFactory","_props$day2","_props$day3","date","printDate","propsDate","dateShort","userName","DayIcon","printDay","searchedName","filterDays","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","style","borderTop","userColor","opacity","DayDetails","ButtonDeleteDay","Droppable","droppableId","droppableProps","isDraggingOver","Array","isArray","idx","Day","UUID","placeholder","counter","setCounter","didMountRef","useRef","current","_props$counter","_toConsumableArray","transform","length","transition","item","dataColumnsHeader","headerText","useDataCoumnsHeader","thumbPosition","Counter","text","scrollableRef","setThumbPosition","handleScroll","element","scrollTop","scrollHeight","clientHeight","setColumns","columnsWithDays","hasOwnProperty","getHoursFromColumn","reduce","acu","executeUpdateMonth","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","_getHoursFromColumns","_columns$","_columns$2","_columns$3","getHoursFromColumns","findSourceColumnIdx","source","findIndex","findDeletedDay","newSourceDays","_newSourceDays$splice","splice","updateColumnDays","newDays","newColumns","handleDragDrop","results","destination","sourceColumnIdx","destinationColumnIdx","findDestinationColumnIdx","newDestinationDays","dropableId","deletedDay","moveItemFromColumn","destintionIdx","moveItemInColumn","_useScrollThumbPositi","useScrollThumbPosition","_useState3","_useState4","setExecuteUpdateMonth","useUpdateColumns","useUpdateMonth","onScroll","ColumnsHeader","DragDropContext","onDragEnd","Column","isAnimate","setAnimate","timeoutId","setTimeout","clearTimeout","HoursSummary","Columns","useReduxMonthData","content","_useSelector","monthErrorGet","monthIsLoading","_useSelector2","listUsers","listUsersError","listUsersIsLoading","listMonthsError","listMonths","RequestLoading","requestContainer","RequestError","MonthPanelContent","MonthPanelEmpty","IndexContainer","contentJSX","width","height","zIndex","backgroundColor"],"sourceRoot":""}