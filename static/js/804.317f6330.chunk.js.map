{"version":3,"file":"static/js/804.317f6330.chunk.js","mappings":"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","sources":["components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/IndexContainer.tsx","components/alert/Alert.tsx","components/inputs/FormErrors.tsx","components/inputs/InputsText.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useWindowWidth.tsx","components/ListContainer.tsx","pages/settings/dataStylesSettingsLists.tsx","pages/settings/ListUsers.tsx","components/inputs/inputsRange/InputsRange.tsx","pages/settings/listMonths/formHours/FormHoursError.tsx","pages/settings/listMonths/formHours/FormHoursTop.tsx","pages/settings/listMonths/formHours/useFormikHours.tsx","pages/settings/listMonths/formHours/FormHoursContext.tsx","pages/settings/listMonths/MonthTitle.tsx","pages/settings/listMonths/DeleteButton.tsx","pages/settings/listMonths/CollapseFormHours.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/indexSettings/SettinsContent.tsx","pages/settings/indexSettings/useRequestSettings.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/capitalizeFirstLetter.tsx","utils/printPanelContent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown\">\r\n            Wylogowanie nastąpi za\r\n            <div\r\n             className=\"d-flex mx-auto w-fit-content\"\r\n            >\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\nimport AutoLogout from \"./autoLogout/AutoLogout\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst FormErrors = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-8\" style={{ height: \"0.7rem\" }}>\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormErrors;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({ value, label, type, isErrorPrint, min, max, placeholder }) => {\r\n          return (\r\n            <Form.Group key={value}>\r\n              {label && (\r\n                <Form.Label\r\n                  htmlFor=\"date\"\r\n                  className=\"mb-0 fs-responsive fw-medium\"\r\n                >\r\n                  {label}\r\n                </Form.Label>\r\n              )}\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className={`p-0 border border-primary shadow-sm w-100 text-capitalize ${\r\n                  type === \"color\" ? \"px-0\" : \"px-1\"\r\n                }`}\r\n                style={{ minHeight: 0 }}\r\n              />\r\n              {isErrorPrint && (\r\n                <FormErrors value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  let print;\r\n  if (props.listContent?.length === 0 || !props.listContent) {\r\n    print = \"Brak danych\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"h6\">\r\n        {props.header}: {props.listContent?.length}\r\n      </h3>\r\n\r\n      <ListGroup className=\"border-0 p-0\">\r\n        <ListGroup.Item className=\"py-1 px-2 text-warning border-0\">\r\n          {print}\r\n        </ListGroup.Item>\r\n\r\n        {props.children}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","export const dataStylesListGroupItem = \"shadow-sm p-0 mb-2 ps-2 pe-0 rounded-1\";\r\nexport const dataStylesButton =\r\n  \"w-100 d-flex justify-content-between align-items-center px-1 rounded-0 bg-white border-0\";\r\n","import { useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../components/alert/Alert\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useDeleteUserMutation } from \"../../services/apiSliceUsers\";\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\nimport {\r\n  dataStylesButton,\r\n  dataStylesListGroupItem,\r\n} from \"./dataStylesSettingsLists\";\r\n\r\nconst ListUsers = () => {\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (userName: string) => {\r\n    setUserName(userName);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (userName) {\r\n      const userBodyPUTRequest = listUsers?.filter(\r\n        (user: ModelUser) => user?.userName !== userName\r\n      );\r\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\r\n      setIsAlertPrinted(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteUserAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć użytkownika\"}\r\n      />\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={dataStylesListGroupItem}\r\n            style={{\r\n              backgroundColor: user.userColor,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => handleAlert(user.userName)}\r\n              disabled={success.isLoading}\r\n              className={dataStylesButton}\r\n              style={{ color: user.userColor }}\r\n            >\r\n              {user.userName}\r\n\r\n              {userName === user.userName ? (\r\n                btnContent\r\n              ) : (\r\n                <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n              )}\r\n            </Button>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range custom-range medium\"\r\n              style={{\r\n                height: 10,\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props: Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  var content = \"\";\r\n\r\n  if (props.calcHours) {\r\n    if (\r\n      props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-8\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import InputsText from \"../../../../components/inputs/InputsText\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n  isLoading: boolean;\r\n};\r\n\r\nconst FormHoursTop = (props: Props) => {\r\n  const dataInputsText = [\r\n    { value: \"allHours\", type: \"number\", isErrorPrint: false },\r\n  ];\r\n\r\n  let printAllours;\r\n\r\n  if (props.isLoading) {\r\n    printAllours = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else {\r\n    printAllours = props?.calcHours?.allHours;\r\n  }\r\n\r\n  const styles = \"fs-7 d-flex align-items-end\";\r\n  return (\r\n    <div className=\"d-flex justify-content-between fw-medium \">\r\n      <div className={styles}>0 h</div>\r\n      Zapisane: {printAllours} h\r\n      <div className=\"col-6 col-sm-5 d-flex\" style={{ width: \"62px\" }}>\r\n        <InputsText inputsData={dataInputsText} /> &nbsp;\r\n        <div>h</div>\r\n      </div>\r\n      <div className={styles}>320 h</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useAddAllHoursMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (\r\n  calcHours: ModelCalcHours | null | undefined,\r\n  yearValue: string,\r\n  monthValue: string\r\n) => {\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport useHTTPState from \"../../../../hooks/useHTTPState\";\r\nimport InputsRange from \"../../../../components/inputs/inputsRange/InputsRange\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\nimport { useAllHoursQuery } from \"../../../../services/apiSliceMonths\";\r\n\r\ntype Props = {\r\n  monthDate?: string | null;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const yearValue = props.monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = props.monthDate?.slice(5) ?? \"\";\r\n\r\n  const { data: calcHours, isLoading } = useAllHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    calcHours,\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n  console.log(\"\", isLoading);\r\n\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle\r\n      className=\"text-primary\"\r\n      style={{ fontSize: \"1.4rem\" }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop calcHours={calcHours} isLoading={isLoading} />\r\n\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n          <FormHoursError calcHours={calcHours} />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={success.isLoading}\r\n            className=\"col-2 d-flex justify-content-center align-items-center m-0 justify-content-center p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n          >\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalizeFirstLetter } from \"../../../utils/capitalizeFirstLetter\";\r\n\r\ntype Props = {\r\n  title?: string | null;\r\n  idx: number;\r\n};\r\nconst MonthTitle = (props: Props) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const title = props?.title && capitalizeFirstLetter(props?.title)\r\n  \r\n  return (\r\n    <div style={{ width: \"45%\" }}>\r\n      <Link\r\n        to={`/godziny/${listMonths?.[props.idx]}`}\r\n        className=\"text-decoration-none fs-responsive text-dark fw-medium\"\r\n      >\r\n        <ImArrowLeft\r\n          className=\"fs-6 me-1 text-primary\"\r\n        />\r\n        {title}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useDeleteMonthMutation } from \"../../../services/apiSliceMonths\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n  monthDate?: string | null;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst DeleteButton = (props: Props) => {\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (monthDate: string, idx: number) => {\r\n    props.setMonthDate(monthDate);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteMonthAsync = async () => {\r\n    if (props?.monthDate && listMonths?.includes(props.monthDate)) {\r\n      const year = props.monthDate.slice(0, 4);\r\n      const month = props.monthDate.slice(-2);\r\n      await deleteMonth({ year: year, month: month });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteMonthAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć miesiąc\"}\r\n      />\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={() =>\r\n          listMonths && handleAlert(listMonths[props.idx], props.idx)\r\n        }\r\n        className=\"ms-auto bg-transparent border-0 p-1\"\r\n      >\r\n        {listMonths && props.monthDate === listMonths[props.idx] ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { ReactNode, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport MonthTitle from \"./MonthTitle\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\ntype Props = {\r\n  monthDateToString?: string | null;\r\n  monthDate?: string | null;\r\n  children: ReactNode;\r\n  isOpen: boolean;\r\n  setOpenCollapseIndex: React.Dispatch<React.SetStateAction<number | null>>;\r\n  isOpenCollapse: boolean;\r\n  onToggle: () => void;\r\n  idx: number;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst CollapseFormHours = (props: Props) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    props.setOpenCollapseIndex(-1);\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle title={props.monthDateToString} idx = {props.idx}/>\r\n        <Button\r\n          onClick={() => {\r\n            props.onToggle();\r\n            props.isOpen && handleOpen();\r\n      \r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`fw-medium fs-responsive d-flex justify-content-between align-items-center p-0 ps-1`}\r\n          style={{\r\n            transition: \"border-radius 420ms\",\r\n          }}\r\n        >\r\n          Zapisz godziny\r\n          <MdOutlineKeyboardArrowDown\r\n            className=\"fs-3\"\r\n            style={{\r\n              transform: `${props.isOpen ? \"rotate(180deg)\" : \"\"} `,\r\n              transitionDuration: \"320ms\",\r\n            }}\r\n          />\r\n        </Button>\r\n        <DeleteButton\r\n          idx={props.idx}\r\n          monthDate={props.monthDate}\r\n          setMonthDate={props.setMonthDate}\r\n        />\r\n      </div>\r\n      <Collapse in={props.isOpen}>\r\n        <div className=\" pe-1\">\r\n          {props.isOpen ? (\r\n            props.children\r\n          ) : (\r\n            <div style={{ height: \"88px\" }}></div>\r\n          )}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseFormHours;\r\n","import { useState } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormHoursContext from \"./formHours/FormHoursContext\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { dataStylesListGroupItem } from \"../dataStylesSettingsLists\";\r\nimport CollapseFormHours from \"./CollapseFormHours\";\r\n\r\nconst ListMonths = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [openCollapseIndex, setOpenCollapseIndex] = useState<number | null>(\r\n    null\r\n  );\r\n  const [isOpenCollapse, setCollapseOpen] = useState(false);\r\n  const [monthDate, setMonthDate] = useState(\"\");\r\n\r\n  const handleTogle = (monthDate: string, idx: number) => {\r\n    setMonthDate(monthDate);\r\n    setOpenCollapseIndex(idx);\r\n    listMonths &&\r\n      monthDate === listMonths[idx] &&\r\n      setCollapseOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {databaseMonthsDatesToString?.map(\r\n        (monthDateToString: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item\r\n              key={monthDateToString}\r\n              className={dataStylesListGroupItem}\r\n            >\r\n              <CollapseFormHours\r\n                monthDateToString={monthDateToString}\r\n                monthDate={monthDate}\r\n                isOpen={idx === openCollapseIndex}\r\n                setOpenCollapseIndex={setOpenCollapseIndex}\r\n                isOpenCollapse={isOpenCollapse}\r\n                onToggle={() => listMonths && handleTogle(listMonths[idx], idx)}\r\n                idx={idx}\r\n                setMonthDate={setMonthDate}\r\n              >\r\n                <FormHoursContext monthDate={listMonths && listMonths[idx]} />\r\n              </CollapseFormHours>\r\n            </ListGroup.Item>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListContainer from \"../../../components/ListContainer\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport ListUsers from \"../ListUsers\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\n\r\nconst SettinsContent = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-white p-2 py-4 p-sm-4 w-100\"\r\n      style={{\r\n        height: windowWidth >= 500 ? \"calc(100%)\" : \"calc(100% - 2.5rem)\",\r\n        overflow: \"hidden auto\",\r\n        outline: \"4px solid white\",\r\n        scrollbarGutter: \"stable\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: \"480px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ListContainer header={\"Zapisane miesiące\"} listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <div className=\"border my-4\"></div>\r\n\r\n        <ListContainer header={\"Zapisani użytkownicy\"} listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettinsContent;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { printPanelLoadingContent } from \"../../../utils/printPanelContent\";\r\nimport SettinsContent from \"./SettinsContent\";\r\n\r\nconst useRequestSettings = () => {\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let requestState;\r\n\r\n  if (listUsersIsLoading) {\r\n    requestState = printPanelLoadingContent(\r\n      <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (listMonthsError || listUsersError) {\r\n    requestState = printPanelLoadingContent(\r\n      <div className=\"text-danger text-center fs-4 \">Błąd. Odśwież stronę</div>\r\n    );\r\n  } else {\r\n    requestState = <SettinsContent />;\r\n  }\r\n\r\n  return { requestState };\r\n};\r\nexport default useRequestSettings;\r\n","import IndexContainer from \"../../../components/IndexContainer\";\r\nimport useRequestSettings from \"./useRequestSettings\";\r\n\r\nconst IndexSettings = () => {\r\n  const { requestState } = useRequestSettings();\r\n\r\n  return <IndexContainer>{requestState}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const capitalizeFirstLetter = (inputString: string) => {\r\n  return inputString\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n","export const printPanelContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"d-flex justify-content-center align-items-center fs-3 text-warning text-center\"\r\n    style={{\r\n      maxWidth: \"1000px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n\r\nexport const printPanelLoadingContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top d-flex justify-content-center align-items-center\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","_jsx","children","id","className","style","height","zIndex","backgroundColor","_jsxs","props","windowWidth","useWindowWidth","overflow","position","width","maxWidth","AutoLogout","dispatch","useDispatch","_Fragment","isPrinted","onClick","e","_e$target","_e$target2","target","setIsPrinted","printAlert","handleClose","header","includes","Button","action","touched","value","errors","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","_ref","label","type","isErrorPrint","min","placeholder","Form","Group","Label","htmlFor","Control","name","onChange","onBlur","size","concat","minHeight","FormErrors","success","btnText","btnContent","isLoading","Spinner","animation","variant","listMonths","useSelector","state","databaseMonthsDatesToString","_toConsumableArray","monthDate","monthToDateFormat","Intl","DateTimeFormat","year","month","timeZone","format","window","innerWidth","setWindowWidth","handleResize","removeEventListener","_props$listContent","_props$listContent2","print","listContent","length","ListGroup","Item","dataStylesListGroupItem","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","useHTTPState","RiDeleteBin6Line","listUsers","userName","setUserName","_useState3","_useState4","isAlertPrinted","setIsAlertPrinted","deleteUserAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userBodyPUTRequest","wrap","_context","prev","next","filter","user","t0","stop","apply","arguments","Alert","userColor","handleAlert","disabled","color","gradientValue","allHours","gradientBackground","inputsValues","Range","background","_props$calcHours","_props$calcHours2","_props$calcHours3","_props$calcHours4","content","monthPanel","calcHours","submittedHours","acceptedHours","printAllours","styles","InputsText","yearValue","monthValue","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","onSubmit","abrupt","_objectSpread","currentHours","_x","initialValues","_props$monthDate$slic","_props$monthDate","_props$monthDate$slic2","_props$monthDate2","slice","_useAllHoursQuery","useAllHoursQuery","data","_useFormikHours","useFormikHours","console","log","AiOutlinePlusCircle","fontSize","Formik","FormHoursTop","InputsRange","FormHoursError","title","capitalizeFirstLetter","Link","to","idx","ImArrowLeft","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","deleteMonthAsync","setMonthDate","isOpen","setOpen","MonthTitle","monthDateToString","onToggle","setOpenCollapseIndex","transition","MdOutlineKeyboardArrowDown","transform","transitionDuration","DeleteButton","Collapse","in","useMonthDates","openCollapseIndex","isOpenCollapse","setCollapseOpen","_useState5","_useState6","CollapseFormHours","handleTogle","FormHoursContext","outline","scrollbarGutter","ListContainer","ListMonths","ListUsers","_useSelector","listUsersError","listUsersIsLoading","listMonthsError","requestState","printPanelLoadingContent","SettinsContent","useRequestSettings","IndexContainer","inputString","toLowerCase","split","word","charAt","toUpperCase","join","printPanelContent","contentJSX"],"sourceRoot":""}