{"version":3,"file":"static/js/873.0dba0e4a.chunk.js","mappings":"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","sources":["components/IndexContainer.tsx","components/alert/Alert.tsx","components/inputs/inputsRange/InputsRange.tsx","components/formHours/FormHoursError.tsx","components/formHours/FormHoursTop.tsx","components/formHours/useFormikHours.tsx","components/formHours/FormHoursContext.tsx","components/inputs/FormErrors.tsx","components/inputs/InputsText.tsx","hooks/useDatabaseListMonths.tsx","hooks/updateReduxDatabase/useReduxListMonths.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx","components/ListContainer.tsx","pages/settings/dataStylesSettingsLists.tsx","pages/settings/listMonths/MonthTitle.tsx","pages/settings/listMonths/DeleteButton.tsx","pages/settings/listMonths/CollapseInMonth.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/ListUsers.tsx","pages/settings/indexSettings/SettinsContent.tsx","pages/settings/indexSettings/useRequestSettings.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/printPanelContent.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range custom-range medium\"\r\n              style={{\r\n                height: 10,\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props:Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  var content = \"\";\r\n\r\n  if (props.calcHours) {\r\n    if (\r\n      props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-8\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import InputsText from \"../inputs/InputsText\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursTop = (props: Props) => {\r\n  const dataInputsText = [\r\n    { value: \"allHours\", type: \"number\", isErrorPrint: false },\r\n  ];\r\n\r\n  const styles = \"fs-7 d-flex align-items-end\";\r\n  return (\r\n    <div className=\"d-flex justify-content-between fw-medium \">\r\n      <div className={styles}>0 h</div>\r\n      Zapisane: {props?.calcHours?.allHours} h\r\n      <div className=\"col-6 col-sm-5 d-flex\" style={{ width: \"62px\" }}>\r\n        <InputsText inputsData={dataInputsText} /> &nbsp;\r\n        <div>h</div>\r\n      </div>\r\n      <div className={styles}>320 h</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useSelector } from \"react-redux\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport {\r\n  useAddAllHoursMutation,\r\n  useMonthDataQuery,\r\n} from \"../../services/apiSliceMonths\";\r\nimport useReduxMonthData from \"../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (calcHours: ModelCalcHours | null | undefined, yearValue: string, monthValue: string) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  // const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  // const yearValue = month?.id.slice(0, 4);\r\n  // const monthValue = month?.id.slice(-2);\r\n\r\n  // const {\r\n  //   data: month,\r\n  //   error,\r\n  //   isLoading,\r\n  // } = useMonthDataQuery({\r\n  //   year: yearValue ?? \"\",\r\n  //   month: monthValue ?? \"\",\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getMonth(data));\r\n\r\n  //   dispatch(getMonthError(error));\r\n\r\n  //   dispatch(getMonthIsLoading(isLoading));\r\n  // }, [data, error, isLoading, dispatch]);\r\n\r\n  // console.log('form',month)\r\n\r\n\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport InputsRange from \"../inputs/inputsRange/InputsRange\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\nimport {\r\n  useAllHoursQuery,\r\n  useMonthDataQuery,\r\n} from \"../../services/apiSliceMonths\";\r\n\r\ntype Props = {\r\n  monthDate?: string | null;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const yearValue = props.monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = props.monthDate?.slice(5) ?? \"\";\r\n\r\n  const { data: calcHours } = useAllHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    calcHours,\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle\r\n      className=\"text-primary\"\r\n      style={{ fontSize: \"1.4rem\" }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2\">\r\n        <FormHoursTop calcHours={calcHours} />\r\n\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n          <FormHoursError calcHours={calcHours} />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={success.isLoading}\r\n            className=\"col-2 d-flex justify-content-center align-items-center m-0 justify-content-center p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n          >\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst FormErrors = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-8\" style={{ height: \"0.7rem\" }}>\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormErrors;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({ value, label, type, isErrorPrint, min, max, placeholder }) => {\r\n          return (\r\n            <Form.Group key={value}>\r\n              {label && (\r\n                <Form.Label\r\n                  htmlFor=\"date\"\r\n                  className=\"mb-0 fs-responsive fw-medium\"\r\n                >\r\n                  {label}\r\n                </Form.Label>\r\n              )}\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className=\"p-0 px-1 border border-primary shadow-sm w-100 \"\r\n                style={{ minHeight: 0  }}\r\n              />\r\n              {isErrorPrint && (\r\n                <FormErrors value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","import { onValue, ref } from \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { database } from \"../data/firebaseConfig\";\r\n\r\nconst useDatabaseListMonths = () => {\r\n  const reference = ref(database);\r\n  const [error, setError] = useState(\"\");\r\n  const [databaseListMonths, setDatabaseListMonths] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(\r\n      reference,\r\n      snapshot => {\r\n        let keysYears: string[] = [];\r\n        let monthsCollection: any = [];\r\n\r\n        snapshot?.forEach((firstLevelSnapshot: any) => {\r\n          const firstLevelKey = firstLevelSnapshot.key;\r\n          keysYears.push(firstLevelKey);\r\n\r\n          const nestedKeysRef = ref(database, `${firstLevelKey}`);\r\n          onValue(\r\n            nestedKeysRef,\r\n            nestedSnapshot => {\r\n              let keysMonths: string[] = [];\r\n\r\n              nestedSnapshot?.forEach((nestedKeySnapshot: any) => {\r\n                const nestedKey = nestedKeySnapshot.key;\r\n                keysMonths.push(nestedKey.slice(6));\r\n              });\r\n\r\n              monthsCollection.push(keysMonths);\r\n            },\r\n\r\n            nestedError => {\r\n              setError(\"Błąd\");\r\n            }\r\n          );\r\n        });\r\n\r\n        const months = [...monthsCollection]\r\n          .map((monthsInYear, idx) => {\r\n            return monthsInYear.map((month: any) => {\r\n              return keysYears[idx] + \"-\" + month;\r\n            });\r\n          })\r\n          .flat()\r\n          .reverse();\r\n\r\n        setDatabaseListMonths(months);\r\n      },\r\n      error => {\r\n        setError(\"Błąd\");\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  return {\r\n    databaseListMonths,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useDatabaseListMonths;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getListMonths,\r\n  getListMonthsError,\r\n  getListMonthsIsLoading,\r\n} from \"../../redux/storeFeatures/listMonthsSlice\";\r\n// import { useListMonthsQuery } from \"../../services/apiSliceMonths\";\r\nimport useDatabaseListMonths from \"../useDatabaseListMonths\";\r\n\r\nconst useReduxListMonths = () => {\r\n  const dispatch = useDispatch();\r\n  const { databaseListMonths, error } = useDatabaseListMonths();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getListMonths(databaseListMonths));\r\n    // dispatch(getListMonths(data));\r\n    // dispatch(getListMonthsError(error));\r\n\r\n    // dispatch(getListMonthsIsLoading(isLoading));\r\n  }, [databaseListMonths, dispatch]);\r\n};\r\n\r\nexport default useReduxListMonths;\r\n\r\n\r\n\r\n\r\n\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  return (\r\n    <>\r\n      <h3 className=\"h6\">{props.header}: {props.listContent?.length}</h3>\r\n\r\n      <ListGroup className=\"border-0 p-0\">\r\n        {!props.listContent && (\r\n          <ListGroup.Item className=\"py-1 px-2 text-warning border-0\">\r\n            Brak danych\r\n          </ListGroup.Item>\r\n        )}\r\n        {props.children}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","export const dataStylesListGroupItem = \"shadow-sm p-0 mb-2 ps-2 pe-0 rounded-1\";\r\nexport const dataStylesButton =\r\n  \"w-100 d-flex justify-content-between align-items-center px-1 text-capitalize rounded-0 bg-white border-0\";\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ntype Props = {\r\n  title?: string | null;\r\n  idx: number;\r\n};\r\nconst MonthTitle = (props: Props) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const title =\r\n    props.title?.charAt(0)?.toLocaleUpperCase() + (props.title?.slice(1) ?? \"\");\r\n\r\n  return (\r\n    <div style={{ width: \"45%\" }}>\r\n      <Link\r\n        to={`/godziny/${listMonths?.[props.idx]}`}\r\n        className=\"text-decoration-none fs-responsive text-dark fw-medium\"\r\n      >\r\n        <ImArrowLeft\r\n          className=\"fs-6 me-1 text-primary\"\r\n        />\r\n        {title}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport { useDeleteMonthMutation } from \"../../../services/apiSliceMonths\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../../redux/storeFeatures/alertSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  agreeAlert,\r\n  closeAlert,\r\n} from \"../../../redux/storeFeatures/alertSlice\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n  monthDate?: string | null;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst DeleteButton = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { agree } = useSelector((state: RootState) => state.alert);\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (monthDate: string, idx: number) => {\r\n    props.setMonthDate(monthDate);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteMonthAsync = async () => {\r\n    if (props?.monthDate && listMonths?.includes(props.monthDate)) {\r\n      const year = props.monthDate.slice(0, 4);\r\n      const month = props.monthDate.slice(-2);\r\n      await deleteMonth({ year: year, month: month });\r\n    }\r\n  };\r\n\r\n  // console.log(\"button\", agree);\r\n\r\n  // useEffect(() => {\r\n  //   deleteMonthAsync();\r\n  //   dispatch(agreeAlert(false));\r\n  //   dispatch(closeAlert());\r\n  // }, [agree]);\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteMonthAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć miesiąc\"}\r\n      />\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={() =>\r\n          listMonths && handleAlert(listMonths[props.idx], props.idx)\r\n        }\r\n        className=\"ms-auto bg-transparent border-0 p-1\"\r\n      >\r\n        {listMonths && props.monthDate === listMonths[props.idx] ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { ReactNode, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport MonthTitle from \"./MonthTitle\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\ntype Props = {\r\n  monthDateToString?: string | null;\r\n  monthDate?: string | null;\r\n  children: ReactNode;\r\n  isOpen: boolean;\r\n  setOpenCollapseIndex: React.Dispatch<React.SetStateAction<number | null>>;\r\n  isOpenCollapse: boolean;\r\n  onToggle: () => void;\r\n  idx: number;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst CollapseInMonth = (props: Props) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    props.setOpenCollapseIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle title={props.monthDateToString} idx = {props.idx}/>\r\n        <Button\r\n          onClick={() => {\r\n            props.onToggle();\r\n            props.isOpen && handleOpen();\r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`fw-medium fs-responsive d-flex justify-content-between align-items-center p-0 ps-1`}\r\n          style={{\r\n            transition: \"border-radius 420ms\",\r\n          }}\r\n        >\r\n          Zapisz godziny\r\n          <MdOutlineKeyboardArrowDown\r\n            className=\"fs-3\"\r\n            style={{\r\n              transform: `${props.isOpen ? \"rotate(180deg)\" : \"\"} `,\r\n              transitionDuration: \"320ms\",\r\n            }}\r\n          />\r\n        </Button>\r\n        <DeleteButton\r\n          idx={props.idx}\r\n          monthDate={props.monthDate}\r\n          setMonthDate={props.setMonthDate}\r\n        />\r\n      </div>\r\n      <Collapse in={props.isOpen}>\r\n        <div className=\" pe-1\">{props.isOpen && props.children}</div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollapseInMonth;\r\n","import { useState } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormHoursContext from \"../../../components/formHours/FormHoursContext\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  dataStylesListGroupItem\r\n} from \"../dataStylesSettingsLists\";\r\nimport CollapseInMonth from \"./CollapseInMonth\";\r\n\r\nconst ListMonths = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [openCollapseIndex, setOpenCollapseIndex] = useState<number | null>(\r\n    null\r\n  );\r\n  const [isOpenCollapse, setCollapseOpen] = useState(false);\r\n  const [monthDate, setMonthDate] = useState(\"\");\r\n\r\n \r\n  const handleTogle = (monthDate: string, idx: number) => {\r\n    setMonthDate(monthDate);\r\n    setOpenCollapseIndex(idx);\r\n    listMonths &&\r\n      monthDate === listMonths[idx] &&\r\n      setCollapseOpen(prev => !prev);\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n      {databaseMonthsDatesToString?.map(\r\n        (monthDateToString: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item\r\n              key={monthDateToString}\r\n              className={dataStylesListGroupItem}\r\n            >\r\n              <div>\r\n                <CollapseInMonth\r\n                  monthDateToString={monthDateToString}\r\n                  monthDate={monthDate}\r\n                  isOpen={idx === openCollapseIndex}\r\n                  setOpenCollapseIndex={setOpenCollapseIndex}\r\n                  isOpenCollapse={isOpenCollapse}\r\n                  onToggle={() =>\r\n                    listMonths && handleTogle(listMonths[idx], idx)\r\n                  }\r\n                  idx={idx}\r\n                  setMonthDate={setMonthDate}\r\n                >\r\n                  <FormHoursContext monthDate={listMonths && listMonths[idx]} />\r\n                </CollapseInMonth>\r\n              </div>\r\n            </ListGroup.Item>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import { useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../components/alert/Alert\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useDeleteUserMutation } from \"../../services/apiSliceUsers\";\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\nimport {\r\n  dataStylesButton,\r\n  dataStylesListGroupItem,\r\n} from \"./dataStylesSettingsLists\";\r\n\r\nconst ListUsers = () => {\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (userName: string) => {\r\n    setUserName(userName);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (userName) {\r\n      const userBodyPUTRequest = listUsers?.filter(\r\n        (user: ModelUser) => user?.userName !== userName\r\n      );\r\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\r\n      setIsAlertPrinted(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteUserAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć użytkownika\"}\r\n      />\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={dataStylesListGroupItem}\r\n            style={{\r\n              backgroundColor: user.userColor,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => handleAlert(user.userName)}\r\n              disabled={success.isLoading}\r\n              className={dataStylesButton}\r\n              style={{ color: user.userColor }}\r\n            >\r\n              {user.userName}\r\n\r\n              {userName === user.userName ? (\r\n                btnContent\r\n              ) : (\r\n                <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n              )}\r\n            </Button>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListContainer from \"../../../components/ListContainer\";\r\nimport useReduxListMonths from \"../../../hooks/updateReduxDatabase/useReduxListMonths\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\nimport ListUsers from \"../ListUsers\";\r\n\r\nconst SettinsContent = () => {\r\n  useReduxListMonths();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-white p-2 py-4 p-sm-4 w-100\"\r\n      style={{\r\n        height: \"100%\",\r\n        overflow: \"hidden auto\",\r\n        outline: \"4px solid white\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: \"480px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ListContainer header={\"Zapisane miesiące\"} listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <div className=\"border my-4\"></div>\r\n\r\n        <ListContainer header={\"Zapisani użytkownicy\"} listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettinsContent;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { printPanelContent } from \"../../../utils/printPanelContent\";\r\nimport SettinsContent from \"./SettinsContent\";\r\n\r\nconst useRequestSettings = () => {\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError, listMonthsIsLoading } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let requestState;\r\n\r\n  if (listUsersIsLoading || listMonthsIsLoading) {\r\n    requestState = printPanelContent(\r\n      <Spinner animation=\"border\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (listUsersError) {\r\n    if (\"status\" in listUsersError) {\r\n      const errMsg = \"status\" in listUsersError && listUsersError.status;\r\n\r\n      requestState = printPanelContent(\r\n        <h3 className=\"text-danger mx-auto \">\r\n          <> Błąd: {errMsg}</> <br />\r\n          <>Odśwież stronę</>\r\n        </h3>\r\n      );\r\n    }\r\n  } else if (listMonthsError) {\r\n    if (\"status\" in listMonthsError) {\r\n      const errMsg = \"status\" in listMonthsError && listMonthsError.status;\r\n\r\n      requestState = printPanelContent(\r\n        <h3 className=\"text-danger mx-auto \">\r\n          <> Błąd: {errMsg}</> <br />\r\n          <>Odśwież stronę</>\r\n        </h3>\r\n      );\r\n    }\r\n  } else {\r\n    requestState = <SettinsContent />;\r\n  }\r\n\r\n  return { requestState };\r\n};\r\nexport default useRequestSettings;\r\n","import IndexContainer from \"../../../components/IndexContainer\";\r\nimport useRequestSettings from \"./useRequestSettings\";\r\n\r\nconst IndexSettings = () => {\r\n  const { requestState } = useRequestSettings();\r\n\r\n  return <IndexContainer>{requestState}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const printPanelContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\" d-flex justify-content-center align-items-center fs-3 text-warning text-center\"\r\n    style={{\r\n      maxWidth: \"1000px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);"],"names":["props","windowWidth","useWindowWidth","_jsxs","className","style","height","overflow","position","children","_jsx","width","maxWidth","dispatch","useDispatch","_Fragment","isPrinted","id","onClick","e","_e$target","_e$target2","target","setIsPrinted","printAlert","handleClose","zIndex","backgroundColor","header","includes","Button","action","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","gradientValue","allHours","gradientBackground","concat","inputsValues","map","value","Form","Group","Range","name","min","max","onChange","onBlur","background","_props$calcHours","_props$calcHours2","_props$calcHours3","_props$calcHours4","content","useSelector","state","monthPanel","month","calcHours","submittedHours","acceptedHours","styles","InputsText","inputsData","type","isErrorPrint","yearValue","monthValue","_useURLValues","useURLValues","_useAddAllHoursMutati","yearFromURL","monthFromURL","useAddAllHoursMutation","_useAddAllHoursMutati2","_slicedToArray","addAllHours","success","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","t0","year","_objectSpread","currentHours","stop","_x","apply","arguments","initialValues","_props$monthDate$slic","_props$monthDate","_props$monthDate$slic2","_props$monthDate2","monthDate","slice","useAllHoursQuery","data","_useFormikHours","useFormikHours","btnContent","useHTTPState","AiOutlinePlusCircle","fontSize","Formik","FormHoursTop","InputsRange","FormHoursError","disabled","isLoading","touched","errors","label","placeholder","Label","htmlFor","Control","size","minHeight","FormErrors","reference","ref","database","_useState","useState","_useState2","error","setError","_useState3","_useState4","databaseListMonths","setDatabaseListMonths","useEffect","unsubscribe","onValue","snapshot","keysYears","monthsCollection","forEach","firstLevelSnapshot","firstLevelKey","key","push","nestedKeysRef","nestedSnapshot","keysMonths","nestedKeySnapshot","nestedKey","nestedError","months","monthsInYear","idx","flat","reverse","_useDatabaseListMonth","useDatabaseListMonths","getListMonths","btnText","Spinner","animation","variant","listMonths","databaseMonthsDatesToString","_toConsumableArray","monthToDateFormat","Date","Intl","DateTimeFormat","timeZone","format","monthURL","useLocation","pathname","split","isMonthInURL","test","window","innerWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","_props$listContent","listContent","length","ListGroup","Item","dataStylesListGroupItem","_props$title","_props$title$charAt","_props$title$slice","_props$title2","title","charAt","toLocaleUpperCase","Link","to","ImArrowLeft","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","RiDeleteBin6Line","alert","agree","isAlertPrinted","setIsAlertPrinted","deleteMonthAsync","Alert","setMonthDate","isOpen","MonthTitle","monthDateToString","onToggle","setOpenCollapseIndex","transition","MdOutlineKeyboardArrowDown","transform","transitionDuration","DeleteButton","Collapse","in","useMonthDates","openCollapseIndex","isOpenCollapse","setCollapseOpen","_useState5","_useState6","CollapseInMonth","handleTogle","FormHoursContext","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","listUsers","userName","setUserName","deleteUserAsync","userBodyPUTRequest","filter","user","userColor","handleAlert","color","useReduxListMonths","outline","ListContainer","ListMonths","ListUsers","requestState","_useSelector","listUsersError","listUsersIsLoading","_useSelector2","listMonthsError","listMonthsIsLoading","printPanelContent","errMsg","status","SettinsContent","useRequestSettings","IndexContainer","contentJSX"],"sourceRoot":""}