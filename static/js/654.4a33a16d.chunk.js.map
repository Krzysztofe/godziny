{"version":3,"file":"static/js/654.4a33a16d.chunk.js","mappings":"wOAAA,IAAMA,EAAQ,IAAIC,KAEZC,EAAa,SAACC,GAClB,IAAMC,EAAOD,EAAKE,cACZC,EAAQC,OAAOJ,EAAKK,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOJ,EAAKQ,WAAWF,SAAS,EAAG,KAC/C,MAAM,GAANG,OAAUR,EAAI,KAAAQ,OAAIN,EAAK,KAAAM,OAAIF,EAC7B,EAEMG,EAAqB,IAAIZ,KAAKD,EAAMc,UAAY,SAChDC,EAAqB,IAAId,KAAKD,EAAMc,UAAY,QAEzCE,EAAiBhB,EAAMK,cACvBY,EAAkBV,OAAOP,EAAMQ,WAAa,GAAGC,SAAS,EAAG,KAI3DS,GAHgBX,OAAOP,EAAMW,WAAWF,SAAS,EAAG,KACnCP,EAAWF,GAEbE,EAAWW,IAC1BM,EAAejB,EAAWa,GAI1BK,EAAwB,IAAIC,KAAKC,eAAe,QAAS,CACpElB,KAAM,UACNE,MAAO,OACPiB,SAAU,QACTC,OAAOxB,E,2ECQV,IA7BqB,SAACyB,EAAcC,IAIlCC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAQG,QAAS,CACnB,IAAMC,EAAQJ,EAAQI,MAChBC,EAASD,GAAS,WAAYA,GAASA,EAAME,QAAUF,EAAME,OAEnEC,IAAAA,KAAU,CACRC,MAAM,mBAADrB,OAAWkB,GAAU,IAC1BI,mBAAoB,qBAExB,CACF,GAAG,CAACT,EAAQG,UAEZ,IAAIO,EAAiCT,EAUrC,OARID,EAAQW,YACVD,GACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,UAAU,SAASC,KAAK,KAAKC,QAAQ,YAAWC,UACvDL,EAAAA,EAAAA,KAAA,QAAMM,UAAU,kBAAiBD,SAAC,kBAKjC,CAAEP,WAAAA,EACX,C,6ICrBA,EARqB,WAEf,IAAQS,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,EAAsB,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAUG,MAAM,EAAG,GACjCC,EAAuB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAO,GACxC,MAAO,CAAEH,SAAAA,EAAUE,YAAAA,EAAaE,aAAAA,EACpC,E,2GCsCA,EAvCqB,SAACC,GAAkB,IAADC,EAAAC,EAAAC,EAAAC,EAC/BlD,EAAO,IAAIF,KAAU,OAALgD,QAAK,IAALA,GAAU,QAALC,EAALD,EAAOvC,WAAG,IAAAwC,OAAL,EAALA,EAAY/C,MAE5BmD,EACJnD,GACA,IAAIkB,KAAKC,eAAe,QAAS,CAC/BZ,IAAK,UACLJ,MAAO,UACNkB,OAAOrB,GAKZ,OACEoD,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,oBAAmBD,SAAA,EAChCa,EAAAA,EAAAA,MAAA,OACEZ,UAAU,iCACVa,MAAO,CAAEC,SAAU,8BAA+Bf,SAAA,EAElDL,EAAAA,EAAAA,KAAA,OAAAK,SAAe,QAAfS,EAAMF,EAAMvC,WAAG,IAAAyC,OAAA,EAATA,EAAWO,YACjBH,EAAAA,EAAAA,MAAA,OAAAb,SAAA,CACY,QADZU,EACGH,EAAMvC,WAAG,IAAA0C,OAAA,EAATA,EAAWO,MAAM,KAACtB,EAAAA,EAAAA,KAACuB,EAAAA,IAAO,CAACjB,UAAU,wBAI1CY,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,iCAAgCD,SAAA,EAC7CL,EAAAA,EAAAA,KAAA,OAAAK,SAAMY,GAA4B,MAClCjB,EAAAA,EAAAA,KAAA,OAAAK,SACwB,UAAZ,QAATW,EAAAJ,EAAMvC,WAAG,IAAA2C,OAAA,EAATA,EAAWQ,QACVxB,EAAAA,EAAAA,KAACyB,EAAAA,IAAyB,CAACnB,UAAU,kBAErCN,EAAAA,EAAAA,KAAC0B,EAAAA,IAAS,CAACpB,UAAU,uBAMjC,EC0CA,EArEY,SAACM,GAAkB,IAADC,EAC5Bc,EAAsCC,IAA9BnB,EAAWkB,EAAXlB,YAAaE,EAAYgB,EAAZhB,aACPkB,GAAcC,EAAAA,EAAAA,IAAkB,CAC5C/D,KAAM0C,EACNxC,MAAO0C,IAFDoB,KAKRC,GAA6BC,EAAAA,EAAAA,MAAsBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAASF,EAAA,GAAE9C,EAAO8C,EAAA,GACjBpC,GAAeuC,EAAAA,EAAAA,GAAajD,EAAS,aAArCU,WAEFwC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAaC,GAAU,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjDtD,IAAAA,KAAU,CACRC,MAAO,sCACPsD,kBAAkB,EAClBrD,mBAAoB,UACpBsD,kBAAmB,OACnBC,kBAAmB,MACnBC,iBAAkB,QACjBC,KAAI,eAAAC,GAAAf,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAc,EAAMC,GAAM,IAAAC,EAAAC,EAAAC,EAAA,OAAAnB,EAAAA,EAAAA,KAAAK,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,WACdQ,EAAOK,YAAY,CAADD,EAAAZ,KAAA,QAMnB,OAJKW,EAA8B,OAAT/B,QAAS,IAATA,GAAuB,QAAd6B,EAAT7B,EAAWkC,QAAQnB,UAAI,IAAAc,GAAM,QAANC,EAAvBD,EAAyBM,YAAI,IAAAL,OAApB,EAATA,EAA+BM,QACxD,SAAC5F,GACC,OAAOA,EAAIwE,KAAOA,CACpB,IACDgB,EAAAZ,KAAA,EAGKb,EAAU,CACdrE,KAAM0C,EACNxC,MAAO0C,EACPuD,OAAQtD,EAAMuD,UACdC,SAAUR,IACT,KAAD,mBAAAC,EAAAQ,OAAA,GAAAb,EAAA,KAEL,gBAAAc,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAE,CAAF,CAjBM,IAiBJ,wBAAAzB,EAAAsB,OAAA,GAAA1B,EAAA,KACJ,gBA1BiB8B,EAAAC,GAAA,OAAAnC,EAAAgC,MAAA,KAAAC,UAAA,KA4BlB,OACExE,EAAAA,EAAAA,KAAC2E,EAAAA,GAAS,CACRC,YAAahE,EAAMvC,MAAY,OAALuC,QAAK,IAALA,GAAU,QAALC,EAALD,EAAOvC,WAAG,IAAAwC,OAAL,EAALA,EAAYgC,IACtCgC,MAAOjE,EAAMkE,OACbC,gBAAgB,EAAM1E,SAErB,SAAA2E,GACC,OACE9D,EAAAA,EAAAA,MAAA,OAAA+D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACE3E,UAAU,sBACN0E,EAASE,gBACTF,EAASG,iBAAe,IAC5BC,IAAKJ,EAASK,SAAShF,SAAA,EAEvBL,EAAAA,EAAAA,KAACsF,EAAY,CAACjH,IAAKuC,EAAMvC,OACzB2B,EAAAA,EAAAA,KAACuF,EAAAA,EAAM,CACLnF,QAAQ,OACRD,KAAK,KACLG,UAAU,iCACVkF,QAAS,kBAAMlD,EAAa1B,EAAMuD,UAAWvD,EAAMvC,IAAIwE,GAAG,EAC1D4C,SAAUrG,EAAQW,UAAUM,SAE3BP,OAIT,GAGN,EC7CA,EAhCe,SAACc,GACd,OACEZ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,QAAOD,UACpBL,EAAAA,EAAAA,KAAC0F,EAAAA,GAAS,CAACC,YAAa/E,EAAMgF,OAAO/C,GAAGxC,SACrC,SAAC2E,EAAUa,GACV,OACE3E,EAAAA,EAAAA,MAAA,OAAA+D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMD,EAASc,gBAAc,IAC3BV,IAAKJ,EAASK,SACd/E,UAAU,8BAA6BD,SAAA,CAEtC0F,MAAMC,QAAQpF,EAAMgF,OAAO5B,MACxBpD,EAAMgF,OAAO5B,KAAKiC,KAAI,SAAC5H,EAAUuE,GAC/B,OACE5C,EAAAA,EAAAA,KAACkG,EAAG,CAEF7H,IAAKA,EACL8F,UAAWvD,EAAMuD,UACjBW,OAAQlC,GAHHuD,OAAOC,aAMlB,IACA,GACHpB,EAASqB,eAGhB,KAIR,EC0BA,EAvDsB,WACpB,IAAA1E,EAAsCC,IAA9BnB,EAAWkB,EAAXlB,YAAaE,EAAYgB,EAAZhB,aACP2F,GAAaC,EAAAA,EAAAA,IAAiB,CAC1CxI,KAAM0C,EACNxC,MAAO0C,IAFDoB,KAsBR,OACE/B,EAAAA,EAAAA,KAAAwG,EAAAA,SAAA,CAAAnG,SACG,CACC,CACEoG,WAAY,qBACZC,QAAiB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUK,gBAErB,CACEF,WAAY,aACZC,QAAiB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUM,eAErB,CACEH,WAAY,aACZC,QAAiB,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUO,gBAErBZ,KAAI,SAAA1D,GAA8B,IAA3BkE,EAAUlE,EAAVkE,WAAYC,EAAOnE,EAAPmE,QACnB,OACExF,EAAAA,EAAAA,MAAA,OAEEZ,UAAU,+FACVa,MAAO,CAAEC,SAAU,8BAA+Bf,SAAA,CAEjDoG,EAAW,IAAE,GACbC,IALID,EAQX,KAGN,E,UCjDaK,EAAwB,SAACC,GACpC,OAAKhB,MAAMC,QAAQe,GAGT,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKd,KAAI,SAACe,GACf,OAAQ,OAAHA,QAAG,IAAHA,GAAAA,EAAKC,eAAe,QAGlBD,GAFL/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY+B,GAAG,IAAEhD,KAAM,IAG3B,IAPS,EAQX,ECiBA,EApCqB,WAAO,IAADkD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzB5F,EAAsCC,IAA9BnB,EAAWkB,EAAXlB,YAAaE,EAAYgB,EAAZhB,aACPkB,GAAcC,EAAAA,EAAAA,IAAkB,CAC5C/D,KAAM0C,EACNxC,MAAO0C,IAFDoB,KAKFyF,EAAkBV,EAA+B,OAATjF,QAAS,IAATA,OAAS,EAATA,EAAWkC,SA0BzD,OAxBF0D,QAAQC,IAAI,KAAMF,GAwBT,CAAEG,kBArBP9F,GACA2F,IACkB,QADHN,EACfM,EAAgB,UAAE,IAAAN,GAAM,QAANC,EAAlBD,EAAoBlD,YAAI,IAAAmD,OAAN,EAAlBA,EAA0BS,QAAO,SAACC,EAAaxJ,GAE7C,OAAOwJ,GADkB,OAARxJ,EAAe,EAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKiD,MAE3C,GAAG,IAgBuBwG,iBAb1BjG,GACA2F,IACkB,QADHJ,EACfI,EAAgB,UAAE,IAAAJ,GAAM,QAANC,EAAlBD,EAAoBpD,YAAI,IAAAqD,OAAN,EAAlBA,EAA0BO,QAAO,SAACC,EAAaxJ,GAC7C,OAAOwJ,GAAS,OAAHxJ,QAAG,IAAHA,OAAG,EAAHA,EAAKiD,MACpB,GAAG,IASyCyG,iBAN5ClG,GACA2F,IACkB,QADHF,EACfE,EAAgB,UAAE,IAAAF,GAAM,QAANC,EAAlBD,EAAoBtD,YAAI,IAAAuD,OAAN,EAAlBA,EAA0BK,QAAO,SAACC,EAAaxJ,GAC7C,OAAOwJ,GAAS,OAAHxJ,QAAG,IAAHA,OAAG,EAAHA,EAAKiD,MACpB,GAAG,IAGP,EC6EA,EApGgB,WACd,IAAAK,EAAsCC,IAA9BnB,EAAWkB,EAAXlB,YAAaE,EAAYgB,EAAZhB,aACPkB,GAAcC,EAAAA,EAAAA,IAAkB,CAC5C/D,KAAM0C,EACNxC,MAAO0C,IAFDoB,KAIRiG,GAAwBC,EAAAA,EAAAA,KAAjBC,GAA2C/F,EAAAA,EAAAA,GAAA6F,EAAA,GAA9B,GACpBG,GAAqBC,EAAAA,EAAAA,MAAdC,GAAqClG,EAAAA,EAAAA,GAAAgG,EAAA,GAA3B,GACXX,EAAkBV,EAA+B,OAATjF,QAAS,IAATA,OAAS,EAATA,EAAWkC,SAIzDuE,EACEC,IADMZ,EAAiBW,EAAjBX,kBAAmBG,EAAgBQ,EAAhBR,iBAAkBC,EAAgBO,EAAhBP,iBAG7CS,GAA8BC,EAAAA,EAAAA,UAAgB,IAAGC,GAAAvG,EAAAA,EAAAA,GAAAqG,EAAA,GAA1CzE,EAAO2E,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,GAA8BH,EAAAA,EAAAA,UAAS,MAAKI,GAAA1G,EAAAA,EAAAA,GAAAyG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,IAE1BvJ,EAAAA,EAAAA,YAAU,WACRqJ,EAAWnB,EACb,GAAG,CAAC3F,KAEJvC,EAAAA,EAAAA,YAAU,WACQ,OAAZwJ,GACFZ,EAAc,CACZnK,KAAM0C,EACNxC,MAAO0C,EACPqI,YAAajF,GAGnB,GAAG,CAAC+E,KAEJxJ,EAAAA,EAAAA,YAAU,WAAO,IAAD2J,EACdZ,EAAW,CACTtK,KAAM0C,EACNxC,MAAO0C,EACPuI,UAAQjE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM,OAATpD,QAAS,IAATA,OAAS,EAATA,EAAWsH,MAAI,IAClBC,cACW,OAATvH,QAAS,IAATA,GAAe,QAANoH,EAATpH,EAAWsH,YAAI,IAAAF,OAAN,EAATA,EAAiBC,UACjBvB,EACAG,EACAC,EACAA,EACFpB,eAAgBgB,EAChBf,cAAekB,EACfjB,cAAekB,KAGrB,GAAG,CAAClG,IAIJ,IAOMwH,GAAgBC,EAAAA,EAAAA,QAAO,MAC7BC,GAA0Cd,EAAAA,EAAAA,UAAS,GAAEe,GAAArH,EAAAA,EAAAA,GAAAoH,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAatC,OACExJ,EAAAA,EAAAA,KAAAwG,EAAAA,SAAA,CAAAnG,UACEa,EAAAA,EAAAA,MAAA,QACEkE,IAAKiE,EACLM,SAfe,WACnB,IAAMC,EAAUP,EAAcQ,QAE9B,GAAID,EAAS,CACX,IAAQE,EAA0CF,EAA1CE,UAAWC,EAA+BH,EAA/BG,aAAcC,EAAiBJ,EAAjBI,aAGjCN,EADuBI,GADFC,EAAeC,GACe,IAErD,CACF,EAOM1J,UAAU,0BACVa,MAAO,CAAE8I,IAAI,GAAD1L,OAAKkL,EAAa,MAAMpJ,SAAA,EAEpCL,EAAAA,EAAAA,KAACkK,EAAAA,EAAS,CAAC5J,UAAU,iDAAgDD,UACnEL,EAAAA,EAAAA,KAACmK,EAAa,OAEhBnK,EAAAA,EAAAA,KAACkK,EAAAA,EAAS,CACR5J,UAAU,2CACVa,MAAO,CAAEiJ,OAAQ,eAAgB/J,UAEjCL,EAAAA,EAAAA,KAACqK,EAAAA,GAAe,CAACC,UApCH,SAACxB,IF2BK,SAACA,EAAc/E,EAAc4E,GAIzD,IAAQ4B,EAAwBzB,EAAxByB,OAAQC,EAAgB1B,EAAhB0B,YAEhB,GAAKA,IAEHD,EAAO3F,cAAgB4F,EAAY7E,aACnC4E,EAAO1F,QAAU2F,EAAY3F,OAI/B,GAAI0F,EAAO5E,cAAgB6E,EAAY7E,YAAa,CAAC,IAAD8E,EAC5CC,EAAyB,OAAP3G,QAAO,IAAPA,OAAO,EAAPA,EAAS4G,WAAU,SAAC/E,GAC1C,OAAOA,EAAO/C,KAAO0H,EAAO5E,WAC9B,IAEMiF,EAA8B,OAAP7G,QAAO,IAAPA,OAAO,EAAPA,EAAS4G,WAAU,SAAC/E,GAC/C,OAAOA,EAAO/C,KAAO2H,EAAY7E,WACnC,IAEMkF,EAAgB9G,IAAO+G,EAAAA,EAAAA,GAAgC,QAAhCL,EAAQ1G,EAAQ2G,UAAgB,IAAAD,OAAA,EAAxBA,EAA0BzG,MAEzD+G,EACJR,EAAO5E,cAAgB6E,EAAYQ,YAAUF,EAAAA,EAAAA,GACrC/G,EAAQ6G,GAAsB5G,MAClC6G,EAENI,EAAqBJ,EAAcK,OAAOX,EAAO1F,MAAO,GAAjDsG,GAAmDhJ,EAAAA,EAAAA,GAAA8I,EAAA,GAAzC,GACjBF,EAAmBG,OAAOV,EAAY3F,MAAO,EAAGsG,GAEhD,IAAMC,GAAUN,EAAAA,EAAAA,GAAO/G,GAEvBqH,EAAWV,IAAgBzF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBlB,EAAQ2G,IAAgB,IAC3B1G,KAAM6G,IAGRO,EAAWR,IAAqB3F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3BlB,EAAQ6G,IAAqB,IAChC5G,KAAM+G,IAGRpC,EAAWyC,EACb,KAAO,CACL,IAAMC,EAAgBb,EAAY3F,MAE5B6F,EAAkB3G,EAAQ4G,WAAU,SAAC/E,GACzC,OAAOA,EAAO/C,KAAO0H,EAAO5E,WAC9B,IAEM3B,GAAI8G,EAAAA,EAAAA,GAAO/G,EAAQ2G,GAAiB1G,MAC1CsH,EAAqBtH,EAAKkH,OAAOX,EAAO1F,MAAO,GAAxCsG,GAA0ChJ,EAAAA,EAAAA,GAAAmJ,EAAA,GAAhC,GACjBtH,EAAKkH,OAAOG,EAAe,EAAGF,GAE9B,IAAMI,GAAUT,EAAAA,EAAAA,GAAO/G,GAEvBwH,EAAWb,IAAgBzF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBlB,EAAQ2G,IAAgB,IAC3B1G,KAAMA,IAGR2E,EAAW4C,EACb,CACF,CE3FIC,CAAe1C,EAAS/E,EAAS4E,GACjCI,EAAWD,EACb,EAiCkDzI,SAChC,OAAP0D,QAAO,IAAPA,OAAO,EAAPA,EAASkC,KAAI,SAACL,EAAahD,GAC1B,OAAO5C,EAAAA,EAAAA,KAACyL,EAAM,CAAiB7F,OAAQA,EAAQzB,UAAWvB,GAAtCgD,EAAO/C,GAC7B,YAMZ,E,oBCqBA,EA9G0B,WAA2C,IAAD6I,EAAAC,EAAAC,EHOnC7E,EGPNxG,EAAaiE,UAAAqH,OAAA,QAAAC,IAAAtH,UAAA,GAAAA,UAAA,GAAG,KACzCuH,GAAmCC,EAAAA,EAAAA,SAAmBF,GAA9C/J,EAAIgK,EAAJhK,KAAMvC,EAAKuM,EAALvM,MAAOO,EAASgM,EAAThM,UAIfkM,EAAmBlK,GAAQmK,OAAOC,KAAKpK,GAEvCqK,EACJH,GACAC,OAAOG,OAAOtK,GACXuK,OACArG,KAAI,SAACsG,EAAW3J,GACf,OAAAqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYsH,GAAI,IAAE1J,GAAIoJ,EAAiBrJ,IACzC,IAEE4J,GHRyBzF,EGQmBqF,EHP7CrG,MAAMC,QAAQe,GAIT,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKd,KAAI,SAACe,GAAc,IAADyF,EAKNC,EAAtB,OAJ2B,OAAH1F,QAAG,IAAHA,GAAY,QAATyF,EAAHzF,EAAKjD,eAAO,IAAA0I,OAAT,EAAHA,EAAcE,OAAM,SAAC/G,GAAW,OACtDA,EAAOqB,eAAe,OAAO,KAaxBD,GATL/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK+B,GAAG,IACNjD,QAAY,OAAHiD,QAAG,IAAHA,GAAY,QAAT0F,EAAH1F,EAAKjD,eAAO,IAAA2I,OAAT,EAAHA,EAAczG,KAAI,SAACL,GAAW,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClCW,GAAM,IACT5B,KAAM4B,EAAO5B,MAAQ,IAAE,KAM/B,IAnBS,IGUH4I,EACJ7K,GAAQyK,EAAyBX,OAAS,EACd,OAAxBW,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0BK,MACxB,SAAC5O,GAAU,OAAKA,EAAM6O,YAAcvM,CAAQ,SAE9CuL,EAEAiB,EAAkBhL,IAAqB,OAAb6K,QAAa,IAAbA,OAAa,EAAbA,EAAe7I,SAIzCiJ,EAAmBjL,EAAoB,OAAb6K,QAAa,IAAbA,OAAa,EAAbA,EAAe1D,SAAW,GACpD+D,EAAmBlL,EAAoB,OAAb6K,QAAa,IAAbA,OAAa,EAAbA,EAAexD,aAAe,GACxD8D,EAAwBnL,EAAoB,OAAb6K,QAAa,IAAbA,OAAa,EAAbA,EAAeO,cAAgB,GAC9DC,EAAwBrL,EAAoB,OAAb6K,QAAa,IAAbA,OAAa,EAAbA,EAAehG,cAAgB,GAC9DyG,EAAwBtL,EAAoB,OAAb6K,QAAa,IAAbA,OAAa,EAAbA,EAAe/F,cAAgB,GAI9DyG,EACJvL,GAAQyK,EAAyBX,OAAS,GAAoB,OAAfkB,QAAe,IAAfA,GAAAA,EAAkB,GAAG/I,KACjD,OAAf+I,QAAe,IAAfA,GAAoB,QAALrB,EAAfqB,EAAkB,UAAE,IAAArB,OAAL,EAAfA,EAAsB1H,KAAK4D,QAAO,SAACC,EAAUxJ,GAC3C,OAAOwJ,GAAS,OAAHxJ,QAAG,IAAHA,OAAG,EAAHA,EAAKiD,MACpB,GAAG,GACH,EAEAwG,EACJ/F,GAAQyK,EAAyBX,OAAS,GAAoB,OAAfkB,QAAe,IAAfA,GAAAA,EAAkB,GAAG/I,KACjD,OAAf+I,QAAe,IAAfA,GAAoB,QAALpB,EAAfoB,EAAkB,UAAE,IAAApB,OAAL,EAAfA,EAAsB3H,KAAK4D,QAAO,SAACC,EAAUxJ,GAC3C,OAAOwJ,GAAS,OAAHxJ,QAAG,IAAHA,OAAG,EAAHA,EAAKiD,MACpB,GAAG,GACH,EAEAyG,EACJhG,GAAQyK,EAAyBX,OAAS,GAAoB,OAAfkB,QAAe,IAAfA,GAAAA,EAAkB,GAAG/I,KACjD,OAAf+I,QAAe,IAAfA,GAAoB,QAALnB,EAAfmB,EAAkB,UAAE,IAAAnB,OAAL,EAAfA,EAAsB5H,KAAK4D,QAAO,SAACC,EAAUxJ,GAC3C,OAAOwJ,GAAS,OAAHxJ,QAAG,IAAHA,OAAG,EAAHA,EAAKiD,MACpB,GAAG,GACH,EAGAiM,EACJxL,GAAQyK,EACJA,EAAyBvG,KAAI,SAAAhI,GAAK,OAAIA,EAAM6O,SAAS,IACrD,GAEAU,EAA4BzL,EAC9BwL,EAAoBE,MAAK,SAACC,EAAYC,GACpC,OAAID,EAAQC,GACF,EACCD,EAAQC,EACV,EAEA,CAEX,IACA,GAaJ,MAAO,CACL5L,KAAAA,EACAvC,MAAAA,EACAO,UAAAA,EACAkM,iBAAAA,EACAO,yBAAAA,EACAI,cAAAA,EACAG,gBAAAA,EACAC,iBAAAA,EACAC,iBAAAA,EACAG,sBAAAA,EACAC,sBAAAA,EACAH,sBAAAA,EACApF,iBAAAA,EACAC,iBAAAA,EACAuF,iBAAAA,EACAC,oBAAAA,EACAC,0BAAAA,EAGJ,E,oBClIaI,EAAmBC,EAAAA,GAAW,CACzC3E,SAAU2E,EAAAA,KAEPC,IAAI,IAAK,YACTC,SAAS,8BCkCd,EA5BkC,WAEhC,IAAApM,EAAgDC,IAA9BnB,GAAFkB,EAARpB,SAAqBoB,EAAXlB,aAAaE,EAAYgB,EAAZhB,aAE/BqN,GAA+BC,EAAAA,EAAAA,MAAwBC,GAAA/L,EAAAA,EAAAA,GAAA6L,EAAA,GAAhDG,EAAWD,EAAA,GAAE9O,EAAO8O,EAAA,GAGrBE,GAASC,EAAAA,EAAAA,IAA2B,CACxCC,cAAe,CAAEpF,SAAU,GAC3B0E,iBAAkBA,EAClBW,SAAS,WAAD,IAAAC,GAAAhM,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAc,EAAM6I,GAAM,OAAA5J,EAAAA,EAAAA,KAAAK,MAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OAOK,OAA/BwE,QAAQC,IAAI,GAAG2E,EAAOnD,UAASrF,EAAAZ,KAAA,EAEzBkL,EAAY,CAAEpQ,KAAM0C,EAAaxC,MAAO0C,EAAcuI,UAAWmD,EAAOnD,WAAY,KAAD,mBAAArF,EAAAQ,OAAA,GAAAb,EAAA,KAGpF,gBAAAiB,GAAA,OAAA+J,EAAAjK,MAAA,KAAAC,UAAA,EAZQ,KAeX,MAAO,CAAE4J,OAAAA,EAAQhP,QAAAA,EACnB,ECuCA,EArE4B,WAC1B,IAAQmB,GAAaC,EAAAA,EAAAA,MAAbD,SACA6N,EAAWK,IAAXL,OACRM,EACEC,EAAkBpO,GADZ2M,EAAqBwB,EAArBxB,sBAAuBE,EAAqBsB,EAArBtB,sBAQ/B,OACElM,EAAAA,EAAAA,MAAC0N,EAAAA,EAAI,CAACL,SAAUH,EAAOS,aAAcvO,UAAU,OAAMD,SAAA,EACnDL,EAAAA,EAAAA,KAAC4O,EAAAA,EAAKE,QAAO,CACXC,KAAK,SACLC,KAAK,WACLC,IAAK,EACLnB,IAAK,IACLoB,MAAOd,EAAO/B,OAAOnD,SACrBiG,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfjJ,YAAY,SACZlG,KAAK,KACLG,UAAU,8CACVa,MAAO,CAAEoO,UAAW,EAAGC,OAAQ,UAAWC,MAAO,kBAGnDzP,EAAAA,EAAAA,KAAA,OACEM,UAAU,4CACVa,MAAO,CAAEiJ,OAAQ,UAAW/J,SAE3B6M,EAAwBE,GAAyBgB,EAAO/B,OAAOnD,SAAQ,qDAAA3K,OAElE2O,EAAwBE,EAAqB,KAE/C,MAGNlM,EAAAA,EAAAA,MAAC0N,EAAAA,EAAKc,MAAK,CAACpP,UAAU,uCAAsCD,SAAA,EAC1DL,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWD,SAAC,OAC3BL,EAAAA,EAAAA,KAAC4O,EAAAA,EAAKe,MAAK,CACTX,KAAK,WACLC,IAAK,EACLnB,IAAK,IACLoB,MAAOd,EAAO/B,OAAOnD,SACrBiG,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfhP,UAAU,sCACVa,MAAO,CACLiJ,OAAQ,GACRwF,WAAW,2CAADrR,OAA6C6P,EAAO/B,OAAOnD,SAAQ,mBAAA3K,OAAkB6P,EAAO/B,OAAOnD,SAAQ,4BAGzHlJ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWD,SAAC,YAG7BL,EAAAA,EAAAA,KAACuF,EAAAA,EAAM,CACLwJ,KAAK,SACL3O,QAAQ,OACRD,KAAK,KACLG,UAAU,4DACVD,SAEoB,UAI5B,ECvCA,EA9BiC,WAC/B,IAAAmI,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAvG,EAAAA,EAAAA,GAAAqG,EAAA,GAAhCqH,EAAInH,EAAA,GAAEoH,EAAOpH,EAAA,GAEpB,OACExH,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAnG,SAAA,EACEa,EAAAA,EAAAA,MAACqE,EAAAA,EAAM,CACLC,QAAS,kBAAMsK,GAASD,EAAK,EAC7B,gBAAc,wBACd,gBAAeA,EACfzP,QAAQ,OACRE,UAAU,4EAA2ED,SAAA,CACtF,iCAECL,EAAAA,EAAAA,KAAC+P,EAAAA,IAA0B,CACzBzP,UAAU,iBACVa,MAAO,CACL6O,UAAU,GAADzR,OAAKsR,EAAO,iBAAmB,GAAE,KAC1CI,mBAAoB,eAI1BjQ,EAAAA,EAAAA,KAACkQ,EAAAA,EAAQ,CAACC,GAAIN,EAAKxP,UACjBL,EAAAA,EAAAA,KAAA,OAAKM,UAAU,gCAA+BD,UAC5CL,EAAAA,EAAAA,KAACoQ,EAAoB,UAK/B,ECjBA,EAf4B,WAC1B,IAAQ7P,GAAaC,EAAAA,EAAAA,MAAbD,SACF8P,EAAuB9P,GAAY,IAAI3C,KAAK2C,GAUlD,MAAO,CAAE+P,qBAPPD,GACA,IAAIrR,KAAKC,eAAe,QAAS,CAC/BlB,KAAM,UACNE,MAAO,OACPiB,SAAU,QACTC,OAAOkR,GAGd,EC8BA,EAtCgC,WAE9B,IAAA1O,EAAgDC,IAAxCrB,EAAQoB,EAARpB,SAAUE,EAAWkB,EAAXlB,YAAaE,EAAYgB,EAAZhB,aAC/B+N,EAA+CC,EAAkBpO,GAAvC0M,GAAFyB,EAAhB1B,iBAAkC0B,EAAhBzB,kBAClBqD,EAAyBC,IAAzBD,qBAGMhK,GAAaC,EAAAA,EAAAA,IAAiB,CAC1CxI,KAAM0C,EACNxC,MAAO0C,IAFDoB,KAKR,OACEb,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAnG,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKM,UAAU,uDAAsDD,SAClEiQ,KAGHpP,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,kEAAiED,SAAA,EAC9EL,EAAAA,EAAAA,KAAA,OAAKM,UAAU,uEAAsED,SAClFiQ,KAGHtQ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,iBAAgBD,SAAC,eAChCa,EAAAA,EAAAA,MAAA,OAAKZ,UAAU,OAAMD,SAAA,CACV,OAARiG,QAAQ,IAARA,OAAQ,EAARA,EAAU4C,SAAS,KAAG,KACvBlJ,EAAAA,EAAAA,KAAA,QAAMM,UAAS,GAAA/B,OAAK0O,EAAmB,EAAI,cAAgB,IAAK5M,SACrD,OAARiG,QAAQ,IAARA,OAAQ,EAARA,EAAU8C,mBAGfpJ,EAAAA,EAAAA,KAAA,OAAKM,UAAS,SAAA/B,OAAW0O,EAAmB,EAAI,cAAgB,IAAK5M,SAClE4M,EAAmB,EAAI,OAAS,uBAK3C,EC5BA,EAXyB,WACvB,OACEjN,EAAAA,EAAAA,KAAA,UAAQM,UAAU,OAAMD,UACtBa,EAAAA,EAAAA,MAACgJ,EAAAA,EAAS,CAAC5J,UAAU,mBAAkBD,SAAA,EACrCL,EAAAA,EAAAA,KAACwQ,EAAwB,KACzBxQ,EAAAA,EAAAA,KAACyQ,EAAuB,QAIhC,E,UCoEA,EAxEwB,WACtB,IAQIC,EARJ/O,EAAuCC,IAA9BnB,EAAWkB,EAAXlB,YAAaE,EAAYgB,EAAZhB,aACtBoL,GAAmCC,EAAAA,EAAAA,SAAmBF,GAA9C/J,EAAIgK,EAAJhK,KAAMvC,EAAKuM,EAALvM,MAAOO,EAASgM,EAAThM,UACP8B,GAAcC,EAAAA,EAAAA,IAAkB,CAC5C/D,KAAM0C,EACNxC,MAAO0C,IAFDoB,KAQR,GAAIhC,EACF2Q,GACE1Q,EAAAA,EAAAA,KAAA,QACEM,UAAU,mDACVa,MAAO,CAAEiJ,OAAQ,SAAU/J,UAE3BL,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,UAAU,SAASE,QAAQ,YAAWC,UAC7CL,EAAAA,EAAAA,KAAA,QAAMM,UAAU,kBAAiBD,SAAC,wBAInC,GAAIb,GACT,GAAI,WAAYA,EAAO,CACrB,IAAMC,EAAS,WAAYD,GAASA,EAAME,OAE1C,OACEM,EAAAA,EAAAA,KAAA,QACEM,UAAU,mDACVa,MAAO,CAAEiJ,OAAQ,SAAU/J,UAE3BL,EAAAA,EAAAA,KAAA,MAAIM,UAAU,oBAAmBD,UAC/Ba,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAnG,SAAA,CAAE,oBAAQZ,EAAO,UAIzB,OAyBAiR,EAxBU3O,EAWAF,GAcRX,EAAAA,EAAAA,MAAA,QAAMZ,UAAU,qBAAqBa,MAAO,CAAEiJ,OAAQ,SAAU/J,SAAA,EAC9DL,EAAAA,EAAAA,KAAC2Q,EAAgB,KACjB3Q,EAAAA,EAAAA,KAAC4Q,EAAO,QAdV5Q,EAAAA,EAAAA,KAAA,QACEM,UAAU,+DACVa,MAAO,CAAEiJ,OAAQ,SAAU/J,UAE3Ba,EAAAA,EAAAA,MAAA,MAAIZ,UAAU,iCAAgCD,SAAA,CAAC,+BACrBtB,EAAAA,GAAsB,uDAhBlDiB,EAAAA,EAAAA,KAAA,QACEM,UAAU,+DACVa,MAAO,CAAEiJ,OAAQ,SAAU/J,UAE3BL,EAAAA,EAAAA,KAAA,MAAIM,UAAU,iCAAgCD,SAAC,kGA0BrD,OAAOL,EAAAA,EAAAA,KAAAwG,EAAAA,SAAA,CAAAnG,SAAGqQ,GACZ,C","sources":["data/dataCurrentDates.tsx","hooks/useHTTPState.tsx","hooks/useURLValues.tsx","pages/monthPanel/DayPrintData.tsx","pages/monthPanel/Day.tsx","pages/monthPanel/Column.tsx","pages/monthPanel/headerColumns.tsx/ColumnsHeader.tsx","pages/monthPanel/utils.tsx","pages/monthPanel/colmns/useHoursCalc.tsx","pages/monthPanel/colmns/Columns.tsx","hooks/useDatabaseValues.tsx","pages/monthPanel/monthPanelHeader/formHeaderMonthPanel/validationMonthPanelHeaderForm.tsx","pages/monthPanel/monthPanelHeader/formHeaderMonthPanel/useMonthPanelHeaderFormik.tsx","pages/monthPanel/monthPanelHeader/formHeaderMonthPanel/MonhPanelHeaderForm.tsx","pages/monthPanel/monthPanelHeader/MonthPanelHeaderCollapse.tsx","hooks/useMonthURLToString.tsx","pages/monthPanel/monthPanelHeader/MonthPanelHeaderSummary.tsx","pages/monthPanel/monthPanelHeader/MonthPanelHeader.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx"],"sourcesContent":["const today = new Date();\r\n\r\nconst formatDate = (date: Date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst futureDateIn14Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\r\nconst futureDateIn60Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\r\n\r\nexport const currYearDigits = today.getFullYear();\r\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\r\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\r\nexport const currDateDigits = formatDate(today);\r\n\r\nexport const dateIn14Days = formatDate(futureDateIn14Days);\r\nexport const dateIn60Days = formatDate(futureDateIn60Days);\r\n\r\n\r\n\r\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  timeZone: \"UTC\",\r\n}).format(today);\r\n","import Swal from \"sweetalert2\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ReactNode } from \"react\";\r\n\r\nconst useHTTPState = (success: any, btnText: string | ReactNode) => {\r\n\r\n// console.log('',success.isError)\r\n\r\n  useEffect(() => {\r\n    if (success.isError) {\r\n      const error = success.error;\r\n      const errMsg = error && \"status\" in error && error.status && error.status;\r\n\r\n      Swal.fire({\r\n        title: `Błąd: ${errMsg || \"\"}`,\r\n        confirmButtonColor: \"rgb(31, 180, 255)\",\r\n      });\r\n    }\r\n  }, [success.isError]);\r\n\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n\r\n      const { monthURL } = useParams();\r\n      const yearFromURL = monthURL?.slice(0, 4);\r\n      const monthFromURL = monthURL?.slice(-2);\r\n    return { monthURL, yearFromURL, monthFromURL };\r\n};\r\n\r\nexport default useURLValues;","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport { FiClock } from \"react-icons/fi\";\r\nimport { useParams } from \"react-router-dom\";\r\ninterface Props {\r\n  day: any;\r\n}\r\n\r\nconst DayPrintData = (props: Props) => {\r\n  const date = new Date(props?.day?.date);\r\n\r\n  const dateToPrint =\r\n    date &&\r\n    new Intl.DateTimeFormat(\"pl-PL\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(date);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"px-1 py-2 py-sm-1\">\r\n      <div\r\n        className=\"d-flex justify-content-between\"\r\n        style={{ fontSize: \"clamp(0.8rem, 3.4vw, 1rem)\" }}\r\n      >\r\n        <div>{props.day?.userName}</div>\r\n        <div>\r\n          {props.day?.hours} <FiClock className=\"text-primary\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-between\">\r\n        <div>{dateToPrint ? dateToPrint : \"\"}</div>\r\n        <div>\r\n          {props.day?.place === \"Poza\" ? (\r\n            <TbArrowBigRightLineFilled className=\"text-success\" />\r\n          ) : (\r\n            <MdFactory className=\"text-danger\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayPrintData;\r\n","import { Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Swal from \"sweetalert2\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport {\r\n  useAddDayMutation,\r\n  useDeleteDayMutation,\r\n  useMonthDataQuery,\r\n} from \"../../services/apiSlice\";\r\nimport DayPrintData from \"./DayPrintData\";\r\n\r\ninterface Props {\r\n  day: any;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst Day = (props: Props) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { data: dataMonth } = useMonthDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { btnContent } = useHTTPState(success, \"Usuń\");\r\n\r\n  const handleDelete = async (idx: number, id: string) => {\r\n    Swal.fire({\r\n      title: \"Chcesz usunąć dzień?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Tak\",\r\n      cancelButtonText: \"Nie\",\r\n    }).then(async result => {\r\n      if (result.isConfirmed) {\r\n\r\n        const daysBodyPUTRequest = dataMonth?.columns[idx]?.days?.filter(\r\n          (day: any) => {\r\n            return day.id !== id;\r\n          }\r\n        );\r\n     \r\n\r\n        await deleteDay({\r\n          year: yearFromURL,\r\n          month: monthFromURL,\r\n          colIdx: props.columnIdx,\r\n          daysBody: daysBodyPUTRequest,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {provided => {\r\n        return (\r\n          <div\r\n            className=\"bg-white card mb-2\"\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <DayPrintData day={props.day} />\r\n            <Button\r\n              variant=\"info\"\r\n              size=\"sm\"\r\n              className=\"rounded-top-0 w-100 fw-medium \"\r\n              onClick={() => handleDelete(props.columnIdx, props.day.id)}\r\n              disabled={success.isLoading}\r\n            >\r\n              {btnContent}\r\n            </Button>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport Day from \"./Day\";\r\n\r\ninterface Props {\r\n  column: any;\r\n  columnIdx: number;\r\n}\r\n\r\nconst Column = (props: Props) => {\r\n  return (\r\n    <div className=\"w-100\">\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className=\"p-1 bg-primary-subtle h-100\"\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: any, idx: number) => {\r\n                    return (\r\n                      <Day\r\n                        key={crypto.randomUUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import { useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../../../hooks/useDatabaseValues\";\r\nimport useHoursCalc from \"../colmns/useHoursCalc\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport {\r\n  useCalcDataQuery,\r\n  useMonthDataQuery,\r\n} from \"../../../services/apiSlice\";\r\n\r\nconst ColumnsHeader = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { data: dataCalc } = useCalcDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n  // const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  // useEffect(() => {\r\n  //   const handleResize = () => {\r\n  //     setWindowWidth(window.innerWidth);\r\n  //   };\r\n\r\n  //   window.addEventListener(\"resize\", handleResize);\r\n\r\n  //   return () => {\r\n  //     window.removeEventListener(\"resize\", handleResize);\r\n  //   };\r\n  // }, []);\r\n\r\n  // const displayHeaderContent = windowWidth > 576;\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {[\r\n        {\r\n          headerText: \"Złożone:\",\r\n          counter: dataCalc?.submittedHours,\r\n        },\r\n        {\r\n          headerText: \"Przyznane:\",\r\n          counter: dataCalc?.acceptedHours,\r\n        },\r\n        {\r\n          headerText: \"Odrzucone:\",\r\n          counter: dataCalc?.rejectedHours,\r\n        },\r\n      ].map(({ headerText, counter }) => {\r\n        return (\r\n          <div\r\n            key={headerText}\r\n            className=\"p-1 bg-primary-subtle text-dark-emphasis fw-medium w-100 border-4 border-bottom border-white\"\r\n            style={{ fontSize: \"clamp(0.8rem, 3.4vw, 1rem)\" }}\r\n          >\r\n            {headerText} {\"\"}\r\n            {counter}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColumnsHeader;\r\n","// export const addDaysToEmptyColumns = (arr: any) => {\r\n//   if (!Array.isArray(arr)) {\r\n//     return [];\r\n//   }\r\n//   return arr?.map((obj: any) => {\r\n//     if (!obj?.hasOwnProperty(\"days\")) {\r\n//       return { ...obj, days: [] };\r\n//     }\r\n//     return obj;\r\n//   });\r\n// };\r\n\r\n\r\nexport const addDaysToEmptyColumns = (arr: any) => {\r\n  if (!Array.isArray(arr)) {\r\n    return [];\r\n  }\r\n  return arr?.map((obj: any) => {\r\n    if (!obj?.hasOwnProperty(\"days\")) {\r\n      return { ...obj, days: [] };\r\n    }\r\n    return obj;\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addDaysToColumns = (arr: any[]) => {\r\n  if (!Array.isArray(arr)) {\r\n    return [];\r\n  }\r\n\r\n  return arr?.map((obj: any) => {\r\n    const hasDaysProperty = obj?.columns?.every((column: any) =>\r\n      column.hasOwnProperty(\"days\")\r\n    );\r\n\r\n    if (!hasDaysProperty) {\r\n      return {\r\n        ...obj,\r\n        columns: obj?.columns?.map((column: any) => ({\r\n          ...column,\r\n          days: column.days || [],\r\n        })),\r\n      };\r\n    }\r\n\r\n    return obj;\r\n  });\r\n};\r\n\r\n\r\n// export const addDaysToColumnsvvvvv = (arr: any[]) => {\r\n//   if (!Array.isArray(arr)) {\r\n//     return [];\r\n//   }\r\n\r\n//   return arr?.map((obj: any) => {\r\n//     if (obj?.columns?.map((column:any) => column.hasOwnProperty(\"days\"))) {\r\n//       return {\r\n//         ...obj,\r\n//         columns: obj?.columns?.map((column: any) => {\r\n//           return { ...column, days: [] };\r\n//         }),\r\n//       };\r\n//     }\r\n\r\n//     return obj\r\n//   });\r\n  \r\n// };\r\n\r\n\r\n// export const addDaysToColumns = (data:any) => {\r\n//   for (const key in data) {\r\n//     if (data.hasOwnProperty(key)) {\r\n//       const item = data[key];\r\n//       if (item.columns) {\r\n//         item.columns.forEach((column:any) => {\r\n//           if (!column.hasOwnProperty(\"days\")) {\r\n//             column.days = [];\r\n//           }\r\n//         });\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\nexport const handleDragDrop = (results: any, columns: any, setColumns: any) => {\r\n\r\n\r\n  \r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns?.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns?.findIndex((column: any) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = columns && [...columns[sourceColumnIdx]?.days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n\r\n","import useURLValues from \"../../../hooks/useURLValues\";\r\nimport { useMonthDataQuery } from \"../../../services/apiSlice\";\r\nimport { addDaysToEmptyColumns } from \"../utils\";\r\n\r\nconst useHoursCalc = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { data: dataMonth } = useMonthDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n\r\n  const columnsWithDays = addDaysToEmptyColumns(dataMonth?.columns);\r\n\r\nconsole.log(\"ff\", columnsWithDays);\r\n\r\n  const submittedHoursSum =\r\n    dataMonth &&\r\n    columnsWithDays &&\r\n    columnsWithDays[0]?.days?.reduce((sum: number, day: any) => {\r\n      const dayHours = day === null ? 0 : day?.hours;\r\n      return sum + dayHours;\r\n    }, 0);\r\n\r\n  const acceptedHoursSum =\r\n    dataMonth &&\r\n    columnsWithDays &&\r\n    columnsWithDays[1]?.days?.reduce((sum: number, day: any) => {\r\n      return sum + day?.hours;\r\n    }, 0);\r\n\r\n  const rejectedHoursSum =\r\n    dataMonth &&\r\n    columnsWithDays &&\r\n    columnsWithDays[2]?.days?.reduce((sum: number, day: any) => {\r\n      return sum + day?.hours;\r\n    }, 0);\r\n\r\n  return { submittedHoursSum, acceptedHoursSum, rejectedHoursSum };\r\n};\r\n\r\nexport default useHoursCalc;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport {\r\n  useMonthDataQuery,\r\n  useUpdateCalcMutation,\r\n  useUpdateColumnsMutation,\r\n  useUpdateMonthMutation,\r\n} from \"../../../services/apiSlice\";\r\nimport Column from \"../Column\";\r\nimport ColumnsHeader from \"../headerColumns.tsx/ColumnsHeader\";\r\nimport { addDaysToEmptyColumns, handleDragDrop } from \"../utils\";\r\nimport useHoursCalc from \"./useHoursCalc\";\r\n\r\nconst Columns = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { data: dataMonth } = useMonthDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n  const [updateColumns] = useUpdateColumnsMutation();\r\n  const [updateCalc] = useUpdateCalcMutation();\r\n  const columnsWithDays = addDaysToEmptyColumns(dataMonth?.columns);\r\n\r\n  // console.log(\"eee\", columnsWithDays);\r\n\r\n  const { submittedHoursSum, acceptedHoursSum, rejectedHoursSum } =\r\n    useHoursCalc();\r\n\r\n  const [columns, setColumns] = useState<any[]>([]);\r\n  const [results, setResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setColumns(columnsWithDays);\r\n  }, [dataMonth]);\r\n\r\n  useEffect(() => {\r\n    if (results !== null) {\r\n      updateColumns({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        columnsBody: columns,\r\n      });\r\n    }\r\n  }, [results]);\r\n\r\n  useEffect(() => {\r\n    updateCalc({\r\n      year: yearFromURL,\r\n      month: monthFromURL,\r\n      allHours: {\r\n        ...dataMonth?.calc,\r\n        currentHours:\r\n          dataMonth?.calc?.allHours -\r\n          submittedHoursSum -\r\n          acceptedHoursSum -\r\n          rejectedHoursSum +\r\n          rejectedHoursSum,\r\n        submittedHours: submittedHoursSum,\r\n        acceptedHours: acceptedHoursSum,\r\n        rejectedHours: rejectedHoursSum,\r\n      },\r\n    });\r\n  }, [dataMonth]);\r\n\r\n  // console.log('',)\r\n\r\n  const handleDragEnd = (results: any) => {\r\n    handleDragDrop(results, columns, setColumns);\r\n    setResults(results);\r\n  };\r\n\r\n  // console.log(\"\", dataMonth);\r\n\r\n  const scrollableRef = useRef(null);\r\n  const [thumbPosition, setThumbPosition] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const element = scrollableRef.current;\r\n\r\n    if (element) {\r\n      const { scrollTop, scrollHeight, clientHeight } = element;\r\n      const maxScrollTop = scrollHeight - clientHeight;\r\n      const thumbPosition = (scrollTop / maxScrollTop) * 100;\r\n      setThumbPosition(thumbPosition);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main\r\n        ref={scrollableRef}\r\n        onScroll={handleScroll}\r\n        className=\"mb-2 overflow-y-scroll \"\r\n        style={{ top: `${thumbPosition}%` }}\r\n      >\r\n        <Container className=\"mx-0 ms-sm-auto sticky-top d-flex column-gap-2\">\r\n          <ColumnsHeader />\r\n        </Container>\r\n        <Container\r\n          className=\"mx-0 ms-sm-auto mb-5 d-flex column-gap-2\"\r\n          style={{ height: \"fit-content\" }}\r\n        >\r\n          <DragDropContext onDragEnd={handleDragEnd}>\r\n            {columns?.map((column: any, idx: number) => {\r\n              return <Column key={column.id} column={column} columnIdx={idx} />;\r\n            })}\r\n          </DragDropContext>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Columns;\r\n","import { useMonthsDataQuery } from \"../services/apiSlice\";\r\nimport { addDaysToColumns } from \"../pages/monthPanel/utils\";\r\n\r\ninterface DatabaseValues {\r\n  data: any;\r\n  error?: {};\r\n  isLoading: boolean;\r\n  databaseMonthsId: any;\r\n  databaseMonthsCollection: any[];\r\n  databaseMonth: any;\r\n  databaseColumns: any;\r\n  databaseAllHours: any;\r\n  dataCurrentHours: any;\r\n  databaseAcceptedHours: any;\r\n  databaseRejectedHours: any;\r\n  dataBaseSubmitedHours: any;\r\n  acceptedHoursSum: any;\r\n  rejectedHoursSum: any;\r\n  submitedHoursSum: any;\r\n  databaseMonthsDates: string[];\r\n  databaseMonthsDatesSorted: any;\r\n  // databaseMonthsDatesToString: string[];\r\n}\r\n\r\nconst useDatabaseValues = (monthURL: any = null): DatabaseValues => {\r\n  const { data, error, isLoading } = useMonthsDataQuery(undefined);\r\n\r\n// console.log('',data)\r\n\r\n  const databaseMonthsId = data && Object.keys(data);\r\n\r\n  const databaseMonthsWithId =\r\n    databaseMonthsId &&\r\n    Object.values(data)\r\n      .flat()\r\n      .map((item: any, idx) => {\r\n        return { ...item, id: databaseMonthsId[idx] };\r\n      });\r\n\r\n  const databaseMonthsCollection = addDaysToColumns(databaseMonthsWithId);\r\n\r\n\r\n\r\n  const databaseMonth =\r\n    data && databaseMonthsCollection.length > 0\r\n      ? databaseMonthsCollection?.find(\r\n          (month: any) => month.monthDate === monthURL\r\n        )\r\n      : undefined;\r\n\r\n  const databaseColumns = data && databaseMonth?.columns;\r\n\r\n  // hours values\r\n\r\n  const databaseAllHours = data ? databaseMonth?.allHours : \"\";\r\n  const dataCurrentHours = data ? databaseMonth?.currentHours : \"\";\r\n  const dataBaseSubmitedHours = data ? databaseMonth?.submitedHours : \"\";\r\n  const databaseAcceptedHours = data ? databaseMonth?.acceptedHours : \"\";\r\n  const databaseRejectedHours = data ? databaseMonth?.rejectedHours : \"\";\r\n\r\n  // hours sums\r\n\r\n  const submitedHoursSum =\r\n    data && databaseMonthsCollection.length > 0 && databaseColumns?.[0].days\r\n      ? databaseColumns?.[0]?.days.reduce((sum: any, day: any) => {\r\n          return sum + day?.hours;\r\n        }, 0)\r\n      : 0;\r\n\r\n  const acceptedHoursSum =\r\n    data && databaseMonthsCollection.length > 0 && databaseColumns?.[0].days\r\n      ? databaseColumns?.[1]?.days.reduce((sum: any, day: any) => {\r\n          return sum + day?.hours;\r\n        }, 0)\r\n      : 0;\r\n\r\n  const rejectedHoursSum =\r\n    data && databaseMonthsCollection.length > 0 && databaseColumns?.[0].days\r\n      ? databaseColumns?.[2]?.days.reduce((sum: any, day: any) => {\r\n          return sum + day?.hours;\r\n        }, 0)\r\n      : 0;\r\n\r\n  // dates transformation\r\n  const databaseMonthsDates =\r\n    data && databaseMonthsCollection\r\n      ? databaseMonthsCollection.map(month => month.monthDate)\r\n      : [];\r\n\r\n  const databaseMonthsDatesSorted = data\r\n    ? databaseMonthsDates.sort((date1: any, date2: any) => {\r\n        if (date1 < date2) {\r\n          return -1;\r\n        } else if (date1 > date2) {\r\n          return 1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })\r\n    : [];\r\n\r\n  // const databaseMonthsDatesToString = databaseMonthsDatesSorted.map(\r\n  //   (monthDate: any) => {\r\n  //     const monthToDateFormat = new Date(monthDate);\r\n  //     return new Intl.DateTimeFormat(\"pl-PL\", {\r\n  //       year: \"numeric\",\r\n  //       month: \"long\",\r\n  //       timeZone: \"UTC\",\r\n  //     }).format(monthToDateFormat);\r\n  //   }\r\n  // );\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    isLoading,\r\n    databaseMonthsId,\r\n    databaseMonthsCollection,\r\n    databaseMonth,\r\n    databaseColumns,\r\n    databaseAllHours,\r\n    dataCurrentHours,\r\n    databaseAcceptedHours,\r\n    databaseRejectedHours,\r\n    dataBaseSubmitedHours,\r\n    acceptedHoursSum,\r\n    rejectedHoursSum,\r\n    submitedHoursSum,\r\n    databaseMonthsDates,\r\n    databaseMonthsDatesSorted,\r\n    // databaseMonthsDatesToString,\r\n  };\r\n};\r\n\r\nexport default useDatabaseValues;\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchema = yup.object({\r\n  allHours: yup\r\n    .number()\r\n    .max(320, \"Max. 320\")\r\n    .required(\"Podaj liczbę godzin\"),\r\n});\r\n","import { useFormik } from \"formik\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../../../../hooks/useDatabaseValues\";\r\n\r\nimport { validationSchema } from \"./validationMonthPanelHeaderForm\";\r\nimport useURLValues from \"../../../../hooks/useURLValues\";\r\nimport { useAddAllHoursMutation } from \"../../../../services/apiSlice\";\r\n\r\ninterface ModelFormValues {\r\n  allHours: number;\r\n}\r\n\r\nconst useMonthPanelHeaderFormik = () => {\r\n \r\n  const { monthURL, yearFromURL, monthFromURL } = useURLValues();\r\n\r\n  const [addAllHours, success] = useAddAllHoursMutation()\r\n  \r\n\r\n  const formik = useFormik<ModelFormValues>({\r\n    initialValues: { allHours: 0 },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async values => {\r\n      // if (\r\n      //   dataBaseSubmitedHours + databaseAcceptedHours >\r\n      //   +formik.values.allHours\r\n      // )\r\n      //   return;\r\n\r\nconsole.log('',values.allHours)\r\n\r\nawait addAllHours({ year: yearFromURL, month: monthFromURL, allHours: +values.allHours });\r\n\r\n   \r\n    },\r\n  });\r\n\r\n  return { formik, success};\r\n};\r\n\r\nexport default useMonthPanelHeaderFormik;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../../../../hooks/useDatabaseValues\";\r\nimport useHTTPState from \"../../../../hooks/useHTTPState\";\r\nimport \"./_formHeaderMonthPAnel.scss\";\r\nimport useMonthPanelHeaderFormik from \"./useMonthPanelHeaderFormik\";\r\n\r\nconst MonhPanelHeaderForm = () => {\r\n  const { monthURL } = useParams();\r\n  const { formik } = useMonthPanelHeaderFormik();\r\n  const { dataBaseSubmitedHours, databaseAcceptedHours } =\r\n    useDatabaseValues(monthURL);\r\n\r\n\r\n  // const { btnContent } = useHTTPState(success, \"Zapisz liczbę godzin\");\r\n\r\n \r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} className=\"my-2\">\r\n      <Form.Control\r\n        type=\"number\"\r\n        name=\"allHours\"\r\n        min={0}\r\n        max={320}\r\n        value={formik.values.allHours}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        placeholder=\"Liczba\"\r\n        size=\"sm\"\r\n        className=\"p-0 px-1 mx-auto mb-2 border border-primary\"\r\n        style={{ minHeight: 0, cursor: \"pointer\", width: \"fit-content\" }}\r\n      />\r\n\r\n      <div\r\n        className=\"text-danger d-block mt-0 fs-8 text-center\"\r\n        style={{ height: \"0.7rem\" }}\r\n      >\r\n        {dataBaseSubmitedHours + databaseAcceptedHours > +formik.values.allHours\r\n          ? `Podaj ilość godzin większą od ${\r\n              dataBaseSubmitedHours + databaseAcceptedHours\r\n            } `\r\n          : \"\"}\r\n      </div>\r\n\r\n      <Form.Group className=\"mt-2 d-flex align-items-center w-100\">\r\n        <div className=\"fw-medium\">0</div>\r\n        <Form.Range\r\n          name=\"allHours\"\r\n          min={0}\r\n          max={320}\r\n          value={formik.values.allHours}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          className=\"form-range custom-range mx-2 medium\"\r\n          style={{\r\n            height: 10,\r\n            background: `linear-gradient(to right, olive 0%, red ${formik.values.allHours}%, transparent ${formik.values.allHours}%, transparent 100%)`,\r\n          }}\r\n        />\r\n        <div className=\"fw-medium\">320</div>\r\n      </Form.Group>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"info\"\r\n        size=\"sm\"\r\n        className=\"fw-medium d-block mx-auto mt-2 col-sm-4 col-md-3 col-lg-2\"\r\n        // disabled={success.isLoading}\r\n      >\r\n        {/* {btnContent} */} yo\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MonhPanelHeaderForm;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport MonthPanelHeaderForm from \"./formHeaderMonthPanel/MonhPanelHeaderForm\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\n\r\nconst MonthPanelHeaderCollapse = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n        variant=\"info\"\r\n        className=\"fw-medium p-1 w-100 mt-1 d-flex justify-content-center align-items-center\"\r\n      >\r\n        Liczba godzin w miesiącu\r\n        <MdOutlineKeyboardArrowDown\r\n          className=\"fs-1 fw-medium\"\r\n          style={{\r\n            transform: `${open ? \"rotate(180deg)\" : \"\"} `,\r\n            transitionDuration: \"320ms\",\r\n          }}\r\n        />\r\n      </Button>\r\n      <Collapse in={open}>\r\n        <div className=\"bg-primary-subtle rounded p-1\">\r\n          <MonthPanelHeaderForm />\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelHeaderCollapse;\r\n","import { useParams } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { monthURL } = useParams();\r\n  const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n\r\n  const monthURLStringFormat =\r\n    monthURLToDateFormat &&\r\n    new Intl.DateTimeFormat(\"pl-PL\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      timeZone: \"UTC\",\r\n    }).format(monthURLToDateFormat);\r\n\r\n  return { monthURLStringFormat };\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport useDatabaseValues from \"../../../hooks/useDatabaseValues\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useCalcDataQuery } from \"../../../services/apiSlice\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport useHoursCalc from \"../colmns/useHoursCalc\";\r\n\r\nconst MonthPanelHeaderSummary = () => {\r\n  // const { monthURL } = useParams();\r\n  const { monthURL, yearFromURL, monthFromURL } = useURLValues();\r\n  const { databaseAllHours, dataCurrentHours } = useDatabaseValues(monthURL);\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n\r\n  const { data: dataCalc } = useCalcDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-capitalize fw-medium mt-2 text-center d-sm-none\">\r\n        {monthURLStringFormat}\r\n      </div>\r\n\r\n      <div className=\" d-flex justify-content-center my-2 fw-medium position-relative\">\r\n        <div className=\"text-capitalize fw-medium d-none d-sm-block  position-absolute end-0\">\r\n          {monthURLStringFormat}\r\n        </div>\r\n\r\n        <div className=\"col-3 text-end\">Wszystkie</div>\r\n        <div className=\"mx-2\">\r\n          {dataCalc?.allHours} -{\" \"}\r\n          <span className={`${dataCurrentHours < 0 ? \"text-danger\" : \"\"}`}>\r\n            {dataCalc?.currentHours}\r\n          </span>\r\n        </div>\r\n        <div className={`col-3 ${dataCurrentHours < 0 ? \"text-danger\" : \"\"}`}>\r\n          {dataCurrentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelHeaderSummary;\r\n","import Container from \"react-bootstrap/Container\";\r\nimport MonthPanelHeaderCollapse from \"./MonthPanelHeaderCollapse\";\r\nimport MonthPanelHeaderSummary from \"./MonthPanelHeaderSummary\";\r\n\r\nconst MonthPanelHeader = () => {\r\n  return (\r\n    <header className=\"me-3\">\r\n      <Container className=\"mx-0 ms-sm-auto \">\r\n        <MonthPanelHeaderCollapse />\r\n        <MonthPanelHeaderSummary />\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MonthPanelHeader;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Columns from \"../colmns/Columns\";\r\nimport MonthPanelHeader from \"../monthPanelHeader/MonthPanelHeader\";\r\nimport useDatabaseValues from \"../../../hooks/useDatabaseValues\";\r\nimport { currMonthDateToString } from \"../../../data/dataCurrentDates\";\r\nimport { useMonthDataQuery, useMonthsDataQuery } from \"../../../services/apiSlice\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  const {  yearFromURL, monthFromURL } = useURLValues();\r\n  const { data, error, isLoading } = useMonthsDataQuery(undefined);\r\n  const { data: dataMonth } = useMonthDataQuery({\r\n    year: yearFromURL,\r\n    month: monthFromURL,\r\n  });\r\n  \r\n\r\n  let panelContent;\r\n\r\n  if (isLoading) {\r\n    panelContent = (\r\n      <main\r\n        className=\"d-flex justify-content-center align-items-center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <Spinner animation=\"border\" variant=\"secondary\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      </main>\r\n    );\r\n  } else if (error) {\r\n    if (\"status\" in error) {\r\n      const errMsg = \"status\" in error && error.status;\r\n\r\n      return (\r\n        <main\r\n          className=\"d-flex justify-content-center align-items-center\"\r\n          style={{ height: \"100vh\" }}\r\n        >\r\n          <h3 className=\"text-danger col-5\">\r\n            <> Błąd: {errMsg} </>\r\n          </h3>\r\n        </main>\r\n      );\r\n    }\r\n  } else if (!data) {\r\n    panelContent = (\r\n      <main\r\n        className=\"d-flex justify-content-center align-items-center text-center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <h5 className=\"text-warning text-center col-5\">\r\n          Brak  miesięcy zapisanych w bazie danych. Dodaj miesiąc za pomocą formularza\r\n        </h5>\r\n      </main>\r\n    );\r\n  } else if (!dataMonth) {\r\n    panelContent = (\r\n      <main\r\n        className=\"d-flex justify-content-center align-items-center text-center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <h3 className=\"text-warning text-center col-5\">\r\n          Brak danych z miesiąca {currMonthDateToString}. Dodaj miesiąc za pomocą\r\n          formularza\r\n        </h3>\r\n      </main>\r\n    );\r\n  } else {\r\n    panelContent = (\r\n      <main className=\"d-flex flex-column\" style={{ height: \"100vh\" }}>\r\n        <MonthPanelHeader />\r\n        <Columns />\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return <>{panelContent}</>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n"],"names":["today","Date","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","futureDateIn14Days","getTime","futureDateIn60Days","currYearDigits","currMonthDigits","dateIn14Days","dateIn60Days","currMonthDateToString","Intl","DateTimeFormat","timeZone","format","success","btnText","useEffect","isError","error","errMsg","status","Swal","title","confirmButtonColor","btnContent","isLoading","_jsx","Spinner","animation","size","variant","children","className","monthURL","useParams","yearFromURL","slice","monthFromURL","props","_props$day","_props$day2","_props$day3","_props$day4","dateToPrint","_jsxs","style","fontSize","userName","hours","FiClock","place","TbArrowBigRightLineFilled","MdFactory","_useURLValues","useURLValues","dataMonth","useMonthDataQuery","data","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","_slicedToArray","deleteDay","useHTTPState","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","idx","id","wrap","_context2","prev","next","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText","then","_ref2","_callee","result","_dataMonth$columns$id","_dataMonth$columns$id2","daysBodyPUTRequest","_context","isConfirmed","columns","days","filter","colIdx","columnIdx","daysBody","stop","_x3","apply","arguments","_x","_x2","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","_objectSpread","draggableProps","dragHandleProps","ref","innerRef","DayPrintData","Button","onClick","disabled","Droppable","droppableId","column","snapshot","droppableProps","Array","isArray","map","Day","crypto","randomUUID","placeholder","dataCalc","useCalcDataQuery","_Fragment","headerText","counter","submittedHours","acceptedHours","rejectedHours","addDaysToEmptyColumns","arr","obj","hasOwnProperty","_columnsWithDays$","_columnsWithDays$$day","_columnsWithDays$2","_columnsWithDays$2$da","_columnsWithDays$3","_columnsWithDays$3$da","columnsWithDays","console","log","submittedHoursSum","reduce","sum","acceptedHoursSum","rejectedHoursSum","_useUpdateColumnsMuta","useUpdateColumnsMutation","updateColumns","_useUpdateCalcMutatio","useUpdateCalcMutation","updateCalc","_useHoursCalc","useHoursCalc","_useState","useState","_useState2","setColumns","_useState3","_useState4","results","setResults","columnsBody","_dataMonth$calc","allHours","calc","currentHours","scrollableRef","useRef","_useState5","_useState6","thumbPosition","setThumbPosition","onScroll","element","current","scrollTop","scrollHeight","clientHeight","top","Container","ColumnsHeader","height","DragDropContext","onDragEnd","source","destination","_columns$sourceColumn","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","_toConsumableArray","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","Column","_databaseColumns$","_databaseColumns$2","_databaseColumns$3","length","undefined","_useMonthsDataQuery","useMonthsDataQuery","databaseMonthsId","Object","keys","databaseMonthsWithId","values","flat","item","databaseMonthsCollection","_obj$columns","_obj$columns2","every","databaseMonth","find","monthDate","databaseColumns","databaseAllHours","dataCurrentHours","dataBaseSubmitedHours","submitedHours","databaseAcceptedHours","databaseRejectedHours","submitedHoursSum","databaseMonthsDates","databaseMonthsDatesSorted","sort","date1","date2","validationSchema","yup","max","required","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","formik","useFormik","initialValues","onSubmit","_onSubmit","useMonthPanelHeaderFormik","_useDatabaseValues","useDatabaseValues","Form","handleSubmit","Control","type","name","min","value","onChange","handleChange","onBlur","handleBlur","minHeight","cursor","width","Group","Range","background","open","setOpen","MdOutlineKeyboardArrowDown","transform","transitionDuration","Collapse","in","MonthPanelHeaderForm","monthURLToDateFormat","monthURLStringFormat","useMonthURLToString","MonthPanelHeaderCollapse","MonthPanelHeaderSummary","panelContent","MonthPanelHeader","Columns"],"sourceRoot":""}