{"version":3,"file":"static/js/27.104dae40.chunk.js","mappings":"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","sources":["components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/IndexContainer.tsx","components/alert/Alert.tsx","hooks/useHTTPState.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx","hooks/updateReduxDatabase/useReduxMonthData.tsx","components/HoursSummary.tsx","pages/monthPanel/MonthPanelDayPrintData.tsx","pages/monthPanel/monthPanelDay/utilsMonthPanelDay.tsx","pages/monthPanel/monthPanelDay/MonthPanelDay.tsx","pages/monthPanel/MonthPanelColumn.tsx","pages/monthPanel/columnsHeaderCounter/ColumnsHeaderCounter.tsx","pages/monthPanel/monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader.tsx","pages/monthPanel/monthPanelColmns/useScrollThumbPosition.tsx","utils/getHoursFromColumns.tsx","pages/monthPanel/monthPanelColmns/MonthPanelColumns.tsx","pages/monthPanel/monthPanelColmns/utilsMonthPanelColumns.tsx","pages/monthPanel/indexMonthPanel/MonthPanelContent.tsx","pages/monthPanel/indexMonthPanel/useRequestMonthPanel.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","utils/printPanelContent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown\">\r\n            Wylogowanie nastąpi za\r\n            <div\r\n             className=\"d-flex mx-auto w-fit-content\"\r\n            >\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\nimport AutoLogout from \"./autoLogout/AutoLogout\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(9);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return { monthURLStringFormat };\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return { monthURLStringFormat };\r\n  }\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useMonthDataQuery } from \"../../services/apiSliceMonths\";\r\nimport useURLValues from \"../useURLValues\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useReduxMonthData = () => {\r\n  const dispatch = useDispatch();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  const year = isMonthInURL ? yearFromURL : \"\";\r\n  const month = isMonthInURL ? monthFromURL : \"\";\r\n\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year,\r\n    month\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n   \r\n    dispatch(getMonth(data));\r\n\r\n    dispatch(getMonthError(error));\r\n\r\n    dispatch(getMonthIsLoading(isLoading));\r\n    \r\n  }, [data, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxMonthData;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst HoursSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n\r\n  return (\r\n    <div className=\"d-flex mx-auto fw-medium pb-2 w-fit-content\">\r\n      <div>Wszystkie {month?.calcHours?.allHours}&nbsp;-&nbsp;</div>\r\n\r\n      <div\r\n        className={`${\r\n          month && month?.calcHours?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n        }`}\r\n      >\r\n        {month && month?.calcHours?.currentHours} {\"\"}\r\n        {month && month?.calcHours?.currentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursSummary;\r\n","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n}\r\n\r\nconst MonthPanelDayPrintData = (props: Props) => {\r\n  let dateToPrint;\r\n\r\n  if (!props?.day?.date) {\r\n    return <div>Brak danych</div>;\r\n  } else {\r\n    const date = new Date(props.day.date);\r\n    dateToPrint = new Intl.DateTimeFormat(\"pl-PL\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(date);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between fs-7 \">\r\n          <div>{props.day?.userName}</div>\r\n\r\n          <div>\r\n            {props.day?.place === \"Poza\" ? (\r\n              <TbArrowBigRightLineFilled style={{ color: \"rgb(80,173,150)\" }} />\r\n            ) : (\r\n              <MdFactory style={{ color: \"rgb(255, 181, 9)\" }} />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex fw-medium justify-content-between\">\r\n          <div>{dateToPrint ? dateToPrint : \"\"}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MonthPanelDayPrintData;\r\n","import { ModelMonth } from \"../../../sharedModels/modelMonth\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const deleteDayById = (obj: ModelMonth, idToDelete: string) => {\r\n  const updatedColumns = obj.columns.map((column: ModelColumn) => {\r\n    const updatedDays = column?.days?.filter(day => day.id !== idToDelete);\r\n    return { ...column, days: updatedDays };\r\n  });\r\n  return { ...obj, columns: updatedColumns };\r\n};\r\n\r\nexport const calculateUpdatedCalcHours = (\r\n  month: ModelMonth | null,\r\n  columnIdx: number,\r\n  subtractedHours: number | undefined\r\n) => {\r\n  if (!month || !month.calcHours) {\r\n     return {\r\n       currentHours: 0,\r\n       submittedHours: 0,\r\n       acceptedHours: 0,\r\n       rejectedHours: 0,\r\n       allHours: 0,\r\n     };\r\n  }\r\n\r\n  const { calcHours } = month;\r\n\r\n  return {\r\n    ...calcHours,\r\n    currentHours:\r\n      columnIdx !== 2 && subtractedHours\r\n        ? calcHours.currentHours + subtractedHours\r\n        : calcHours.currentHours,\r\n    submittedHours:\r\n      columnIdx === 0 && subtractedHours\r\n        ? calcHours.submittedHours - subtractedHours\r\n        : calcHours.submittedHours,\r\n    acceptedHours:\r\n      columnIdx === 1 && subtractedHours\r\n        ? calcHours.acceptedHours - subtractedHours\r\n        : calcHours.acceptedHours,\r\n    rejectedHours:\r\n      columnIdx === 2 && subtractedHours\r\n        ? calcHours.rejectedHours - subtractedHours\r\n        : calcHours.rejectedHours,\r\n  };\r\n};","import { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useDeleteDayMutation } from \"../../../services/apiSliceMonths\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport MonthPanelDayPrintData from \"../MonthPanelDayPrintData\";\r\nimport { calculateUpdatedCalcHours, deleteDayById } from \"./utilsMonthPanelDay\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst MonthPanelDay = (props: Props) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger\" />\r\n  );\r\n\r\n  const [columnIdx, setColumnIdx] = useState(\"\");\r\n  const [dayId, setDayId] = useState(\"\");\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const findDay = {\r\n    ...month?.columns[props.columnIdx].days?.find(day => {\r\n      return day?.id === props.day.id;\r\n    }),\r\n  };\r\n\r\n  const handleAlert = (idx: string, id: string) => {\r\n    setColumnIdx(idx);\r\n    setDayId(id);\r\n\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteDayAsync = async () => {\r\n    if (findDay?.id === dayId) {\r\n      const subtractedHours = findDay?.hours;\r\n\r\n      month &&\r\n        (await deleteDay({\r\n          year: yearFromURL,\r\n          month: monthFromURL,\r\n          colIdx: props.columnIdx,\r\n          monthBody: {\r\n            ...month,\r\n            calcHours: calculateUpdatedCalcHours(\r\n              month,\r\n              +columnIdx,\r\n              subtractedHours\r\n            ),\r\n\r\n            columns: deleteDayById({ ...month }, dayId).columns,\r\n          },\r\n        }));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white rounded border ${\r\n              snapshot.isDragging ? \"border-dark\" : \"border-dark-subtle\"\r\n            } `}\r\n          >\r\n            <Alert\r\n              action={deleteDayAsync}\r\n              isPrinted={isAlertPrinted}\r\n              setIsPrinted={setIsAlertPrinted}\r\n              header={\"Usunąć dzień?\"}\r\n            />\r\n            <div\r\n              className=\"px-1 py-2 py-sm-1 rounded\"\r\n              style={{\r\n                borderTop: `8px solid ${props.day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.8 : 1,\r\n              }}\r\n            >\r\n              <MonthPanelDayPrintData day={props.day} />\r\n\r\n              <Button\r\n                onClick={() =>\r\n                  handleAlert(props.columnIdx.toString(), props.day.id)\r\n                }\r\n                className=\"d-flex justify-content-between  align-items-center w-100 p-0 bg-transparent border-0 fw-medium text-dark\"\r\n                disabled={success.isLoading}\r\n              >\r\n                <div>{props.day?.hours} h</div>\r\n                <div>{btnContent}</div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default MonthPanelDay;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport MonthPanelDay from \"./monthPanelDay/MonthPanelDay\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { ModelColumn } from \"../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ninterface Props {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n}\r\n\r\nconst MonthPanelColumn = (props: Props) => {\r\n  return (\r\n    <div style={{ width: \"33%\" }}>\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={`p-1 h-100 overflow-hidden border border-1 border border-top-0`}\r\n              style={{\r\n                backgroundColor: snapshot.isDraggingOver\r\n                  ? \"rgba(0, 0, 0, 0.1)\"\r\n                  : \"rgba(255, 255, 255, 0.2)\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <MonthPanelDay\r\n                        key={UUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumn;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_columnsHeaderCounter.scss\";\r\n\r\ntype Props = {\r\n  counter: any;\r\n  text: string;\r\n};\r\n\r\nconst ColumnsHeaderCounter = (props: Props) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [counter, setCounter] = useState<number[]>([props.counter]);\r\n\r\n  const didMountRef = useRef(true);\r\n  const counterRef = useRef<number[]>();\r\n\r\n  useEffect(() => {\r\n    counterRef.current = counter;\r\n    if (\r\n      counterRef.current &&\r\n      counterRef.current.length > 0 &&\r\n      counterRef.current[counterRef.current.length - 1] === 0\r\n    ) {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [counter]);\r\n\r\n  useEffect(() => {\r\n    setCounter([props.counter]);\r\n    didMountRef.current = false;\r\n  }, [month?.id]);\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      setCounter(prev => [...prev, props?.counter ?? 0]);\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [props.counter]);\r\n\r\n  return (\r\n    <div className=\"columnsHeaderCounter\">\r\n      <div\r\n        style={{\r\n          transform: `translateY(-${(counter.length - 1) * 20}px)`,\r\n          transition: \"transform 0.3s ease\",\r\n        }}\r\n      >\r\n        {counter.map((item, idx) => {\r\n          return (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                height: \"20px\",\r\n                marginLeft: \"3px\",\r\n              }}\r\n            >\r\n              {item}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnsHeaderCounter;\r\n","import Col from \"react-bootstrap/Col\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport Counter from \"../columnsHeaderCounter/ColumnsHeaderCounter\";\r\n\r\ninterface Props {\r\n  thumbPosition: number;\r\n}\r\n\r\nconst MonthPanelColumnsHeader = (props: Props) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  return (\r\n    <>\r\n      {[\r\n        {\r\n          headerText: \"Złożone:\",\r\n          counter: month?.calcHours?.submittedHours,\r\n        },\r\n        {\r\n          headerText: \"Przyznane:\",\r\n          counter: month?.calcHours?.acceptedHours,\r\n        },\r\n        {\r\n          headerText: \"Odrzucone:\",\r\n          counter: month?.calcHours?.rejectedHours,\r\n        },\r\n      ].map(({ headerText, counter }) => {\r\n        return (\r\n          <div\r\n            key={headerText}\r\n            className={`text-dark-emphasis fs-responsive bg-white fw-medium p-1 d-flex align-items-center  ${\r\n              props.thumbPosition === 0\r\n                ? \"border-bottom border-3 border-white\"\r\n                : \"border-bottom border-3\"\r\n            }`}\r\n            style={{ height: \"35px\", width: \"33%\" }}\r\n          >\r\n            {headerText}\r\n            {counter ? <Counter counter={counter} text={headerText} /> : <Counter counter={0} text={headerText} />}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumnsHeader;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useScrollThumbPosition = () => {\r\n  const scrollableRef = useRef(null);\r\n  const [thumbPosition, setThumbPosition] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const element = scrollableRef.current;\r\n\r\n    if (element) {\r\n      const { scrollTop, scrollHeight, clientHeight } = element;\r\n      const maxScrollTop = scrollHeight - clientHeight;\r\n      const thumbPosition = (scrollTop / maxScrollTop) * 100;\r\n      setThumbPosition(thumbPosition);\r\n    }\r\n  };\r\n\r\n  return { scrollableRef, thumbPosition, handleScroll };\r\n};\r\n\r\nexport default useScrollThumbPosition;\r\n","import { ModelDay } from \"../sharedModels/modelDay\";\r\nimport { ModelColumn } from \"../sharedModels/modelColumn\";\r\n\r\nconst getHoursFromColumn = (days: ModelDay[]) => {\r\n  return days?.reduce((acu, day) => {\r\n    const dayHours = day?.hours || 0;\r\n    return acu + dayHours;\r\n  }, 0);\r\n};\r\n\r\nconst getHoursFromColumns = (columns: ModelColumn[]) => {\r\n  const submittedHours = getHoursFromColumn(columns[0]?.days);\r\n  const acceptedHours = getHoursFromColumn(columns[1]?.days);\r\n  const rejectedHours = getHoursFromColumn(columns[2]?.days);\r\n\r\n  return { submittedHours, acceptedHours, rejectedHours };\r\n};\r\n\r\nexport default getHoursFromColumns;\r\n","import { useEffect, useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useUpdateMonthMutation } from \"../../../services/apiSliceMonths\";\r\nimport MonthPanelColumn from \"../MonthPanelColumn\";\r\nimport MonthPanelColumnsHeader from \"../monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader\";\r\nimport useScrollThumbPosition from \"./useScrollThumbPosition\";\r\nimport { addDaysToColumns, handleDragDrop } from \"./utilsMonthPanelColumns\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\nimport getHoursFromColumns from \"../../../utils/getHoursFromColumns\";\r\n\r\nconst MonthPanelColumns = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const columnsWithDays = month && addDaysToColumns(month?.columns);\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n  const [executeUpdateMonth, setExecuteUpdateMonth] = useState(false);\r\n  const { submittedHours, acceptedHours, rejectedHours } =\r\n    getHoursFromColumns(columns);\r\n  const { scrollableRef, thumbPosition, handleScroll } =\r\n    useScrollThumbPosition();\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  useEffect(() => {\r\n    if (columnsWithDays) {\r\n      setColumns(columnsWithDays);\r\n    }\r\n  }, [month?.columns]);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0 && month) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calcHours: {\r\n            ...month?.calcHours,\r\n            currentHours:\r\n              month?.calcHours?.allHours -\r\n              submittedHours -\r\n              acceptedHours -\r\n              rejectedHours +\r\n              rejectedHours,\r\n            submittedHours,\r\n            acceptedHours,\r\n            rejectedHours,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [executeUpdateMonth]);\r\n\r\n  const handleDragEnd = (results: DropResult) => {\r\n    month &&\r\n      handleDragDrop(\r\n        results,\r\n        month?.calcHours.currentHours,\r\n        columns,\r\n        setColumns\r\n      );\r\n    setExecuteUpdateMonth(prev => !prev);\r\n  };\r\n\r\n  const rowStyles = \"d-flex justify-content-between\";\r\n\r\n  return (\r\n    <div\r\n      ref={scrollableRef}\r\n      onScroll={handleScroll}\r\n      className=\"overflow-y-scroll h-100\"\r\n      style={{\r\n        maxHeight:\r\n          windowWidth >= 500\r\n            ? \"calc(100% - 32px)\"\r\n            : \"calc(100% - 32px - 2.5rem)\",\r\n      }}\r\n    >\r\n      <div className={`${rowStyles} sticky-top`}>\r\n        <MonthPanelColumnsHeader thumbPosition={thumbPosition} />\r\n      </div>\r\n\r\n      <div\r\n        className={`${rowStyles}`}\r\n        style={{ minHeight: \"calc(100% - 35px)\" }}\r\n      >\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {columns?.map((column: ModelColumn, idx: number) => {\r\n            return (\r\n              <MonthPanelColumn\r\n                key={column.id}\r\n                column={column}\r\n                columnIdx={idx}\r\n              />\r\n            );\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumns;\r\n","import { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column: ModelColumn) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: any,\r\n  currentHours: number,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  const hoursInDay = columns[2]?.days[source.index]?.hours;\r\n  if (source.droppableId === \"rejected\" && currentHours < hoursInDay) return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns?.findIndex((column: ModelColumn) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns?.findIndex((column: ModelColumn) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: ModelColumn) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport HoursSummary from \"../../../components/HoursSummary\";\r\nimport MonthPanelColumns from \"../monthPanelColmns/MonthPanelColumns\";\r\n\r\nconst MonthPanelContent = () => {\r\n  const { pathname } = useLocation();\r\n  const [isAnimate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAnimate(false);\r\n    const timeoutId = setTimeout(() => {\r\n      setAnimate(true);\r\n    });\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      {isAnimate && (\r\n        <div\r\n          className=\"pe-1 pb-1 opacityAnimation\"\r\n          style={{\r\n            maxWidth: \"1000px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <HoursSummary />\r\n          <MonthPanelColumns />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelContent;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  printPanelContent,\r\n  printPanelLoadingContent,\r\n} from \"../../../utils/printPanelContent\";\r\nimport MonthPanelContent from \"./MonthPanelContent\";\r\n\r\nconst useRequestMonthPanel = () => {\r\n  const { month, error, isLoading } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  let requestState;\r\n\r\n  if (isLoading || listUsersIsLoading) {\r\n    requestState = printPanelLoadingContent(\r\n      <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (error || listUsersError || listMonthsError) {\r\n    requestState = printPanelLoadingContent(\r\n      <div className=\"text-danger text-center fs-4 \">Błąd. Odśwież stronę</div>\r\n    );\r\n  } else if (!month || month?.id === \"\") {\r\n    requestState = printPanelContent(\r\n      <div>\r\n        Brak danych z miesiąca {monthURLStringFormat}. Zapisz miesiąc w\r\n        ustawieniach.\r\n      </div>\r\n    );\r\n  } else {\r\n    requestState = <MonthPanelContent />;\r\n  }\r\n  return { requestState };\r\n};\r\n\r\nexport default useRequestMonthPanel;\r\n","import IndexContainer from \"../../../components/IndexContainer\";\r\nimport useReduxMonthData from \"../../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport useRequestMonthPanel from \"./useRequestMonthPanel\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  useReduxMonthData();\r\n\r\n  const { requestState } = useRequestMonthPanel();\r\n\r\n  return <IndexContainer>{requestState} </IndexContainer>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n","export const printPanelContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"d-flex justify-content-center align-items-center fs-3 text-warning text-center\"\r\n    style={{\r\n      maxWidth: \"1000px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n\r\nexport const printPanelLoadingContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top d-flex justify-content-center align-items-center\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","_jsx","children","id","className","style","height","zIndex","backgroundColor","_jsxs","props","windowWidth","useWindowWidth","overflow","position","width","maxWidth","AutoLogout","dispatch","useDispatch","_Fragment","isPrinted","onClick","e","_e$target","_e$target2","target","setIsPrinted","printAlert","handleClose","header","includes","Button","action","success","btnText","btnContent","isLoading","Spinner","animation","size","variant","monthURL","useLocation","pathname","slice","test","_Intl$DateTimeFormat","monthURLToDateFormat","monthURLStringFormat","Intl","DateTimeFormat","year","month","timeZone","format","split","yearFromURL","monthFromURL","isMonthInURL","window","innerWidth","setWindowWidth","handleResize","removeEventListener","_useURLValues","useURLValues","_useMonthDataQuery","useMonthDataQuery","data","error","getMonth","getMonthError","getMonthIsLoading","_month$calcHours","_month$calcHours2","_month$calcHours3","_month$calcHours4","useSelector","state","monthPanel","calcHours","allHours","concat","currentHours","_props$day","dateToPrint","day","date","_props$day2","_props$day3","userName","place","TbArrowBigRightLineFilled","color","MdFactory","deleteDayById","obj","idToDelete","updatedColumns","columns","column","_column$days","updatedDays","days","filter","_objectSpread","calculateUpdatedCalcHours","columnIdx","subtractedHours","submittedHours","acceptedHours","rejectedHours","_month$columns$props$","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","deleteDay","useHTTPState","RiDeleteBin6Line","setColumnIdx","_useState3","_useState4","dayId","setDayId","_useState5","_useState6","isAlertPrinted","setIsAlertPrinted","findDay","find","deleteDayAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","hours","t0","colIdx","monthBody","stop","apply","arguments","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","Alert","borderTop","userColor","opacity","MonthPanelDayPrintData","idx","toString","disabled","Droppable","droppableId","droppableProps","isDraggingOver","Array","isArray","MonthPanelDay","UUID","placeholder","counter","setCounter","didMountRef","useRef","counterRef","current","length","_props$counter","_toConsumableArray","transform","transition","item","marginLeft","headerText","thumbPosition","Counter","text","scrollableRef","setThumbPosition","handleScroll","element","scrollTop","scrollHeight","clientHeight","getHoursFromColumn","reduce","acu","_columns$","_columns$2","_columns$3","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","columnsWithDays","hasOwnProperty","addDaysToColumns","setColumns","executeUpdateMonth","setExecuteUpdateMonth","_getHoursFromColumns","getHoursFromColumns","_useScrollThumbPositi","useScrollThumbPosition","rowStyles","onScroll","maxHeight","MonthPanelColumnsHeader","minHeight","DragDropContext","onDragEnd","results","_columns$$days$source","source","destination","hoursInDay","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","MonthPanelColumn","isAnimate","setAnimate","timeoutId","setTimeout","clearTimeout","HoursSummary","MonthPanelColumns","_useSelector","_useSelector2","listUsers","listUsersError","listUsersIsLoading","listMonthsError","listMonths","useMonthURLToString","requestState","printPanelLoadingContent","MonthPanelContent","printPanelContent","useReduxMonthData","useRequestMonthPanel","IndexContainer","contentJSX"],"sourceRoot":""}