{"version":3,"file":"static/js/118.ab664aea.chunk.js","mappings":"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","sources":["components/AlertErrors.tsx","components/alert/buttonsAlert/ButtonAlertAccept.tsx","components/alert/buttonsAlert/ButtonAlertDelete.tsx","components/alert/Alert.tsx","components/buttonForm/ButtonForm.tsx","components/inputs/inputError/InputError.tsx","components/inputs/inputsText/labelCover/InputsCover.tsx","components/inputs/inputsText/InputsTextLabel.tsx","components/inputs/inputsText/InputsText.tsx","data/dataCurrentDates.tsx","hooks/useBtnContent.tsx","pages/login/formLoginContext/useFormikLogin.tsx","pages/login/formLoginContext/FormLoginContext.tsx","pages/login/indexLogin/IndexLogin.tsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport Alert from \"./alert/Alert\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { printAlert } from \"../redux/storeFeatures/alertSlice\";\r\n\r\nconst AlertErrors = () => {\r\n  const dispatch = useDispatch();\r\n  const { header } = useSelector((state: RootState) => state.alert);\r\n\r\n  const closeAlert = () => {\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  if (!header) return null;\r\n\r\n  return <Alert action={closeAlert} isPrinted={true} header={header} />;\r\n};\r\n\r\nexport default AlertErrors;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertAccept = (props: Props) => {\r\n  return (\r\n    <Button\r\n      id=\"noButton\"\r\n      className=\"_radius bg-primary border-0 px-5 ms-4\"\r\n      onClick={props.action}\r\n    >\r\n      Ok\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertAccept;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertDelete = (props: Props) => {\r\n  return (\r\n    <>\r\n      <Button id=\"noButton\" className=\"_radius bg-dark border-0 px-4 px-sm-5\">\r\n        Nie\r\n      </Button>\r\n      <Button\r\n        onClick={props.action}\r\n        className=\"_radius bg-primary border-0 px-4 px-sm-5 ms-4\"\r\n      >\r\n        Tak\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertDelete;\r\n","import { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./_alert.scss\";\r\nimport ButtonAlertAccept from \"./buttonsAlert/ButtonAlertAccept\";\r\nimport ButtonAlertDelete from \"./buttonsAlert/ButtonAlertDelete\";\r\nimport { memo, useEffect } from \"react\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = memo((props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  if (!props.isPrinted) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"opacityContainer\"\r\n        className=\"fixed-top _d-center _alert\"\r\n        onClick={handleClose}\r\n      >\r\n        <div\r\n          className={`p-5 bg-white _radius text-center fs-2 fw-medium _anim-dropDown`}\r\n        >\r\n          {props.header}\r\n          <div className=\"_w-fitContent m-auto mt-4\">\r\n            {props.header.includes(\"Usunąć\") ? (\r\n              <ButtonAlertDelete action={props.action} />\r\n            ) : (\r\n              <ButtonAlertAccept action={props.action} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Alert;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport \"./_buttonForm.scss\";\r\nimport useBtnContent from \"../../hooks/useBtnContent\";\r\nimport \"./_buttonForm.scss\";\r\nimport { memo, useEffect } from \"react\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  text?: string;\r\n  styles?: string;\r\n};\r\n\r\nconst ButtonForm = (props: Props) => {\r\n  const buttonText = props.text ? <div>{props.text}</div> : <div>Zapisz</div>;\r\n  const { btnContent } = useBtnContent(props?.isLoading, buttonText);\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      variant=\"primary\"\r\n      disabled={props?.isLoading}\r\n      className={`_d-center w-50 p-0 py-1 mt-2 ms-auto _radius  _fw-semiBold _fs-primary _buttonForm position-relative ${props.styles}`}\r\n    >\r\n      <div className=\"invisible\">Z</div>\r\n      <div className=\"_buttonForm__content _d-center\">{btnContent}</div>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonForm;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport \"./_inputError.scss\";\r\nimport { memo, useEffect } from \"react\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\n\r\nconst InputError = (props: Props) => {\r\n\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-5 ps-2 _inputError\">\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputError;\r\n","import { useContext, useState } from \"react\";\r\nimport \"./_inputsCover.scss\";\r\nimport { LabelContext } from \"../InputsText\";\r\n\r\nconst InputsCover = () => {\r\n  const [isPrinted, setPrinted] = useState(true);\r\n  const { labelCover } = useContext(LabelContext);\r\n\r\n  const handleDelete = () => {\r\n    setPrinted(false);\r\n  };\r\n\r\n  if (!isPrinted) return null;\r\n\r\n  return (\r\n    <div\r\n      onClick={handleDelete}\r\n      className=\"_inputsCover w-100 p-2  bg-secondary-light _fs-primary text-light-emphasis  _radius border\"\r\n    >\r\n      {labelCover}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputsCover;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport InputsCover from \"./labelCover/InputsCover\";\r\nimport { useContext } from \"react\";\r\nimport { LabelContext } from \"./InputsText\";\r\n\r\nconst InputsTextLabel = () => {\r\n  const { labelCover, value } = useContext(LabelContext);\r\n\r\n  if (labelCover === undefined) return null;\r\n\r\n  return (\r\n    <Form.Label htmlFor={value} className=\"position-absolute w-100\">\r\n      <InputsCover />\r\n    </Form.Label>\r\n  );\r\n};\r\n\r\nexport default InputsTextLabel;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport InputError from \"../inputError/InputError\";\r\nimport InputsTextLabel from \"./InputsTextLabel\";\r\nimport \"./_inputsText.scss\";\r\nimport { createContext } from \"react\";\r\n\r\ntype ContextType = {\r\n  value: string;\r\n  labelCover?: string;\r\n};\r\n\r\nexport const LabelContext = createContext<ContextType>({} as ContextType);\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    labelCover?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n    styles?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({\r\n          value,\r\n          labelCover,\r\n          type,\r\n          isErrorPrint,\r\n          min,\r\n          max,\r\n          placeholder,\r\n          styles,\r\n        }) => {\r\n          return (\r\n            <Form.Group key={value} className=\" mt-2 position-relative\">\r\n              <LabelContext.Provider value={{ value, labelCover }}>\r\n                <InputsTextLabel />\r\n              </LabelContext.Provider>\r\n\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className={`text-light-emphasis bg-secondary-light _radius w-100 text-capitalize _cursor-pointer _fs-primary\r\n                   ${type === \"color\" ? \"_inputsColor p-0\" : \"py-2\"} ${styles}\r\n                `}\r\n              />\r\n\r\n              {isErrorPrint && (\r\n                <InputError value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","const today = new Date();\r\n\r\nconst formatDate = (date: Date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst futureDateInNext_14_Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\r\nconst futureDateInNext_60_Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\r\n\r\nexport const currYearDigits = today.getFullYear();\r\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\r\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\r\nexport const currDateDigits = formatDate(today);\r\n\r\nexport const dateInNext_14_Days = formatDate(futureDateInNext_14_Days);\r\nexport const dateInNext_60_Days = formatDate(futureDateInNext_60_Days);\r\n\r\n\r\n\r\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  timeZone: \"UTC\",\r\n}).format(today);\r\n","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst useBtnContent = (isLoading: boolean, btn: JSX.Element) => {\r\n  let btnContent: JSX.Element = btn;\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"primary\"\r\n        className=\"text-dark\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useBtnContent;\r\n","import { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  currMonthDigits,\r\n  currYearDigits,\r\n} from \"../../../data/dataCurrentDates\";\r\nimport { auth } from \"../../../data/firebaseConfig\";\r\nimport { printAlert } from \"../../../redux/storeFeatures/alertSlice\";\r\n\r\ntype InitialValues = {\r\n  password: string;\r\n};\r\n\r\nconst useFormikLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const initialValues = { password: \"wwwwww\" };\r\n\r\n  const onSubmit = (values: InitialValues) => {\r\n    setIsLoading(true);\r\n    signInWithEmailAndPassword(auth, \"ww@wp.pl\", values.password)\r\n      .then(() => {\r\n        navigate(`/${currYearDigits}-${currMonthDigits}`);\r\n        setIsLoading(false);\r\n      })\r\n\r\n      .catch(error => dispatch(printAlert(error.message)))\r\n\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return { initialValues, onSubmit, isLoading };\r\n};\r\n\r\nexport default useFormikLogin;\r\n","import { Form, Formik } from \"formik\";\r\nimport ButtonForm from \"../../../components/buttonForm/ButtonForm\";\r\nimport InputsText from \"../../../components/inputs/inputsText/InputsText\";\r\nimport \"./_formLoginContext.scss\";\r\nimport useFormikLogin from \"./useFormikLogin\";\r\n\r\nconst dataInputsText = [\r\n  { value: \"password\", type: \"password\", isErrorPrint: true },\r\n];\r\n\r\nconst FormLoginContext = () => {\r\n  const { initialValues, onSubmit, isLoading } = useFormikLogin();\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form\r\n        className={`border p-5 rounded-1 _bg-opacity-white _formLoginContext _d-center _anim-dropDown`}\r\n      >\r\n        <div>\r\n          <div className=\"text-center fs-2 fw-medium mb-4 \">Podaj hasło</div>\r\n          <InputsText inputsData={dataInputsText} />\r\n\r\n          <ButtonForm\r\n            isLoading={isLoading}\r\n            text={\"Zaloguj\"}\r\n            styles={\"_formLoginContext__button\"}\r\n          />\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormLoginContext;\r\n","import AlertErrors from \"../../../components/AlertErrors\";\r\nimport FormLoginContext from \"../formLoginContext/FormLoginContext\";\r\nimport \"./_indexLogin.scss\"\r\n\r\nconst IndexLogin = () => {\r\n  return (\r\n    <main className=\"_d-center bg-primary-light  _indexLogin\">\r\n      <AlertErrors />\r\n      <FormLoginContext />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexLogin;\r\n"],"names":["dispatch","useDispatch","header","useSelector","state","alert","_jsx","Alert","action","printAlert","isPrinted","props","Button","id","className","onClick","children","_jsxs","_Fragment","memo","e","_e$target","includes","target","setIsPrinted","ButtonAlertDelete","ButtonAlertAccept","buttonText","text","btnContent","useBtnContent","isLoading","type","variant","disabled","concat","styles","touched","value","errors","_useState","useState","_useState2","_slicedToArray","setPrinted","labelCover","useContext","LabelContext","_useContext","undefined","Form","Label","htmlFor","InputsCover","createContext","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","map","_ref","isErrorPrint","min","max","placeholder","Group","Provider","InputsTextLabel","Control","name","onChange","onBlur","size","InputError","today","Date","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","futureDateInNext_14_Days","getTime","futureDateInNext_60_Days","currYearDigits","currMonthDigits","dateInNext_14_Days","dateInNext_60_Days","Intl","DateTimeFormat","timeZone","format","btn","Spinner","animation","navigate","useNavigate","setIsLoading","initialValues","password","onSubmit","signInWithEmailAndPassword","auth","then","catch","error","message","finally","dataInputsText","_useFormikLogin","useFormikLogin","Formik","InputsText","ButtonForm","AlertErrors","FormLoginContext"],"sourceRoot":""}