{"version":3,"file":"static/js/67.cb4190ba.chunk.js","mappings":"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","sources":["components/IndexContainer.tsx","hooks/useHTTPState.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx","components/HoursSummary.tsx","pages/monthPanel/monthPanelColmns/utilsMonthPanelColumns.tsx","hooks/useHoursSum.tsx","pages/monthPanel/MonthPanelDayPrintData.tsx","pages/monthPanel/MonthPanelDay.tsx","pages/monthPanel/MonthPanelColumn.tsx","pages/monthPanel/monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader.tsx","pages/monthPanel/monthPanelColmns/useScrollThumbPosition.tsx","pages/monthPanel/monthPanelColmns/MonthPanelColumns.tsx","pages/monthPanel/indexMonthPanel/MonthPanelContent.tsx","pages/monthPanel/indexMonthPanel/useRequestMonthPanel.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","utils/alertHelpers.tsx","utils/printPanelContent.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{ height: \"100dvh\", overflow: \"hidden\" }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Swal from \"sweetalert2\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface ModelSuccess {\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  error?: any;\r\n}\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  useEffect(() => {\r\n    if (success.isError) {\r\n      const error = success.error;\r\n      const errMsg = error && \"status\" in error && error.status && error.status;\r\n\r\n      Swal.fire({\r\n        text: `Błąd: ${errMsg || \"\"}`,\r\n        confirmButtonColor: \"rgb(31, 180, 255)\",\r\n      });\r\n    }\r\n  }, [success.isError]);\r\n\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(1);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return {monthURLStringFormat};\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return {monthURLStringFormat};\r\n  }\r\n\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst HoursSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const styles = \"col-4 col-xxl-3 p-0\";\r\n\r\n  return (\r\n    <div className=\"d-flex gap-2 mx-auto fw-medium pb-2\" style={{ width: \"fit-content\" }}>\r\n      <div>Wszystkie</div>\r\n      <div>\r\n        {month?.calc?.allHours} -{\" \"}\r\n        <span\r\n          className={`${month?.calc?.currentHours <= 0 ? \"text-danger\" : \"\"}`}\r\n        >\r\n          {month?.calc?.currentHours}\r\n        </span>\r\n      </div>\r\n      <div\r\n        className={` ${\r\n          month?.calc?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n        }`}\r\n      >\r\n        {month?.calc?.currentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursSummary;\r\n","import { ModelColumn } from \"../../../components/someData/dataSidebarMonthForm\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column: ModelColumn) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: any,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns?.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns?.findIndex((column: any) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { ModelDay } from \"../components/someData/dataSidebarMonthForm\";\r\nimport { addDaysToColumns } from \"../pages/monthPanel/monthPanelColmns/utilsMonthPanelColumns\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useHoursSum = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n\r\n  let submittedHoursSum = 0;\r\n  let acceptedHoursSum = 0;\r\n  let rejectedHoursSum = 0;\r\n\r\n  const columnsWithDays = addDaysToColumns(month?.columns);\r\n\r\n  for (const column of columnsWithDays) {\r\n    const columnDays = column.days || [];\r\n    const columnHoursSum = columnDays.reduce(\r\n      (sum: number, day: ModelDay | null) => {\r\n        const dayHours = day?.hours ?? 0;\r\n        return sum + dayHours;\r\n      },\r\n      0\r\n    );\r\n\r\n    switch (column.id) {\r\n      case \"submitted\":\r\n        submittedHoursSum = columnHoursSum;\r\n        break;\r\n      case \"accepted\":\r\n        acceptedHoursSum = columnHoursSum;\r\n        break;\r\n      case \"rejected\":\r\n        rejectedHoursSum = columnHoursSum;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return { submittedHoursSum, acceptedHoursSum, rejectedHoursSum };\r\n};\r\n\r\nexport default useHoursSum;\r\n","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport { ModelDay } from \"../../components/someData/dataSidebarMonthForm\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n}\r\n\r\nconst MonthPanelDayPrintData = (props: Props) => {\r\n  let dateToPrint;\r\n\r\n  if (!props?.day?.date) {\r\n    return <div>Brak danych</div>;\r\n  } else {\r\n    const date = new Date(props.day.date);\r\n    dateToPrint = new Intl.DateTimeFormat(\"pl-PL\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(date);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between fs-7 \">\r\n          <div>{props.day?.userName}</div>\r\n\r\n          <div>\r\n            {props.day?.place === \"Poza\" ? (\r\n              <TbArrowBigRightLineFilled style={{ color: \"rgb(80,173,150)\" }} />\r\n            ) : (\r\n              <MdFactory style={{ color: \"rgb(255, 181, 9)\" }} />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex fw-medium justify-content-between\">\r\n          <div>{dateToPrint ? dateToPrint : \"\"}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MonthPanelDayPrintData;\r\n","import { Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FiClock } from \"react-icons/fi\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ModelDay } from \"../../components/someData/dataSidebarMonthForm\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useDeleteDayMutation } from \"../../services/apiSliceMonths\";\r\nimport { alertHelper } from \"../../utils/alertHelpers\";\r\nimport MonthPanelDayPrintData from \"./MonthPanelDayPrintData\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst MonthPanelDay = (props: Props) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger\" />\r\n  );\r\n\r\n  const handleDelete = async (idx: number, id: string) => {\r\n    Swal.fire(alertHelper(\"Usunąć dzień\")).then(async result => {\r\n      if (result.isConfirmed) {\r\n        const daysBodyPUTRequest = month?.columns[idx]?.days?.filter(\r\n          (day: ModelDay) => {\r\n            return day?.id !== id;\r\n          }\r\n        );\r\n\r\n        await deleteDay({\r\n          year: yearFromURL,\r\n          month: monthFromURL,\r\n          colIdx: props.columnIdx,\r\n          daysBody: daysBodyPUTRequest || [],\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white rounded border ${\r\n              snapshot.isDragging ? \"border-dark\" : \"border-dark-subtle\"\r\n            } `}\r\n          >\r\n            <div\r\n              className=\"px-1 py-2 py-sm-1 rounded\"\r\n              style={{\r\n                borderTop: `8px solid ${props.day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.8 : 1,\r\n              }}\r\n            >\r\n              <MonthPanelDayPrintData day={props.day} />\r\n\r\n              <Button\r\n                onClick={() => handleDelete(props.columnIdx, props.day.id)}\r\n                className=\"d-flex justify-content-between  align-items-center w-100 p-0 bg-transparent border-0\"\r\n                disabled={success.isLoading}\r\n              >\r\n                <div>{props.day?.hours} h</div>\r\n                <div className=\"\">{btnContent}</div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default MonthPanelDay;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {\r\n  ModelColumn,\r\n  ModelDay,\r\n} from \"../../components/someData/dataSidebarMonthForm\";\r\nimport MonthPanelDay from \"./MonthPanelDay\";\r\nimport { v4 as UUID } from \"uuid\";\r\n\r\ninterface Props {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n}\r\n\r\nconst MonthPanelColumn = (props: Props) => {\r\n  return (\r\n    <Col>\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className=\"p-1 h-100 overflow-hidden border border-1 border border-top-0\"\r\n              style={{\r\n                backgroundColor: snapshot.isDraggingOver\r\n                  ? \"rgba(0, 0, 0, 0.1)\"\r\n                  : \"rgba(255, 255, 255, 0.2)\",\r\n              }}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <MonthPanelDay\r\n                        key={UUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumn;\r\n","import Col from \"react-bootstrap/Col\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ninterface Props {\r\n  thumbPosition: number;\r\n}\r\n\r\nconst MonthPanelColumnsHeader = (props: Props) => {\r\n  \r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n\r\n  return (\r\n    <>\r\n      {[\r\n        {\r\n          headerText: \"Złożone:\",\r\n          counter: month?.calc?.submittedHours,\r\n        },\r\n        {\r\n          headerText: \"Przyznane:\",\r\n          counter: month?.calc?.acceptedHours,\r\n        },\r\n        {\r\n          headerText: \"Odrzucone:\",\r\n          counter: month?.calc?.rejectedHours,\r\n        },\r\n      ].map(({ headerText, counter }) => {\r\n        return (\r\n          <Col\r\n            key={headerText}\r\n            className={`text-dark-emphasis bg-white fw-medium p-1 ${\r\n              props.thumbPosition === 0\r\n                ? \"border-bottom border-2 border-white\"\r\n                : \"border-bottom border-2 border-dark-subtle\"\r\n            }`}\r\n            style={{\r\n              fontSize: \"clamp(0.8rem, 3.4vw, 1rem)\",\r\n            }}\r\n          >\r\n            {headerText} {\"\"}\r\n            {counter}\r\n          </Col>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumnsHeader;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useScrollThumbPosition = () => {\r\n  const scrollableRef = useRef(null);\r\n  const [thumbPosition, setThumbPosition] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const element = scrollableRef.current;\r\n\r\n    if (element) {\r\n      const { scrollTop, scrollHeight, clientHeight } = element;\r\n      const maxScrollTop = scrollHeight - clientHeight;\r\n      const thumbPosition = (scrollTop / maxScrollTop) * 100;\r\n      setThumbPosition(thumbPosition);\r\n    }\r\n  };\r\n\r\n  return { scrollableRef, thumbPosition, handleScroll };\r\n};\r\n\r\nexport default useScrollThumbPosition;\r\n","import { useEffect, useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ModelColumn } from \"../../../components/someData/dataSidebarMonthForm\";\r\nimport useHoursSum from \"../../../hooks/useHoursSum\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useUpdateMonthMutation } from \"../../../services/apiSliceMonths\";\r\nimport MonthPanelColumn from \"../MonthPanelColumn\";\r\nimport MonthPanelColumnsHeader from \"../monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader\";\r\nimport useScrollThumbPosition from \"./useScrollThumbPosition\";\r\nimport { addDaysToColumns, handleDragDrop } from \"./utilsMonthPanelColumns\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\n\r\nconst MonthPanelColumns = () => {\r\n  const { windowWidth } = useWindowWidth();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { submittedHoursSum, acceptedHoursSum, rejectedHoursSum } =\r\n    useHoursSum();\r\n  const { scrollableRef, thumbPosition, handleScroll } =\r\n    useScrollThumbPosition();\r\n\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n\r\n  const columnsWithDays = addDaysToColumns(month?.columns);\r\n\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n\r\n  useEffect(() => {\r\n    setColumns(columnsWithDays);\r\n  }, [month]);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calc: {\r\n            ...month?.calc,\r\n            currentHours:\r\n              (month?.calc?.allHours ?? 0) -\r\n              submittedHoursSum -\r\n              acceptedHoursSum -\r\n              rejectedHoursSum +\r\n              rejectedHoursSum,\r\n            submittedHours: submittedHoursSum,\r\n            acceptedHours: acceptedHoursSum,\r\n            rejectedHours: rejectedHoursSum,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [columns]);\r\n\r\n  const handleDragEnd = (results: DropResult) => {\r\n    handleDragDrop(results, columns, setColumns);\r\n  };\r\n\r\n  const rowStyles = \"d-flex column-gap-1\";\r\n\r\n  return (\r\n    <div\r\n      ref={scrollableRef}\r\n      onScroll={handleScroll}\r\n      className=\"p-0 overflow-y-scroll\"\r\n      style={{\r\n        height: \"fit-content\",\r\n        maxHeight:\r\n          windowWidth > 500\r\n            ? \"calc(100% - 32px)\"\r\n            : \"calc(100% - 32px - 2.5rem)\",\r\n      }}\r\n    >\r\n      <div className={`${rowStyles} sticky-top`}>\r\n        <MonthPanelColumnsHeader thumbPosition={thumbPosition} />\r\n      </div>\r\n\r\n      <div className={`${rowStyles}`}>\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {columns?.map((column: ModelColumn, idx: number) => {\r\n            return (\r\n              <MonthPanelColumn\r\n                key={column.id}\r\n                column={column}\r\n                columnIdx={idx}\r\n              />\r\n            );\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumns;\r\n","import HoursSummary from \"../../../components/HoursSummary\";\r\nimport MonthPanelColumns from \"../monthPanelColmns/MonthPanelColumns\";\r\n\r\nconst MonthPanelContent = () => {\r\n  return (\r\n    <div\r\n      className=\"py-1\"\r\n      style={{\r\n        maxWidth: \"1000px\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <HoursSummary />\r\n      <MonthPanelColumns />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPanelContent;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { printPanelContent } from \"../../../utils/printPanelContent\";\r\nimport MonthPanelColumns from \"../monthPanelColmns/MonthPanelColumns\";\r\nimport HoursSummary from \"../../../components/HoursSummary\";\r\nimport MonthPanelContent from \"./MonthPanelContent\";\r\n\r\nconst useRequestMonthPanel = () => {\r\n  const { month, error, isLoading } = useSelector(\r\n    (state: RootState) => state.monthsPanel\r\n  );\r\n\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  let requestState;\r\n\r\n  if (isLoading) {\r\n    requestState = printPanelContent(\r\n      <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (error) {\r\n    if (\"status\" in error) {\r\n      const errMsg = \"status\" in error && error.status;\r\n\r\n      requestState = printPanelContent(\r\n        <div className=\"text-danger text-center \">\r\n          <> Błąd: {errMsg} </>\r\n        </div>\r\n      );\r\n    }\r\n  } else if (!month || month?.id === \"\") {\r\n    requestState = printPanelContent(\r\n      <div>\r\n        Brak danych z miesiąca {monthURLStringFormat}. Zapisz miesiąc w\r\n        ustawieniach.\r\n      </div>\r\n    );\r\n  } else {\r\n    requestState = (\r\n      <>\r\n        <MonthPanelContent />\r\n      </>\r\n    );\r\n  }\r\n  return { requestState };\r\n};\r\n\r\nexport default useRequestMonthPanel;\r\n","import useRequestMonthPanel from \"./useRequestMonthPanel\";\r\nimport IndexContainer from \"../../../components/IndexContainer\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  const { requestState } = useRequestMonthPanel();\r\n  \r\n  return <IndexContainer>{requestState}</IndexContainer>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const alertHelper = (message: string) => {\r\n  return {\r\n    title: message,\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Tak\",\r\n    cancelButtonText: \"Nie\",\r\n  };\r\n};\r\n\r\nexport const alert = (error:string) => {\r\n  Swal.fire({\r\n    text: `Błąd ${error}`,\r\n    confirmButtonColor: \"rgb(31, 180, 255)\",\r\n  });\r\n}\r\n","export const printPanelContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\" d-flex justify-content-center align-items-center fs-3 text-warning text-center\"\r\n    style={{\r\n      maxWidth: \"1000px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);"],"names":["props","windowWidth","useWindowWidth","_jsxs","className","style","height","overflow","children","_jsx","width","maxWidth","success","btnText","useEffect","isError","error","errMsg","status","Swal","text","concat","confirmButtonColor","btnContent","isLoading","Spinner","animation","size","variant","monthURL","useLocation","pathname","slice","test","_Intl$DateTimeFormat","monthURLToDateFormat","Date","monthURLStringFormat","Intl","DateTimeFormat","year","month","timeZone","format","split","yearFromURL","monthFromURL","isMonthInURL","_useState","useState","window","innerWidth","_useState2","_slicedToArray","setWindowWidth","handleResize","addEventListener","removeEventListener","_month$calc","_month$calc2","_month$calc3","_month$calc4","_month$calc5","useSelector","state","monthsPanel","calc","allHours","currentHours","addDaysToColumns","columns","Array","isArray","map","column","hasOwnProperty","_objectSpread","days","_step","submittedHoursSum","acceptedHoursSum","rejectedHoursSum","columnsWithDays","_iterator","_createForOfIteratorHelper","s","n","done","value","columnHoursSum","reduce","sum","day","_day$hours","hours","id","err","e","f","_props$day","dateToPrint","date","_props$day2","_props$day3","_Fragment","userName","place","TbArrowBigRightLineFilled","color","MdFactory","_useURLValues","useURLValues","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","deleteDay","useHTTPState","RiDeleteBin6Line","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","idx","wrap","_context2","prev","next","alertHelper","then","_ref2","_callee","result","_month$columns$idx","_month$columns$idx$da","daysBodyPUTRequest","_context","isConfirmed","filter","colIdx","columnIdx","daysBody","stop","_x3","apply","arguments","_x","_x2","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","borderTop","userColor","opacity","MonthPanelDayPrintData","Button","onClick","disabled","Col","Droppable","droppableId","droppableProps","backgroundColor","isDraggingOver","MonthPanelDay","UUID","placeholder","headerText","counter","submittedHours","acceptedHours","rejectedHours","thumbPosition","fontSize","scrollableRef","useRef","setThumbPosition","handleScroll","element","current","scrollTop","scrollHeight","clientHeight","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","_useHoursSum","useHoursSum","_useScrollThumbPositi","useScrollThumbPosition","setColumns","_month$calc$allHours","length","monthBody","rowStyles","onScroll","maxHeight","MonthPanelColumnsHeader","DragDropContext","onDragEnd","results","source","destination","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","_toConsumableArray","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","MonthPanelColumn","HoursSummary","MonthPanelColumns","requestState","_useSelector","useMonthURLToString","printPanelContent","MonthPanelContent","useRequestMonthPanel","IndexContainer","message","title","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText","alert","contentJSX"],"sourceRoot":""}