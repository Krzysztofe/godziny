{"version":3,"file":"static/js/124.dbb2d2e1.chunk.js","mappings":"kLA+CA,EA5CsB,WACpB,IAAAA,GAAgDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAExCI,EAAa,EAWXC,EAAmB,WACvBD,EAAaE,KAAKC,MAAQ,GAC5B,EAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,YAdP,WACtB,IAAMC,EAAYC,KAAKC,IAAI,EAAGD,KAAKE,OAAOV,EAAaE,KAAKC,OAAS,MACrEJ,EAAoBQ,GAEhBP,EAAaE,KAAKC,OACpBQ,EAAAA,GAAKC,SAET,CAQIC,EACF,GAAG,KAEH,OAAO,kBAAMC,cAAcT,EAAU,CACvC,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACRH,IACA,IAAMc,EAAS,CAAC,YAAa,WAAY,QAAS,UAMlD,OAJAA,EAAOC,KAAI,SAAAC,GACT,OAAOC,SAASC,iBAAiBF,EAAOhB,EAC1C,IAEO,WACLc,EAAOC,KAAI,SAAAC,GACT,OAAOC,SAASC,iBAAiBF,EAAOhB,EAC1C,GACF,CACF,GAAG,IAEI,CAAEH,iBAAAA,EACX,E,SCPA,EApCmB,WACjB,IAAQA,EAAqBsB,IAArBtB,iBAGR,OADAsB,KAEEC,EAAAA,EAAAA,KAAA,OAAAC,SACGxB,EAAmB,GAAK,KACvBuB,EAAAA,EAAAA,KAAA,OACEE,GAAG,mBACHC,UAAU,8DACVC,MAAO,CACLC,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,mBACjBN,UAEFO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,kEAAiEF,SAAA,CAAC,+BAE/ED,EAAAA,EAAAA,KAAA,OACEI,MAAO,CACLK,MAAO,OACPC,QAAS,OACTC,eAAgB,UAChBV,SAEDxB,EAAmB,IAChB,MAENuB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAM3B,ECKA,EAjCuB,SAACS,GACtB,IAAQC,GAAgBC,EAAAA,EAAAA,KAAhBD,YAGR,OACEL,EAAAA,EAAAA,MAAA,QACEL,UAAU,6BACVC,MAAO,CACLC,OAAQ,QACRU,SAAU,SACVC,SAAU,YACVf,SAAA,EAEFD,EAAAA,EAAAA,KAAA,SACEI,MAAO,CACLK,MAAOI,GAAe,IAAM,MAAQ,EACpCI,SAAU,QACVZ,OAAQ,WAGZG,EAAAA,EAAAA,MAAA,OACEL,UAAU,wBACVC,MAAO,CACLK,MAAOI,GAAe,IAAM,MAAQ,QACpCZ,SAAA,EAEFD,EAAAA,EAAAA,KAACkB,EAAU,IACVN,EAAMX,cAIf,C,kGC6BA,EAxDc,SAACW,GACb,IAAMO,GAAWC,EAAAA,EAAAA,MAYjB,OACEpB,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,SACGW,EAAMU,WACLtB,EAAAA,EAAAA,KAAA,OACEE,GAAG,mBACHC,UAAU,8DACVoB,QAAS,SAAAC,GAAC,OAhBE,SAACA,GAAqD,IAADC,EAAAC,EAEnC,sBAAzB,QAATD,EAACD,EAAEG,cAAM,IAAAF,OAAA,EAATA,EAA2BvB,KACO,cAAzB,QAATwB,EAACF,EAAEG,cAAM,IAAAD,OAAA,EAATA,EAA2BxB,MAGpB,OAALU,QAAK,IAALA,GAAAA,EAAOgB,eAAmB,OAALhB,QAAK,IAALA,GAAAA,EAAOgB,cAAa,IAC7CT,GAASU,EAAAA,EAAAA,IAAW,KACtB,CAQsBC,CAAYN,EAAE,EAC5BpB,MAAO,CACLC,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,mBACjBN,UAEFO,EAAAA,EAAAA,MAAA,OACEL,UAAS,2DAA6DF,SAAA,CAErEW,EAAMmB,QACP/B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,SAClCW,EAAMmB,OAAOC,SAAS,qBACrBxB,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAApB,SAAA,EACED,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAAC/B,GAAG,WAAUD,SAAC,SACtBD,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLV,QAASX,EAAMsB,OACf/B,UAAU,yBAAwBF,SACnC,YAKHD,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAAC/B,GAAG,WAAWqB,QAASX,EAAMsB,OAAOjC,SAAC,eAQrDD,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,KAIR,C,oCC/CA,IAVmB,SAACT,GAClB,OACEZ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAAgCC,MAAO,CAAEC,OAAQ,UAAWJ,SACxEW,EAAMuB,QAAQvB,EAAMwB,QACnBxB,EAAMyB,OAAOzB,EAAMwB,QACnBxB,EAAMyB,OAAOzB,EAAMwB,QAG3B,C,4ECgDA,IA9CmB,SAACxB,GAClB,IAAA0B,GACEC,EAAAA,EAAAA,MADMC,EAAMF,EAANE,OAAQC,EAAUH,EAAVG,WAAYC,EAAaJ,EAAbI,cAAeL,EAAMC,EAAND,OAAQF,EAAOG,EAAPH,SAG/BQ,EAAAA,EAAAA,MAAbC,SAGP,OACE5C,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,SACGW,EAAMiC,WAAWlD,KAChB,SAAAmD,GAAkE,IAA/DV,EAAKU,EAALV,MAAOW,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aAAcC,EAAGJ,EAAHI,IAAK9D,EAAG0D,EAAH1D,IAAK+D,EAAWL,EAAXK,YAC7C,OACE3C,EAAAA,EAAAA,MAAC4C,EAAAA,EAAKC,MAAK,CAAApD,SAAA,CACR8C,IACC/C,EAAAA,EAAAA,KAACoD,EAAAA,EAAKE,MAAK,CACTC,QAAQ,OACRpD,UAAU,+BAA8BF,SAEvC8C,KAGL/C,EAAAA,EAAAA,KAACoD,EAAAA,EAAKI,QAAO,CACXtD,GAAIkC,EACJY,KAAMA,EACNS,KAAMrB,EACNA,MAAOI,EAAOJ,GACdsB,SAAU,SAAAlC,GAAC,OAAIkB,EAAcN,EAAOZ,EAAEG,OAAOS,MAAM,EACnDuB,OAAQlB,EACRS,IAAKA,EACL9D,IAAKA,EACL+D,YAAaA,EACbS,KAAK,KACLzD,UAAU,iEACVC,MAAO,CAAEyD,UAAW,KAErBZ,IACCjD,EAAAA,EAAAA,KAAC8D,EAAAA,EAAU,CAAC1B,MAAOA,EAAOC,OAAQA,EAAQF,QAASA,MAxBtCC,EA4BrB,KAIR,C,uHCKA,EAhE8B,WAC5B,IAAM2B,GAAYC,EAAAA,EAAAA,IAAIC,EAAAA,IACtB5F,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B6F,EAAK3F,EAAA,GAAE4F,EAAQ5F,EAAA,GACtB6F,GAAoD9F,EAAAA,EAAAA,UAAc,IAAG+F,GAAA7F,EAAAA,EAAAA,GAAA4F,EAAA,GAA9DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAuDhD,OArDAtF,EAAAA,EAAAA,YAAU,WACR,IAAMyF,GAAcC,EAAAA,EAAAA,IAClBV,GACA,SAAAW,GACE,IAAIC,EAAsB,GACtBC,EAAwB,GAEpB,OAARF,QAAQ,IAARA,GAAAA,EAAUG,SAAQ,SAACC,GACjB,IAAMC,EAAgBD,EAAmBE,IACzCL,EAAUM,KAAKF,GAEf,IAAMG,GAAgBlB,EAAAA,EAAAA,IAAIC,EAAAA,GAAS,GAADkB,OAAKJ,KACvCN,EAAAA,EAAAA,IACES,GACA,SAAAE,GACE,IAAIC,EAAuB,GAEb,OAAdD,QAAc,IAAdA,GAAAA,EAAgBP,SAAQ,SAACS,GACvB,IAAMC,EAAYD,EAAkBN,IACpCK,EAAWJ,KAAKM,EAAUC,MAAM,GAClC,IAEAZ,EAAiBK,KAAKI,EACxB,IAEA,SAAAI,GACEtB,EAAS,iBACX,GAEJ,IAEA,IAAMuB,EAAS,GAAAP,OAAIP,GAChBjF,KAAI,SAACgG,EAAcC,GAClB,OAAOD,EAAahG,KAAI,SAACkG,GACvB,OAAOlB,EAAUiB,GAAO,IAAMC,CAChC,GACF,IACCC,OACAC,UAEHxB,EAAsBmB,EACxB,IACA,SAAAxB,GACEC,EAAS,iBACX,IAGF,OAAO,WACLK,GACF,CACF,GAAG,IAGI,CACLF,mBAAAA,EACAJ,MAAAA,EAEJ,ECzCA,EAf2B,WACzB,IAAM/C,GAAWC,EAAAA,EAAAA,MACjB4E,EAAsCC,IAA9B3B,EAAkB0B,EAAlB1B,mBAAyB0B,EAAL9B,OAI5BnF,EAAAA,EAAAA,YAAU,WACRoC,GAAS+E,EAAAA,EAAAA,IAAc5B,GAKzB,GAAG,CAACA,EAAoBnD,GAC1B,C,8CCLA,IAdqB,SAACgF,EAAuBC,GAC3C,IAAIC,EAAiCD,EAUrC,OARID,EAAQG,YACVD,GACErG,EAAAA,EAAAA,KAACuG,EAAAA,EAAO,CAACC,UAAU,SAAS5C,KAAK,KAAK6C,QAAQ,YAAWxG,UACvDD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,kBAAiBF,SAAC,kBAKjC,CAAEoG,WAAAA,EACX,C,+CCIA,IAjBsB,WAAO,IAADvD,EAClB4D,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMF,UAAU,IAAjEA,WAaR,MAAO,CAAEG,4BAVPH,IACc,QADJ5D,GAAAgE,EAAAA,EAAAA,GACNJ,UAAU,IAAA5D,OAAA,EAAdA,EAAiBnD,KAAI,SAACoH,GACpB,IAAMC,EAAoB,IAAInI,KAAKkI,GACnC,OAAO,IAAIE,KAAKC,eAAe,QAAS,CACtCC,KAAM,UACNtB,MAAO,OACPuB,SAAU,QACTC,OAAOL,EACZ,KAGJ,C,qCCLA,IAXqB,WACnB,IACMM,GADe3E,EAAAA,EAAAA,MAAbC,SACkB2E,MAAM,KAAK/B,OAAO,GAAG,GACzCgC,EAAsB,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAU9B,MAAM,EAAG,GACjCiC,EAAuB,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAU9B,OAAO,GAItC,MAAO,CAAE8B,SAAAA,EAAUE,YAAAA,EAAaC,aAAAA,EAAcC,aAFzB,gBAAgBC,KAAKL,GAG5C,C,+CCSA,IAlBuB,WACrB,IAAAjJ,GAAsCC,EAAAA,EAAAA,UAASsJ,OAAOC,YAAWtJ,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DwC,EAAWtC,EAAA,GAAEuJ,EAAcvJ,EAAA,GAclC,OAbAQ,EAAAA,EAAAA,YAAU,WACR,IAAMgJ,EAAe,WACnBD,EAAeF,OAAOC,WACxB,EAGA,OAFAD,OAAO9H,iBAAiB,SAAUiI,GAE3B,WACLH,OAAOI,oBAAoB,SAAUD,EACvC,CACF,GAAG,IAII,CAAElH,YAAAA,EACX,C,gICQA,EAjBsB,SAACD,GAAkB,IAADqH,EACtC,OACEzH,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAApB,SAAA,EACEO,EAAAA,EAAAA,MAAA,MAAIL,UAAU,KAAIF,SAAA,CAAEW,EAAMmB,OAAO,KAAoB,QAAlBkG,EAACrH,EAAMsH,mBAAW,IAAAD,OAAA,EAAjBA,EAAmBE,WAEvD3H,EAAAA,EAAAA,MAAC4H,EAAAA,EAAS,CAACjI,UAAU,eAAcF,SAAA,EAC/BW,EAAMsH,cACNlI,EAAAA,EAAAA,KAACoI,EAAAA,EAAUC,KAAI,CAAClI,UAAU,kCAAiCF,SAAC,gBAI7DW,EAAMX,cAIf,E,gFCyBA,EAnCoB,SAACW,GACnB,IAAA0B,GACEC,EAAAA,EAAAA,MADMC,EAAMF,EAANE,OAAQC,EAAUH,EAAVG,WAAYC,EAAaJ,EAAbI,cAGtB4F,EAAgB9F,EAAO+F,SAAW,IAClCC,EAA0B,+CAAArD,OAAkDmD,EAAa,yBAAAnD,OAAwBmD,EAAa,MAEpI,OACEtI,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,SACGW,EAAM6H,aAAa9I,KAAI,SAAAyC,GACtB,OACEpC,EAAAA,EAAAA,KAACoD,EAAAA,EAAKC,MAAK,CAETlD,UAAU,uCAAsCF,UAEhDD,EAAAA,EAAAA,KAACoD,EAAAA,EAAKsF,MAAK,CACTjF,KAAMrB,EACNc,IAAK,EACL9D,IAAK,IACLgD,MAAOI,EAAOJ,GACdsB,SAAU,SAAAlC,GAAC,OAAIkB,EAAcN,EAAOZ,EAAEG,OAAOS,MAAM,EACnDuB,OAAQlB,EACRtC,UAAU,iCACVC,MAAO,CACLC,OAAQ,GACRsI,WAAYH,MAbXpG,EAkBX,KAGN,ECdA,EApBuB,SAACxB,GACtB,IAKqBgI,EAAAC,EAIjBC,EAAAC,EATIvG,GAAWD,EAAAA,EAAAA,MAAXC,OAGJwG,IAFcrC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMqC,UAAU,IAA5DpD,MAEM,IAEVjF,EAAMsI,aAED,OAALtI,QAAK,IAALA,GAAgB,QAAXgI,EAALhI,EAAOsI,iBAAS,IAAAN,OAAX,EAALA,EAAkBO,iBAAsB,OAALvI,QAAK,IAALA,GAAgB,QAAXiI,EAALjI,EAAOsI,iBAAS,IAAAL,OAAX,EAALA,EAAkBO,iBAC9C,OAAN5G,QAAM,IAANA,OAAM,EAANA,EAAQ+F,YAETS,EAAO,QAAA7D,QACA,OAALvE,QAAK,IAALA,GAAgB,QAAXkI,EAALlI,EAAOsI,iBAAS,IAAAJ,OAAX,EAALA,EAAkBK,iBAAsB,OAALvI,QAAK,IAALA,GAAgB,QAAXmI,EAALnI,EAAOsI,iBAAS,IAAAH,OAAX,EAALA,EAAkBK,eAAa,QAKxE,OAAOpJ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBF,SAAE+I,GAC5C,E,UCLA,EAnBqB,SAACpI,GAAkB,IAADgI,EAK/BS,EAAS,8BACf,OACE7I,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4CAA2CF,SAAA,EACxDD,EAAAA,EAAAA,KAAA,OAAKG,UAAWkJ,EAAOpJ,SAAC,QAAS,aACjB,OAALW,QAAK,IAALA,GAAgB,QAAXgI,EAALhI,EAAOsI,iBAAS,IAAAN,OAAX,EAALA,EAAkBL,SAAS,MACtC/H,EAAAA,EAAAA,MAAA,OAAKL,UAAU,wBAAwBC,MAAO,CAAEK,MAAO,QAASR,SAAA,EAC9DD,EAAAA,EAAAA,KAACsJ,EAAAA,EAAU,CAACzG,WAVK,CACrB,CAAET,MAAO,WAAYY,KAAM,SAAUC,cAAc,MASL,SAC1CjD,EAAAA,EAAAA,KAAA,OAAAC,SAAK,UAEPD,EAAAA,EAAAA,KAAA,OAAKG,UAAWkJ,EAAOpJ,SAAC,YAG9B,E,kDC2DA,EA9DuB,SAACiJ,EAA8CK,EAAmBC,GACvF,IAAAC,GAAsCC,EAAAA,EAAAA,KAEtCC,GAFmBF,EAAXjC,YAAyBiC,EAAZhC,cAEUmC,EAAAA,EAAAA,OAAwBC,GAAArL,EAAAA,EAAAA,GAAAmL,EAAA,GAAhDG,EAAWD,EAAA,GAAE1D,EAAO0D,EAAA,GA6BrBE,IA5BW3I,EAAAA,EAAAA,MA4BH,eAAA0B,GAAAkH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO3H,GAAuB,OAAAyH,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACzCrB,EAAU,CAADmB,EAAAE,KAAA,cAEA,OAATrB,QAAS,IAATA,OAAS,EAATA,EAAWC,iBAA0B,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWE,iBAChC,OAAN5G,QAAM,IAANA,OAAM,EAANA,EAAQ+F,WAAQ,CAAA8B,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAQT,GARSH,EAAAI,GAKrBvB,GACE1G,EAAO+F,UACPgB,GACAC,GAAUa,EAAAI,GAAA,CAAAJ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACHT,EAAY,CACjB3C,KAAMoC,EACN1D,MAAO2D,EACPN,WAASwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJxB,GAAS,IACZX,UAAW/F,EAAO+F,SAClBoC,cACGnI,EAAO+F,SACRW,EAAUE,cACVF,EAAUC,mBAEd,wBAAAkB,EAAAO,OAAA,GAAAT,EAAE,KACP,gBAzBaU,GAAA,OAAA/H,EAAAgI,MAAA,KAAAC,UAAA,MA2Bd,MAAO,CAAEC,cA7Ba,CAAEzC,SAAU,GA6BVwB,SAAAA,EAAU5D,QAAAA,EACpC,ECnBA,EA7CyB,SAACvF,GAAkB,IAADqK,EAAAC,EAAAC,EAAAC,EACnC7B,EAAwC,QAA/B0B,EAAkB,QAAlBC,EAAGtK,EAAMmG,iBAAS,IAAAmE,OAAA,EAAfA,EAAiB1F,MAAM,EAAG,UAAE,IAAAyF,EAAAA,EAAI,GAC5CzB,EAAsC,QAA5B2B,EAAkB,QAAlBC,EAAGxK,EAAMmG,iBAAS,IAAAqE,OAAA,EAAfA,EAAiB5F,MAAM,UAAE,IAAA2F,EAAAA,EAAI,GAElCjC,GAAcmC,EAAAA,EAAAA,IAAiB,CAC3ClE,KAAe,OAAToC,QAAS,IAATA,EAAAA,EAAa,GACnB1D,MAAiB,OAAV2D,QAAU,IAAVA,EAAAA,EAAc,KAFf8B,KAKRC,EAA6CC,EAC3CtC,EACAK,EACAC,GAHMwB,EAAaO,EAAbP,cAAejB,EAAQwB,EAARxB,SAAU5D,EAAOoF,EAAPpF,QAMzBE,GAAeoF,EAAAA,EAAAA,GACrBtF,GACAnG,EAAAA,EAAAA,KAAC0L,EAAAA,IAAmB,CAClBvL,UAAU,eACVC,MAAO,CAAEuL,SAAU,aAJftF,WAQR,OACErG,EAAAA,EAAAA,KAAC4L,EAAAA,GAAM,CAACZ,cAAeA,EAAejB,SAAUA,EAAS9J,UACvDO,EAAAA,EAAAA,MAAC4C,EAAAA,GAAI,CAACjD,UAAU,YAAWF,SAAA,EACzBD,EAAAA,EAAAA,KAAC6L,EAAY,CAAC3C,UAAWA,KAEzBlJ,EAAAA,EAAAA,KAAC8L,EAAW,CAACrD,aAAc,CAAC,eAE5BjI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,yDAAwDF,SAAA,EACrED,EAAAA,EAAAA,KAAC+L,EAAc,CAAC7C,UAAWA,KAC3BlJ,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACLe,KAAK,SACLgJ,SAAU7F,EAAQG,UAClBnG,UAAU,6IAA4IF,SAErJoG,WAMb,E,UC5Da4F,EAA0B,yC,iDC8BvC,EApBmB,SAACrL,GAClB,IAAQ8F,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMF,UAAU,IAAjEA,WAEFwF,GAAa,OAALtL,QAAK,IAALA,OAAK,EAALA,EAAOsL,SAASC,EAAAA,EAAAA,GAA2B,OAALvL,QAAK,IAALA,OAAK,EAALA,EAAOsL,OAE3D,OACElM,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAEK,MAAO,OAAQR,UAC3BO,EAAAA,EAAAA,MAAC4L,EAAAA,GAAI,CACHC,GAAE,YAAAlH,OAAwB,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAa9F,EAAMgF,MACnCzF,UAAU,yDAAwDF,SAAA,EAElED,EAAAA,EAAAA,KAACsM,EAAAA,IAAW,CACVnM,UAAU,2BAEX+L,MAIT,E,oBCkDA,EAzDqB,SAACtL,IACHQ,EAAAA,EAAAA,MAAjB,IACAmL,GAA+BC,EAAAA,EAAAA,MAAwBC,GAAAjO,EAAAA,EAAAA,GAAA+N,EAAA,GAAhDG,EAAWD,EAAA,GAAEtG,EAAOsG,EAAA,GACnBpG,GAAeoF,EAAAA,EAAAA,GACrBtF,GACAnG,EAAAA,EAAAA,KAAC2M,EAAAA,IAAgB,CAACxM,UAAU,8BAFtBkG,WAIAK,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMF,UAAU,IAAjEA,WAERrI,IADkBsI,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMgG,KAAK,IAAvDC,OACoCvO,EAAAA,EAAAA,WAAS,IAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDyO,EAAcvO,EAAA,GAAEwO,EAAiBxO,EAAA,GAOlCyO,EAAgB,eAAAlK,GAAAkH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAhD,EAAAtB,EAAA,OAAAoE,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACd,OAAL3J,QAAK,IAALA,IAAAA,EAAOmG,WAAuB,OAAVL,QAAU,IAAVA,IAAAA,EAAY1E,SAASpB,EAAMmG,WAAU,CAAAsD,EAAAE,KAAA,QAEpB,OADjCpD,EAAOvG,EAAMmG,UAAUvB,MAAM,EAAG,GAChCK,EAAQjF,EAAMmG,UAAUvB,OAAO,GAAE6E,EAAAE,KAAA,EACjCmC,EAAY,CAAEvF,KAAMA,EAAMtB,MAAOA,IAAS,KAAD,mBAAAwE,EAAAO,OAAA,GAAAT,EAAA,KAElD,kBANqB,OAAArH,EAAAgI,MAAA,KAAAC,UAAA,KAgBtB,OACEvK,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAApB,SAAA,EACED,EAAAA,EAAAA,KAACiN,EAAAA,EAAK,CACJ/K,OAAQ8K,EACR1L,UAAWwL,EACXlL,aAAcmL,EACdhL,OAAQ,mCAEV/B,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CACL+J,SAAU7F,EAAQG,UAClB/E,QAAS,kBACPmF,IAhCaK,EAgCaL,EAAW9F,EAAMgF,KAAMhF,EAAMgF,IA/B7DhF,EAAMsM,aAAanG,QACnBgG,GAAkB,IAFA,IAAChG,CAgC8C,EAE7D5G,UAAU,sCAAqCF,SAE9CyG,GAAc9F,EAAMmG,YAAcL,EAAW9F,EAAMgF,KAClDS,GAEArG,EAAAA,EAAAA,KAAC2M,EAAAA,IAAgB,CAACxM,UAAU,iCAKtC,ECHA,EAtD0B,SAACS,GACzB,IAAAvC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlC8O,EAAM5O,EAAA,GAAE6O,EAAO7O,EAAA,GAOtB,OACEiC,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAApB,SAAA,EACEO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4BAA2BF,SAAA,EACxCD,EAAAA,EAAAA,KAACqN,EAAU,CAACnB,MAAOtL,EAAM0M,kBAAmB1H,IAAOhF,EAAMgF,OACzDpF,EAAAA,EAAAA,MAACyB,EAAAA,EAAM,CACLV,QAAS,WACPX,EAAM2M,WACN3M,EAAMuM,SAXdvM,EAAM4M,sBAAsB,GAC5BJ,GAAQ,SAAA9C,GAAI,OAAKA,CAAI,IAYf,EACA,gBAAe6C,EACf,gBAAc,wBACdvJ,KAAK,KACLzD,UAAS,qFACTC,MAAO,CACLqN,WAAY,uBACZxN,SAAA,CACH,kBAECD,EAAAA,EAAAA,KAAC0N,EAAAA,IAA0B,CACzBvN,UAAU,OACVC,MAAO,CACLuN,UAAU,GAADxI,OAAKvE,EAAMuM,OAAS,iBAAmB,GAAE,KAClDS,mBAAoB,eAI1B5N,EAAAA,EAAAA,KAAC6N,EAAY,CACXjI,IAAKhF,EAAMgF,IACXmB,UAAWnG,EAAMmG,UACjBmG,aAActM,EAAMsM,mBAGxBlN,EAAAA,EAAAA,KAAC8N,EAAAA,EAAQ,CAACC,GAAInN,EAAMuM,OAAOlN,UACzBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnBW,EAAMuM,OACLvM,EAAMX,UAEND,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAEC,OAAQ,gBAMlC,ECZA,EAlDmB,WACjB,IAAQwG,GAAgCmH,EAAAA,EAAAA,KAAhCnH,4BACAH,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMF,UAAU,IAAjEA,WACRrI,GAAkDC,EAAAA,EAAAA,UAChD,MACDC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFM4P,EAAiB1P,EAAA,GAAEiP,EAAoBjP,EAAA,GAG9C6F,GAA0C9F,EAAAA,EAAAA,WAAS,GAAM+F,GAAA7F,EAAAA,EAAAA,GAAA4F,EAAA,GAAlD8J,EAAc7J,EAAA,GAAE8J,EAAe9J,EAAA,GACtC+J,GAAkC9P,EAAAA,EAAAA,UAAS,IAAG+P,GAAA7P,EAAAA,EAAAA,GAAA4P,EAAA,GAAvCrH,EAASsH,EAAA,GAAEnB,EAAYmB,EAAA,GAU9B,OACErO,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,SAC8B,OAA3B4G,QAA2B,IAA3BA,OAA2B,EAA3BA,EAA6BlH,KAC5B,SAAC2N,EAA2B1H,GAC1B,OACE5F,EAAAA,EAAAA,KAACoI,EAAAA,EAAUC,KAAI,CAEblI,UAAW8L,EAAwBhM,UAGjCD,EAAAA,EAAAA,KAACsO,EAAiB,CAChBhB,kBAAmBA,EACnBvG,UAAWA,EACXoG,OAAQvH,IAAQqI,EAChBT,qBAAsBA,EACtBU,eAAgBA,EAChBX,SAAU,kBACR7G,GAzBE,SAACK,EAAmBnB,GACtCsH,EAAanG,GACbyG,EAAqB5H,GACrBc,GACEK,IAAcL,EAAWd,IACzBuI,GAAgB,SAAA7D,GAAI,OAAKA,CAAI,GACjC,CAmBgCiE,CAAY7H,EAAWd,GAAMA,EAAI,EAEjDA,IAAKA,EACLsH,aAAcA,EAAajN,UAE3BD,EAAAA,EAAAA,KAACwO,EAAgB,CAACzH,UAAWL,GAAcA,EAAWd,QAhBrD0H,EAqBX,KAIR,E,UCuBA,EAjEkB,WAChB,IAAAmB,GAA8BC,EAAAA,EAAAA,MAAuBC,GAAAnQ,EAAAA,EAAAA,GAAAiQ,EAAA,GAA9CG,EAAUD,EAAA,GAAExI,EAAOwI,EAAA,GAClBtI,GAAeoF,EAAAA,EAAAA,GACrBtF,GACAnG,EAAAA,EAAAA,KAAC2M,EAAAA,IAAgB,CAACxM,UAAU,8BAFtBkG,WAIAwI,GAAclI,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMiI,SAAS,IAA/DA,UAERxQ,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCyQ,EAAQvQ,EAAA,GAAEwQ,EAAWxQ,EAAA,GAC5B6F,GAA4C9F,EAAAA,EAAAA,WAAS,GAAM+F,GAAA7F,EAAAA,EAAAA,GAAA4F,EAAA,GAApD0I,EAAczI,EAAA,GAAE0I,EAAiB1I,EAAA,GAOlC2K,EAAe,eAAAlM,GAAAkH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA8E,EAAA,OAAAhF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAClBuE,EAAS,CAADzE,EAAAE,KAAA,QAIQ,GAHZ0E,EAA8B,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWK,QACpC,SAACC,GAAe,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAML,YAAaA,CAAQ,IACjDzE,EAAAI,GACDwE,GAAkB5E,EAAAI,GAAA,CAAAJ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAAWqE,EAAWK,GAAmB,OAC3DlC,GAAkB,GAAO,wBAAA1C,EAAAO,OAAA,GAAAT,EAAA,KAE5B,kBARoB,OAAArH,EAAAgI,MAAA,KAAAC,UAAA,KAUrB,OACEvK,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAApB,SAAA,EACED,EAAAA,EAAAA,KAACiN,EAAAA,EAAK,CACJ/K,OAAQ8M,EACR1N,UAAWwL,EACXlL,aAAcmL,EACdhL,OAAQ,sCAEA,OAAT8M,QAAS,IAATA,OAAS,EAATA,EAAWlP,KAAI,SAAAwP,GACd,OACEnP,EAAAA,EAAAA,KAACoI,EAAAA,EAAUC,KAAI,CAEblI,UAAW8L,EACX7L,MAAO,CACLG,gBAAiB4O,EAAKC,UACtBrO,SAAU,UACVd,UAEFO,EAAAA,EAAAA,MAACyB,EAAAA,EAAM,CACLV,QAAS,kBAlCD,SAACuN,GACnBC,EAAYD,GACZ/B,GAAkB,EACpB,CA+B2BsC,CAAYF,EAAKL,SAAS,EACzC9C,SAAU7F,EAAQG,UAClBnG,UL5DZ,2FK6DYC,MAAO,CAAEkP,MAAOH,EAAKC,WAAYnP,SAAA,CAEhCkP,EAAKL,SAELA,IAAaK,EAAKL,SACjBzI,GAEArG,EAAAA,EAAAA,KAAC2M,EAAAA,IAAgB,CAACxM,UAAU,iCAlB3BgP,EAAKL,SAuBhB,MAGN,E,UCnCA,EAnCuB,YACrBS,EAAAA,EAAAA,KACA,IAAQ7I,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMF,UAAU,IAAjEA,WACAmI,GAAclI,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMiI,SAAS,IAA/DA,UACAhO,GAAgBC,EAAAA,EAAAA,KAAhBD,YAER,OACEb,EAAAA,EAAAA,KAAA,OACEG,UAAU,iCACVC,MAAO,CACLC,OAAQQ,GAAe,IAAM,aAAe,sBAC5CE,SAAU,cACVyO,QAAS,kBACTC,gBAAiB,UACjBxP,UAEFO,EAAAA,EAAAA,MAAA,OACEJ,MAAO,CACLa,SAAU,QACVR,MAAO,QACPR,SAAA,EAEFD,EAAAA,EAAAA,KAAC0P,EAAa,CAAC3N,OAAQ,yBAAqBmG,YAAaxB,EAAWzG,UAClED,EAAAA,EAAAA,KAAC2P,EAAU,OAEb3P,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iBAEfH,EAAAA,EAAAA,KAAC0P,EAAa,CAAC3N,OAAQ,4BAAwBmG,YAAa2G,EAAU5O,UACpED,EAAAA,EAAAA,KAAC4P,EAAS,UAKpB,ECSA,EA5C2B,WACzB,IAOIC,EAPJC,GAA+CnJ,EAAAA,EAAAA,KAC7C,SAACC,GAAgB,OAAKA,EAAMiI,SAAS,IAD/BkB,EAAcD,EAAdC,eAAgBC,EAAkBF,EAAlBE,mBAGxBC,GAAiDtJ,EAAAA,EAAAA,KAC/C,SAACC,GAAgB,OAAKA,EAAMF,UAAU,IADhCwJ,EAAeD,EAAfC,gBAAiBC,EAAmBF,EAAnBE,oBAMzB,GAAIH,GAAsBG,EACxBN,GAAeO,EAAAA,EAAAA,IACbpQ,EAAAA,EAAAA,KAACuG,EAAAA,EAAO,CAACC,UAAU,SAASC,QAAQ,YAAWxG,UAC7CD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,kBAAiBF,SAAC,uBAGjC,GAAI8P,GACT,GAAI,WAAYA,EAAgB,CAC9B,IAAMM,EAAS,WAAYN,GAAkBA,EAAeO,OAE5DT,GAAeO,EAAAA,EAAAA,IACb5P,EAAAA,EAAAA,MAAA,MAAIL,UAAU,uBAAsBF,SAAA,EAClCO,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAApB,SAAA,CAAE,oBAAQoQ,KAAU,KAACrQ,EAAAA,EAAAA,KAAA,UACrBA,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,SAAE,qCAGR,OACK,GAAIiQ,GACT,GAAI,WAAYA,EAAiB,CAC/B,IAAMG,EAAS,WAAYH,GAAmBA,EAAgBI,OAE9DT,GAAeO,EAAAA,EAAAA,IACb5P,EAAAA,EAAAA,MAAA,MAAIL,UAAU,uBAAsBF,SAAA,EAClCO,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAApB,SAAA,CAAE,oBAAQoQ,KAAU,KAACrQ,EAAAA,EAAAA,KAAA,UACrBA,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,SAAE,qCAGR,OAEA4P,GAAe7P,EAAAA,EAAAA,KAACuQ,EAAc,IAGhC,MAAO,CAAEV,aAAAA,EACX,ECxCA,EANsB,WACpB,IAAQA,EAAiBW,IAAjBX,aAER,OAAO7P,EAAAA,EAAAA,KAACyQ,EAAAA,EAAc,CAAAxQ,SAAE4P,GAC1B,C,uDCPO,IAAM1D,EAAwB,SAACuE,GACpC,OAAOA,EACJC,cACApJ,MAAM,KACN5H,KAAI,SAAAiR,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKpL,MAAM,EAAE,IACxDuL,KAAK,IACV,C,oECNaX,EAAoB,SAACY,GAA2B,OAC3DhR,EAAAA,EAAAA,KAAA,OACEG,UAAU,kFACVC,MAAO,CACLa,SAAU,SACVR,MAAO,OACPJ,OAAQ,QACRJ,SAED+Q,GACG,C","sources":["components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/IndexContainer.tsx","components/alert/Alert.tsx","components/inputs/FormErrors.tsx","components/inputs/InputsText.tsx","hooks/useDatabaseListMonths.tsx","hooks/updateReduxDatabase/useReduxListMonths.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx","components/ListContainer.tsx","components/inputs/inputsRange/InputsRange.tsx","components/formHours/FormHoursError.tsx","components/formHours/FormHoursTop.tsx","components/formHours/useFormikHours.tsx","components/formHours/FormHoursContext.tsx","pages/settings/dataStylesSettingsLists.tsx","pages/settings/listMonths/MonthTitle.tsx","pages/settings/listMonths/DeleteButton.tsx","pages/settings/listMonths/CollapseFormHours.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/ListUsers.tsx","pages/settings/indexSettings/SettinsContent.tsx","pages/settings/indexSettings/useRequestSettings.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/capitalizeFirstLetter.tsx","utils/printPanelContent.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n\r\n  useAutoLogout();\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown d-flex\">\r\n            Wylogowanie nastąpi za\r\n            <div\r\n              style={{\r\n                width: \"2rem\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {secondsRemaining + 1}\r\n            </div>\r\n            s.\r\n            <div className=\"w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\nimport AutoLogout from \"./autoLogout/AutoLogout\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex justify-content-center align-items-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst FormErrors = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-8\" style={{ height: \"0.7rem\" }}>\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormErrors;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormErrors from \"./FormErrors\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n const { pathname } = useLocation();\r\n \r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({ value, label, type, isErrorPrint, min, max, placeholder }) => {\r\n          return (\r\n            <Form.Group key={value}>\r\n              {label && (\r\n                <Form.Label\r\n                  htmlFor=\"date\"\r\n                  className=\"mb-0 fs-responsive fw-medium\"\r\n                >\r\n                  {label}\r\n                </Form.Label>\r\n              )}\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className=\"p-0 px-1 border border-primary shadow-sm w-100 text-capitalize\"\r\n                style={{ minHeight: 0  }}\r\n              />\r\n              {isErrorPrint && (\r\n                <FormErrors value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","import { onValue, ref } from \"firebase/database\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { database } from \"../data/firebaseConfig\";\r\n\r\nconst useDatabaseListMonths = () => {\r\n  const reference = ref(database);\r\n  const [error, setError] = useState(\"\");\r\n  const [databaseListMonths, setDatabaseListMonths] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(\r\n      reference,\r\n      snapshot => {\r\n        let keysYears: string[] = [];\r\n        let monthsCollection: any = [];\r\n\r\n        snapshot?.forEach((firstLevelSnapshot: any) => {\r\n          const firstLevelKey = firstLevelSnapshot.key;\r\n          keysYears.push(firstLevelKey);\r\n\r\n          const nestedKeysRef = ref(database, `${firstLevelKey}`);\r\n          onValue(\r\n            nestedKeysRef,\r\n            nestedSnapshot => {\r\n              let keysMonths: string[] = [];\r\n\r\n              nestedSnapshot?.forEach((nestedKeySnapshot: any) => {\r\n                const nestedKey = nestedKeySnapshot.key;\r\n                keysMonths.push(nestedKey.slice(6));\r\n              });\r\n\r\n              monthsCollection.push(keysMonths);\r\n            },\r\n\r\n            nestedError => {\r\n              setError(\"Błąd\");\r\n            }\r\n          );\r\n        });\r\n\r\n        const months = [...monthsCollection]\r\n          .map((monthsInYear, idx) => {\r\n            return monthsInYear.map((month: any) => {\r\n              return keysYears[idx] + \"-\" + month;\r\n            });\r\n          })\r\n          .flat()\r\n          .reverse();\r\n\r\n        setDatabaseListMonths(months);\r\n      },\r\n      error => {\r\n        setError(\"Błąd\");\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n\r\n  return {\r\n    databaseListMonths,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useDatabaseListMonths;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getListMonths,\r\n  getListMonthsError,\r\n  getListMonthsIsLoading,\r\n} from \"../../redux/storeFeatures/listMonthsSlice\";\r\n// import { useListMonthsQuery } from \"../../services/apiSliceMonths\";\r\nimport useDatabaseListMonths from \"../useDatabaseListMonths\";\r\n\r\nconst useReduxListMonths = () => {\r\n  const dispatch = useDispatch();\r\n  const { databaseListMonths, error } = useDatabaseListMonths();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getListMonths(databaseListMonths));\r\n    // dispatch(getListMonths(data));\r\n    // dispatch(getListMonthsError(error));\r\n\r\n    // dispatch(getListMonthsIsLoading(isLoading));\r\n  }, [databaseListMonths, dispatch]);\r\n};\r\n\r\nexport default useReduxListMonths;\r\n\r\n\r\n\r\n\r\n\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  return (\r\n    <>\r\n      <h3 className=\"h6\">{props.header}: {props.listContent?.length}</h3>\r\n\r\n      <ListGroup className=\"border-0 p-0\">\r\n        {!props.listContent && (\r\n          <ListGroup.Item className=\"py-1 px-2 text-warning border-0\">\r\n            Brak danych\r\n          </ListGroup.Item>\r\n        )}\r\n        {props.children}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right, rgba(180,120,255) ${gradientValue}%, rgba(180,180,255) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range custom-range medium\"\r\n              style={{\r\n                height: 10,\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props:Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  var content = \"\";\r\n\r\n  if (props.calcHours) {\r\n    if (\r\n      props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        props?.calcHours?.submittedHours + props?.calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-8\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import InputsText from \"../inputs/InputsText\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursTop = (props: Props) => {\r\n  const dataInputsText = [\r\n    { value: \"allHours\", type: \"number\", isErrorPrint: false },\r\n  ];\r\n\r\n  const styles = \"fs-7 d-flex align-items-end\";\r\n  return (\r\n    <div className=\"d-flex justify-content-between fw-medium \">\r\n      <div className={styles}>0 h</div>\r\n      Zapisane: {props?.calcHours?.allHours} h\r\n      <div className=\"col-6 col-sm-5 d-flex\" style={{ width: \"62px\" }}>\r\n        <InputsText inputsData={dataInputsText} /> &nbsp;\r\n        <div>h</div>\r\n      </div>\r\n      <div className={styles}>320 h</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useSelector } from \"react-redux\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport {\r\n  useAddAllHoursMutation,\r\n  useMonthDataQuery,\r\n} from \"../../services/apiSliceMonths\";\r\nimport useReduxMonthData from \"../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { ModelCalcHours } from \"../../sharedModels/modelCalcHours\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (calcHours: ModelCalcHours | null | undefined, yearValue: string, monthValue: string) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  // const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  // const yearValue = month?.id.slice(0, 4);\r\n  // const monthValue = month?.id.slice(-2);\r\n\r\n  // const {\r\n  //   data: month,\r\n  //   error,\r\n  //   isLoading,\r\n  // } = useMonthDataQuery({\r\n  //   year: yearValue ?? \"\",\r\n  //   month: monthValue ?? \"\",\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getMonth(data));\r\n\r\n  //   dispatch(getMonthError(error));\r\n\r\n  //   dispatch(getMonthIsLoading(isLoading));\r\n  // }, [data, error, isLoading, dispatch]);\r\n\r\n  // console.log('form',month)\r\n\r\n\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport InputsRange from \"../inputs/inputsRange/InputsRange\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\nimport {\r\n  useAllHoursQuery,\r\n  useMonthDataQuery,\r\n} from \"../../services/apiSliceMonths\";\r\n\r\ntype Props = {\r\n  monthDate?: string | null;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const yearValue = props.monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = props.monthDate?.slice(5) ?? \"\";\r\n\r\n  const { data: calcHours } = useAllHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    calcHours,\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <AiOutlinePlusCircle\r\n      className=\"text-primary\"\r\n      style={{ fontSize: \"1.4rem\" }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop calcHours={calcHours} />\r\n\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mt-2\">\r\n          <FormHoursError calcHours={calcHours} />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={success.isLoading}\r\n            className=\"col-2 d-flex justify-content-center align-items-center m-0 justify-content-center p-0 m-0 ms-1  text-info-emphasis border-0 bg-transparent\"\r\n          >\r\n            {btnContent}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","export const dataStylesListGroupItem = \"shadow-sm p-0 mb-2 ps-2 pe-0 rounded-1\";\r\nexport const dataStylesButton =\r\n  \"w-100 d-flex justify-content-between align-items-center px-1 rounded-0 bg-white border-0\";\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalizeFirstLetter } from \"../../../utils/capitalizeFirstLetter\";\r\n\r\ntype Props = {\r\n  title?: string | null;\r\n  idx: number;\r\n};\r\nconst MonthTitle = (props: Props) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const title = props?.title && capitalizeFirstLetter(props?.title)\r\n  \r\n  return (\r\n    <div style={{ width: \"45%\" }}>\r\n      <Link\r\n        to={`/godziny/${listMonths?.[props.idx]}`}\r\n        className=\"text-decoration-none fs-responsive text-dark fw-medium\"\r\n      >\r\n        <ImArrowLeft\r\n          className=\"fs-6 me-1 text-primary\"\r\n        />\r\n        {title}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport { useDeleteMonthMutation } from \"../../../services/apiSliceMonths\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../../redux/storeFeatures/alertSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  agreeAlert,\r\n  closeAlert,\r\n} from \"../../../redux/storeFeatures/alertSlice\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n  monthDate?: string | null;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst DeleteButton = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { agree } = useSelector((state: RootState) => state.alert);\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (monthDate: string, idx: number) => {\r\n    props.setMonthDate(monthDate);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteMonthAsync = async () => {\r\n    if (props?.monthDate && listMonths?.includes(props.monthDate)) {\r\n      const year = props.monthDate.slice(0, 4);\r\n      const month = props.monthDate.slice(-2);\r\n      await deleteMonth({ year: year, month: month });\r\n    }\r\n  };\r\n\r\n  // console.log(\"button\", agree);\r\n\r\n  // useEffect(() => {\r\n  //   deleteMonthAsync();\r\n  //   dispatch(agreeAlert(false));\r\n  //   dispatch(closeAlert());\r\n  // }, [agree]);\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteMonthAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć miesiąc\"}\r\n      />\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={() =>\r\n          listMonths && handleAlert(listMonths[props.idx], props.idx)\r\n        }\r\n        className=\"ms-auto bg-transparent border-0 p-1\"\r\n      >\r\n        {listMonths && props.monthDate === listMonths[props.idx] ? (\r\n          btnContent\r\n        ) : (\r\n          <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n        )}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { ReactNode, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport MonthTitle from \"./MonthTitle\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\ntype Props = {\r\n  monthDateToString?: string | null;\r\n  monthDate?: string | null;\r\n  children: ReactNode;\r\n  isOpen: boolean;\r\n  setOpenCollapseIndex: React.Dispatch<React.SetStateAction<number | null>>;\r\n  isOpenCollapse: boolean;\r\n  onToggle: () => void;\r\n  idx: number;\r\n  setMonthDate: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\nconst CollapseFormHours = (props: Props) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    props.setOpenCollapseIndex(-1);\r\n    setOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle title={props.monthDateToString} idx = {props.idx}/>\r\n        <Button\r\n          onClick={() => {\r\n            props.onToggle();\r\n            props.isOpen && handleOpen();\r\n      \r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`fw-medium fs-responsive d-flex justify-content-between align-items-center p-0 ps-1`}\r\n          style={{\r\n            transition: \"border-radius 420ms\",\r\n          }}\r\n        >\r\n          Zapisz godziny\r\n          <MdOutlineKeyboardArrowDown\r\n            className=\"fs-3\"\r\n            style={{\r\n              transform: `${props.isOpen ? \"rotate(180deg)\" : \"\"} `,\r\n              transitionDuration: \"320ms\",\r\n            }}\r\n          />\r\n        </Button>\r\n        <DeleteButton\r\n          idx={props.idx}\r\n          monthDate={props.monthDate}\r\n          setMonthDate={props.setMonthDate}\r\n        />\r\n      </div>\r\n      <Collapse in={props.isOpen}>\r\n        <div className=\" pe-1\">\r\n          {props.isOpen ? (\r\n            props.children\r\n          ) : (\r\n            <div style={{ height: \"88px\" }}></div>\r\n          )}\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseFormHours;\r\n","import { useState } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormHoursContext from \"../../../components/formHours/FormHoursContext\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { dataStylesListGroupItem } from \"../dataStylesSettingsLists\";\r\nimport CollapseFormHours from \"./CollapseFormHours\";\r\n\r\nconst ListMonths = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [openCollapseIndex, setOpenCollapseIndex] = useState<number | null>(\r\n    null\r\n  );\r\n  const [isOpenCollapse, setCollapseOpen] = useState(false);\r\n  const [monthDate, setMonthDate] = useState(\"\");\r\n\r\n  const handleTogle = (monthDate: string, idx: number) => {\r\n    setMonthDate(monthDate);\r\n    setOpenCollapseIndex(idx);\r\n    listMonths &&\r\n      monthDate === listMonths[idx] &&\r\n      setCollapseOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {databaseMonthsDatesToString?.map(\r\n        (monthDateToString: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item\r\n              key={monthDateToString}\r\n              className={dataStylesListGroupItem}\r\n            >\r\n             \r\n                <CollapseFormHours\r\n                  monthDateToString={monthDateToString}\r\n                  monthDate={monthDate}\r\n                  isOpen={idx === openCollapseIndex}\r\n                  setOpenCollapseIndex={setOpenCollapseIndex}\r\n                  isOpenCollapse={isOpenCollapse}\r\n                  onToggle={() =>\r\n                    listMonths && handleTogle(listMonths[idx], idx)\r\n                  }\r\n                  idx={idx}\r\n                  setMonthDate={setMonthDate}\r\n                >\r\n                  <FormHoursContext monthDate={listMonths && listMonths[idx]} />\r\n                </CollapseFormHours>\r\n            \r\n             </ListGroup.Item>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import { useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../components/alert/Alert\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useDeleteUserMutation } from \"../../services/apiSliceUsers\";\r\nimport { ModelUser } from \"../../sharedModels/modelUser\";\r\nimport {\r\n  dataStylesButton,\r\n  dataStylesListGroupItem,\r\n} from \"./dataStylesSettingsLists\";\r\n\r\nconst ListUsers = () => {\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n  );\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = (userName: string) => {\r\n    setUserName(userName);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (userName) {\r\n      const userBodyPUTRequest = listUsers?.filter(\r\n        (user: ModelUser) => user?.userName !== userName\r\n      );\r\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\r\n      setIsAlertPrinted(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Alert\r\n        action={deleteUserAsync}\r\n        isPrinted={isAlertPrinted}\r\n        setIsPrinted={setIsAlertPrinted}\r\n        header={\"Usunąć użytkownika\"}\r\n      />\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={dataStylesListGroupItem}\r\n            style={{\r\n              backgroundColor: user.userColor,\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => handleAlert(user.userName)}\r\n              disabled={success.isLoading}\r\n              className={dataStylesButton}\r\n              style={{ color: user.userColor }}\r\n            >\r\n              {user.userName}\r\n\r\n              {userName === user.userName ? (\r\n                btnContent\r\n              ) : (\r\n                <RiDeleteBin6Line className=\"text-danger fs-5 ms-auto\" />\r\n              )}\r\n            </Button>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListContainer from \"../../../components/ListContainer\";\r\nimport useReduxListMonths from \"../../../hooks/updateReduxDatabase/useReduxListMonths\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\nimport ListUsers from \"../ListUsers\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\n\r\nconst SettinsContent = () => {\r\n  useReduxListMonths();\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-white p-2 py-4 p-sm-4 w-100\"\r\n      style={{\r\n        height: windowWidth >= 500 ? \"calc(100%)\" : \"calc(100% - 2.5rem)\",\r\n        overflow: \"hidden auto\",\r\n        outline: \"4px solid white\",\r\n        scrollbarGutter: \"stable\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: \"480px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ListContainer header={\"Zapisane miesiące\"} listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n        <div className=\"border my-4\"></div>\r\n\r\n        <ListContainer header={\"Zapisani użytkownicy\"} listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettinsContent;\r\n","import { Spinner } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { printPanelContent } from \"../../../utils/printPanelContent\";\r\nimport SettinsContent from \"./SettinsContent\";\r\n\r\nconst useRequestSettings = () => {\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError, listMonthsIsLoading } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let requestState;\r\n\r\n  if (listUsersIsLoading || listMonthsIsLoading) {\r\n    requestState = printPanelContent(\r\n      <Spinner animation=\"border\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (listUsersError) {\r\n    if (\"status\" in listUsersError) {\r\n      const errMsg = \"status\" in listUsersError && listUsersError.status;\r\n\r\n      requestState = printPanelContent(\r\n        <h3 className=\"text-danger mx-auto \">\r\n          <> Błąd: {errMsg}</> <br />\r\n          <>Odśwież stronę</>\r\n        </h3>\r\n      );\r\n    }\r\n  } else if (listMonthsError) {\r\n    if (\"status\" in listMonthsError) {\r\n      const errMsg = \"status\" in listMonthsError && listMonthsError.status;\r\n\r\n      requestState = printPanelContent(\r\n        <h3 className=\"text-danger mx-auto \">\r\n          <> Błąd: {errMsg}</> <br />\r\n          <>Odśwież stronę</>\r\n        </h3>\r\n      );\r\n    }\r\n  } else {\r\n    requestState = <SettinsContent />;\r\n  }\r\n\r\n  return { requestState };\r\n};\r\nexport default useRequestSettings;\r\n","import IndexContainer from \"../../../components/IndexContainer\";\r\nimport useRequestSettings from \"./useRequestSettings\";\r\n\r\nconst IndexSettings = () => {\r\n  const { requestState } = useRequestSettings();\r\n\r\n  return <IndexContainer>{requestState}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const capitalizeFirstLetter = (inputString: string) => {\r\n  return inputString\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n","export const printPanelContent = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\" d-flex justify-content-center align-items-center fs-3 text-warning text-center\"\r\n    style={{\r\n      maxWidth: \"1000px\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);"],"names":["_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","_jsx","children","id","className","style","height","zIndex","backgroundColor","_jsxs","width","display","justifyContent","props","windowWidth","useWindowWidth","overflow","position","maxWidth","AutoLogout","dispatch","useDispatch","_Fragment","isPrinted","onClick","e","_e$target","_e$target2","target","setIsPrinted","printAlert","handleClose","header","includes","Button","action","touched","value","errors","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","useLocation","pathname","inputsData","_ref","label","type","isErrorPrint","min","placeholder","Form","Group","Label","htmlFor","Control","name","onChange","onBlur","size","minHeight","FormErrors","reference","ref","database","error","setError","_useState3","_useState4","databaseListMonths","setDatabaseListMonths","unsubscribe","onValue","snapshot","keysYears","monthsCollection","forEach","firstLevelSnapshot","firstLevelKey","key","push","nestedKeysRef","concat","nestedSnapshot","keysMonths","nestedKeySnapshot","nestedKey","slice","nestedError","months","monthsInYear","idx","month","flat","reverse","_useDatabaseListMonth","useDatabaseListMonths","getListMonths","success","btnText","btnContent","isLoading","Spinner","animation","variant","listMonths","useSelector","state","databaseMonthsDatesToString","_toConsumableArray","monthDate","monthToDateFormat","Intl","DateTimeFormat","year","timeZone","format","monthURL","split","yearFromURL","monthFromURL","isMonthInURL","test","window","innerWidth","setWindowWidth","handleResize","removeEventListener","_props$listContent","listContent","length","ListGroup","Item","gradientValue","allHours","gradientBackground","inputsValues","Range","background","_props$calcHours","_props$calcHours2","_props$calcHours3","_props$calcHours4","content","monthPanel","calcHours","submittedHours","acceptedHours","styles","InputsText","yearValue","monthValue","_useURLValues","useURLValues","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","t0","_objectSpread","currentHours","stop","_x","apply","arguments","initialValues","_props$monthDate$slic","_props$monthDate","_props$monthDate$slic2","_props$monthDate2","useAllHoursQuery","data","_useFormikHours","useFormikHours","useHTTPState","AiOutlinePlusCircle","fontSize","Formik","FormHoursTop","InputsRange","FormHoursError","disabled","dataStylesListGroupItem","title","capitalizeFirstLetter","Link","to","ImArrowLeft","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","RiDeleteBin6Line","alert","agree","isAlertPrinted","setIsAlertPrinted","deleteMonthAsync","Alert","setMonthDate","isOpen","setOpen","MonthTitle","monthDateToString","onToggle","setOpenCollapseIndex","transition","MdOutlineKeyboardArrowDown","transform","transitionDuration","DeleteButton","Collapse","in","useMonthDates","openCollapseIndex","isOpenCollapse","setCollapseOpen","_useState5","_useState6","CollapseFormHours","handleTogle","FormHoursContext","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","listUsers","userName","setUserName","deleteUserAsync","userBodyPUTRequest","filter","user","userColor","handleAlert","color","useReduxListMonths","outline","scrollbarGutter","ListContainer","ListMonths","ListUsers","requestState","_useSelector","listUsersError","listUsersIsLoading","_useSelector2","listMonthsError","listMonthsIsLoading","printPanelContent","errMsg","status","SettinsContent","useRequestSettings","IndexContainer","inputString","toLowerCase","word","charAt","toUpperCase","join","contentJSX"],"sourceRoot":""}