{"version":3,"file":"static/js/894.2ebb3189.chunk.js","mappings":"kLA+CA,EA5CsB,WACpB,IAAAA,GAAgDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAExCI,EAAa,EAWXC,EAAmB,WACvBD,EAAaE,KAAKC,MAAQ,GAC5B,EAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,YAdP,WACtB,IAAMC,EAAYC,KAAKC,IAAI,EAAGD,KAAKE,OAAOV,EAAaE,KAAKC,OAAS,MACrEJ,EAAoBQ,GAEhBP,EAAaE,KAAKC,OACpBQ,EAAAA,GAAKC,SAET,CAQIC,EACF,GAAG,KAEH,OAAO,kBAAMC,cAAcT,EAAU,CACvC,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACRH,IACA,IAAMc,EAAS,CAAC,YAAa,WAAY,QAAS,UAMlD,OAJAA,EAAOC,KAAI,SAAAC,GACT,OAAOC,SAASC,iBAAiBF,EAAOhB,EAC1C,IAEO,WACLc,EAAOC,KAAI,SAAAC,GACT,OAAOC,SAASC,iBAAiBF,EAAOhB,EAC1C,GACF,CACF,GAAG,IAEI,CAAEH,iBAAAA,EACX,E,SCdA,EA7BmB,WACjB,IAAQA,EAAqBsB,IAArBtB,iBAGR,OAFAsB,KAGEC,EAAAA,EAAAA,KAAA,OAAAC,SACGxB,EAAmB,GAAK,KACvBuB,EAAAA,EAAAA,KAAA,OACEE,GAAG,mBACHC,UAAU,4BACVC,MAAO,CACLC,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,mBACjBN,UAEFO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,2DAA0DF,SAAA,CAAC,+BAExEO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,+BAA8BF,SAAA,CAC1CxB,EAAmB,EAAE,KAACuB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAE9BD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAM3B,ECYA,EAjCuB,SAACM,GACtB,IAAQC,GAAgBC,EAAAA,EAAAA,KAAhBD,YAGR,OACEF,EAAAA,EAAAA,MAAA,QACEL,UAAU,6BACVC,MAAO,CACLC,OAAQ,QACRO,SAAU,SACVC,SAAU,YACVZ,SAAA,EAEFD,EAAAA,EAAAA,KAAA,SACEI,MAAO,CACLU,MAAOJ,GAAe,IAAM,MAAQ,EACpCK,SAAU,QACVV,OAAQ,WAGZG,EAAAA,EAAAA,MAAA,OACEL,UAAU,wBACVC,MAAO,CACLU,MAAOJ,GAAe,IAAM,MAAQ,QACpCT,SAAA,EAEFD,EAAAA,EAAAA,KAACgB,EAAU,IACVP,EAAMR,cAIf,C,kGC6BA,EAxDc,SAACQ,GACb,IAAMQ,GAAWC,EAAAA,EAAAA,MAYjB,OACElB,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAlB,SACGQ,EAAMW,WACLpB,EAAAA,EAAAA,KAAA,OACEE,GAAG,mBACHC,UAAU,sBACVkB,QAAS,SAAAC,GAAC,OAhBE,SAACA,GAAqD,IAADC,EAAAC,EAEnC,sBAAzB,QAATD,EAACD,EAAEG,cAAM,IAAAF,OAAA,EAATA,EAA2BrB,KACO,cAAzB,QAATsB,EAACF,EAAEG,cAAM,IAAAD,OAAA,EAATA,EAA2BtB,MAGpB,OAALO,QAAK,IAALA,GAAAA,EAAOiB,eAAmB,OAALjB,QAAK,IAALA,GAAAA,EAAOiB,cAAa,IAC7CT,GAASU,EAAAA,EAAAA,IAAW,KACtB,CAQsBC,CAAYN,EAAE,EAC5BlB,MAAO,CACLC,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,mBACjBN,UAEFO,EAAAA,EAAAA,MAAA,OACEL,UAAS,2DAA6DF,SAAA,CAErEQ,EAAMoB,QACP7B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,SAClCQ,EAAMoB,OAAOC,SAAS,qBACrBtB,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAlB,SAAA,EACED,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAAC7B,GAAG,WAAUD,SAAC,SACtBD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLV,QAASZ,EAAMuB,OACf7B,UAAU,yBAAwBF,SACnC,YAKHD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAAC7B,GAAG,WAAWmB,QAASZ,EAAMuB,OAAO/B,SAAC,eAQrDD,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,KAIR,C,oCChDA,IAZqB,SAACV,GACpB,OACET,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAlB,SACGQ,EAAMwB,QACLjC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BF,SAAC,oDAMlD,C,8CCEA,IAZuB,SAACQ,GACtB,OACET,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAlB,SACGQ,EAAMwB,QACLjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,CAACC,UAAU,SAASC,QAAQ,YAAYjC,UAAU,OAAMF,UAC9DD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,kBAAiBF,SAAC,mBAK5C,C,8CCEA,IAdqB,SAACoC,EAAuBC,GAC3C,IAAIC,EAAiCD,EAUrC,OARID,EAAQG,YACVD,GACEvC,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,CAACC,UAAU,SAASM,KAAK,KAAKL,QAAQ,YAAWnC,UACvDD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,kBAAiBF,SAAC,kBAKjC,CAAEsC,WAAAA,EACX,C,qCCQA,IAtB4B,WAC1B,IACMG,GADeC,EAAAA,EAAAA,MAAbC,SACkBC,MAAM,GAIhC,GAFqBH,GAAY,gBAAgBI,KAAKJ,GAEpC,CAAC,IAADK,EACVC,EAAuBN,GAAY,IAAI7D,KAAK6D,GAQlD,MAAO,CAAEO,qBANPD,IAKE,QALkBD,EACpB,IAAIG,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,OACPC,SAAU,eACV,IAAAP,OAAA,EAJFA,EAIIQ,OAAOP,IAEf,CAEE,MAAO,CAAEC,qBADoB,GAGjC,C,qCCTA,IAXqB,WACnB,IACMP,GADeC,EAAAA,EAAAA,MAAbC,SACkBY,MAAM,KAAKX,OAAO,GAAG,GACzCY,EAAsB,OAARf,QAAQ,IAARA,OAAQ,EAARA,EAAUG,MAAM,EAAG,GACjCa,EAAuB,OAARhB,QAAQ,IAARA,OAAQ,EAARA,EAAUG,OAAO,GAItC,MAAO,CAAEH,SAAAA,EAAUe,YAAAA,EAAaC,aAAAA,EAAcC,aAFzB,gBAAgBb,KAAKJ,GAG5C,C,+CCSA,IAlBuB,WACrB,IAAArE,GAAsCC,EAAAA,EAAAA,UAASsF,OAAOC,YAAWtF,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DqC,EAAWnC,EAAA,GAAEuF,EAAcvF,EAAA,GAclC,OAbAQ,EAAAA,EAAAA,YAAU,WACR,IAAMgF,EAAe,WACnBD,EAAeF,OAAOC,WACxB,EAGA,OAFAD,OAAO9D,iBAAiB,SAAUiE,GAE3B,WACLH,OAAOI,oBAAoB,SAAUD,EACvC,CACF,GAAG,IAII,CAAErD,YAAAA,EACX,C,mICaA,EApB0B,WACxB,IAAMO,GAAWC,EAAAA,EAAAA,MACjB+C,GAAsCC,EAAAA,EAAAA,KAA9BT,EAAWQ,EAAXR,YAAaC,EAAYO,EAAZP,aACbC,GAAiBO,EAAAA,EAAAA,KAAjBP,aAEFP,EAAOO,EAAeF,EAAc,GACpCJ,EAAQM,EAAeD,EAAe,GAE5CS,GAAmCC,EAAAA,EAAAA,IAAkB,CACnDhB,KAAAA,EACAC,MAAAA,IAFMgB,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAO9B,EAAS2B,EAAT3B,WAKrBzD,EAAAA,EAAAA,YAAU,WACRkC,GAASsD,EAAAA,EAAAA,IAASF,IAClBpD,GAASuD,EAAAA,EAAAA,IAAcF,IACvBrD,GAASwD,EAAAA,EAAAA,IAAkBjC,GAC7B,GAAG,CAAC6B,EAAMC,EAAO9B,EAAWvB,GAC9B,E,mBCJA,EArByB,WACvB,IAAQoC,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MACAJ,GAAyB4B,EAAAA,EAAAA,KAAzB5B,qBAER,OAAKI,GAAuB,MAAT,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOnD,IAcP,MAZVM,EAAAA,EAAAA,MAAA,OACEL,UAAU,yCACVC,MAAO,CACLW,SAAU,SACVD,MAAO,OACPT,OAAQ,QACRJ,SAAA,CACH,+BACyBgD,EAAqB,0CAKrD,E,wCCDA,EAnBqB,WAAO,IAAD6B,EAAAC,EAAAC,EAAAC,EACjB5B,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MAER,OACE7C,EAAAA,EAAAA,MAAA,OAAKL,UAAU,8CAA6CF,SAAA,EAC1DO,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAK,aAAgB,OAALoD,QAAK,IAALA,GAAgB,QAAXyB,EAALzB,EAAO6B,iBAAS,IAAAJ,OAAX,EAALA,EAAkBK,SAAS,gBAE3C3E,EAAAA,EAAAA,MAAA,OACEL,UAAS,GAAAiF,OACP/B,IAAc,OAALA,QAAK,IAALA,GAAgB,QAAX0B,EAAL1B,EAAO6B,iBAAS,IAAAH,OAAX,EAALA,EAAkBM,eAAgB,EAAI,cAAgB,IAC9DpF,SAAA,CAEFoD,IAAc,OAALA,QAAK,IAALA,GAAgB,QAAX2B,EAAL3B,EAAO6B,iBAAS,IAAAF,OAAX,EAALA,EAAkBK,cAAa,IAAE,GAC1ChC,IAAc,OAALA,QAAK,IAALA,GAAgB,QAAX4B,EAAL5B,EAAO6B,iBAAS,IAAAD,OAAX,EAALA,EAAkBI,cAAe,EAAI,OAAS,qBAIhE,E,uHCuBA,EAlCqB,SAAC5E,GAAkB,IAAD6E,EACjCC,EAEJ,GAAU,OAAL9E,QAAK,IAALA,GAAU,QAAL6E,EAAL7E,EAAO+E,WAAG,IAAAF,GAAVA,EAAYG,KAEV,CAAC,IAADC,EAAAC,EACCF,EAAO,IAAI5G,KAAK4B,EAAM+E,IAAIC,MAMhC,OALAF,EAAc,IAAIrC,KAAKC,eAAe,QAAS,CAC7CqC,IAAK,UACLnC,MAAO,UACNE,OAAOkC,IAGRjF,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAlB,SAAA,EACEO,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uCAAsCF,SAAA,EACnDD,EAAAA,EAAAA,KAAA,OAAAC,SAAe,QAAfyF,EAAMjF,EAAM+E,WAAG,IAAAE,OAAA,EAATA,EAAWE,YAEjB5F,EAAAA,EAAAA,KAAA,OAAAC,SACwB,UAAZ,QAAT0F,EAAAlF,EAAM+E,WAAG,IAAAG,OAAA,EAATA,EAAWE,QACV7F,EAAAA,EAAAA,KAAC8F,EAAAA,IAAyB,CAAC1F,MAAO,CAAE2F,MAAO,sBAE3C/F,EAAAA,EAAAA,KAACgG,EAAAA,IAAS,CAAC5F,MAAO,CAAE2F,MAAO,4BAKjC/F,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2CAA0CF,UACvDD,EAAAA,EAAAA,KAAA,OAAAC,SAAMsF,GAA4B,SAI1C,CA3BE,OAAOvF,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eA4BhB,ECtCagG,EAAgB,SAACC,EAAiBC,GAC7C,IAAMC,EAAiBF,EAAIG,QAAQ1G,KAAI,SAAC2G,GAAyB,IAADC,EACxDC,EAAoB,OAANF,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQG,YAAI,IAAAF,OAAN,EAANA,EAAcG,QAAO,SAAAlB,GAAG,OAAIA,EAAItF,KAAOiG,CAAU,IACrE,OAAAQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYL,GAAM,IAAEG,KAAMD,GAC5B,IACA,OAAAG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYT,GAAG,IAAEG,QAASD,GAC5B,EAEaQ,EAA4B,SACvCvD,EACAwD,EACAC,GAEA,IAAKzD,IAAUA,EAAM6B,UAClB,MAAO,CACLG,aAAc,EACd0B,eAAgB,EAChBC,cAAe,EACfC,cAAe,EACf9B,SAAU,GAIf,IAAQD,EAAc7B,EAAd6B,UAER,OAAAyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKzB,GAAS,IACZG,aACgB,IAAdwB,GAAmBC,EACf5B,EAAUG,aAAeyB,EACzB5B,EAAUG,aAChB0B,eACgB,IAAdF,GAAmBC,EACf5B,EAAU6B,eAAiBD,EAC3B5B,EAAU6B,eAChBC,cACgB,IAAdH,GAAmBC,EACf5B,EAAU8B,cAAgBF,EAC1B5B,EAAU8B,cAChBC,cACgB,IAAdJ,GAAmBC,EACf5B,EAAU+B,cAAgBH,EAC1B5B,EAAU+B,eAEpB,EC6EA,EAvGmB,SAACxG,GAAkB,IAADyG,EAAA5B,EACnCrB,GAAsCC,EAAAA,EAAAA,KAA9BT,EAAWQ,EAAXR,YAAaC,EAAYO,EAAZP,aACbL,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MACR8D,GAA6BC,EAAAA,EAAAA,MAAsBC,GAAA7I,EAAAA,EAAAA,GAAA2I,EAAA,GAA5CG,EAASD,EAAA,GAAEhF,EAAOgF,EAAA,GACjB9E,GAAegF,EAAAA,EAAAA,GACrBlF,GACArC,EAAAA,EAAAA,KAACwH,EAAAA,IAAgB,CAACrH,UAAU,iBAFtBoC,WAKRlE,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCwI,EAAStI,EAAA,GAAEkJ,EAAYlJ,EAAA,GAC9BmJ,GAA0BpJ,EAAAA,EAAAA,UAAS,IAAGqJ,GAAAnJ,EAAAA,EAAAA,GAAAkJ,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4CxJ,EAAAA,EAAAA,WAAS,GAAMyJ,GAAAvJ,EAAAA,EAAAA,GAAAsJ,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAElCG,GAAOvB,EAAAA,EAAAA,GAAA,GACH,OAALtD,QAAK,IAALA,GAAoC,QAA/B6D,EAAL7D,EAAOgD,QAAQ5F,EAAMoG,WAAWJ,YAAI,IAAAS,OAA/B,EAALA,EAAsCiB,MAAK,SAAA3C,GAC5C,OAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKtF,MAAOO,EAAM+E,IAAItF,EAC/B,KASIkI,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA3B,EAAA,OAAAyB,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACV,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAAShI,MAAO0H,EAAK,CAAAe,EAAAE,KAAA,QAGlB,GAFC/B,EAAyB,OAAPoB,QAAO,IAAPA,OAAO,EAAPA,EAASY,MAAKH,EAAAI,GAEtC1F,GAAKsF,EAAAI,GAAA,CAAAJ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACIvB,EAAU,CACflE,KAAMK,EACNJ,MAAOK,EACPsF,OAAQvI,EAAMoG,UACdoC,WAAStC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJtD,GAAK,IACR6B,UAAW0B,EACTvD,GACCwD,EACDC,GAGFT,QAASJ,GAAaU,EAAAA,EAAAA,GAAC,CAAC,EAAItD,GAASuE,GAAOvB,YAE9C,wBAAAsC,EAAAO,OAAA,GAAAT,EAAE,KAET,kBArBmB,OAAAJ,EAAAc,MAAA,KAAAC,UAAA,KAuBpB,OACEpJ,EAAAA,EAAAA,KAACqJ,EAAAA,GAAS,CACRC,YAAa7I,EAAM+E,MAAY,OAAL/E,QAAK,IAALA,GAAU,QAAL6E,EAAL7E,EAAO+E,WAAG,IAAAF,OAAL,EAALA,EAAYpF,IACtCqJ,MAAO9I,EAAM+I,OACbC,gBAAgB,EAAMxJ,SAErB,SAACyJ,EAAUC,GAAc,IAADjE,EAAAC,EACvB,OACEnF,EAAAA,EAAAA,MAAA,OAAAmG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM+C,EAASE,gBACTF,EAASG,iBAAe,IAC5BC,IAAKJ,EAASK,SACd5J,UAAS,gCAAAiF,OACPuE,EAASK,WAAa,cAAgB,qBAAoB,KACxD/J,SAAA,EAEJD,EAAAA,EAAAA,KAACiK,EAAAA,EAAK,CACJjI,OAAQoG,EACRhH,UAAW4G,EACXtG,aAAcuG,EACdpG,OAAQ,kCAEVrB,EAAAA,EAAAA,MAAA,OACEL,UAAU,4BACVC,MAAO,CACL8J,UAAU,aAAD9E,OAAwB,QAAxBM,EAAejF,EAAM+E,WAAG,IAAAE,OAAA,EAATA,EAAWyE,WACnCC,QAAST,EAASK,WAAa,GAAM,GACrC/J,SAAA,EAEFD,EAAAA,EAAAA,KAACqK,EAAY,CAAC7E,IAAK/E,EAAM+E,OAQzBhF,EAAAA,EAAAA,MAACuB,EAAAA,EAAM,CACLV,QAAS,kBAnEFiJ,EAoEO7J,EAAMoG,UAAU0D,WApEVrK,EAoEsBO,EAAM+E,IAAItF,GAnEhEuH,EAAa6C,GACbzC,EAAS3H,QACT+H,GAAkB,GAHA,IAACqC,EAAapK,CAoEmC,EAEvDC,UAAU,2GACVqK,SAAUnI,EAAQG,UAAUvC,SAAA,EAE5BO,EAAAA,EAAAA,MAAA,OAAAP,SAAA,CAAe,QAAf0F,EAAMlF,EAAM+E,WAAG,IAAAG,OAAA,EAATA,EAAWmD,MAAM,SACvB9I,EAAAA,EAAAA,KAAA,OAAAC,SAAMsC,aAKhB,GAGN,EC1EA,EArCe,SAAC9B,GACd,OACET,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAEU,MAAO,OAAQb,UAC3BD,EAAAA,EAAAA,KAACyK,EAAAA,GAAS,CAACC,YAAajK,EAAM6F,OAAOpG,GAAGD,SACrC,SAACyJ,EAAUC,GACV,OACEnJ,EAAAA,EAAAA,MAAA,OAAAmG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACM+C,EAASiB,gBAAc,IAC3Bb,IAAKJ,EAASK,SACd5J,UAAS,gEACTC,MAAO,CACLG,gBAAiBoJ,EAASiB,eACtB,qBACA,4BACJ3K,SAAA,CAED4K,MAAMC,QAAQrK,EAAM6F,OAAOG,MACxBhG,EAAM6F,OAAOG,KAAK9G,KAAI,SAAC6F,EAAe8E,GACpC,OACEtK,EAAAA,EAAAA,KAAC+K,EAAU,CAETvF,IAAKA,EACLqB,UAAWpG,EAAMoG,UACjB2C,OAAQc,IAHHU,EAAAA,EAAAA,KAMX,IACA,GACHtB,EAASuB,eAGhB,KAIR,E,UCqBA,EAzDgB,SAACxK,GACf,IAAQ4C,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MACRhF,GAA8BC,EAAAA,EAAAA,UAAmB,CAACmC,EAAMyK,UAAS3M,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D6M,EAAO3M,EAAA,GAAE4M,EAAU5M,EAAA,GAEpB6M,GAAcC,EAAAA,EAAAA,SAAO,GACrBC,GAAaD,EAAAA,EAAAA,UA0BnB,OAxBAtM,EAAAA,EAAAA,YAAU,WACRuM,EAAWC,QAAUL,EAEnBI,EAAWC,SACXD,EAAWC,QAAQC,OAAS,GAC0B,IAAtDF,EAAWC,QAAQD,EAAWC,QAAQC,OAAS,KAE/CJ,EAAYG,SAAU,EAE1B,GAAG,CAACL,KAEJnM,EAAAA,EAAAA,YAAU,WACRoM,EAAW,CAAC1K,EAAMyK,UAClBE,EAAYG,SAAU,CACxB,GAAG,CAAM,OAALlI,QAAK,IAALA,OAAK,EAALA,EAAOnD,MAEXnB,EAAAA,EAAAA,YAAU,WACJqM,EAAYG,QACdJ,GAAW,SAAAvC,GAAI,IAAA6C,EAAA,SAAArG,QAAAsG,EAAAA,EAAAA,GAAQ9C,GAAI,CAAgB,QAAhB6C,EAAO,OAALhL,QAAK,IAALA,OAAK,EAALA,EAAOyK,eAAO,IAAAO,EAAAA,EAAI,GAAI,IAEnDL,EAAYG,SAAU,CAE1B,GAAG,CAAC9K,EAAMyK,WAGRlL,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UAASF,UACtBD,EAAAA,EAAAA,KAAA,OACEI,MAAO,CACLuL,UAAU,eAADvG,OAAwC,IAAtB8F,EAAQM,OAAS,GAAO,OACnDI,WAAY,uBACZ3L,SAEDiL,EAAQvL,KAAI,SAACkM,EAAMvB,GAClB,OACEtK,EAAAA,EAAAA,KAAA,OAEEI,MAAO,CACLC,OAAQ,OACRyL,WAAY,OACZ7L,SAED4L,GANIvB,EASX,OAIR,ECzCA,EArB4B,WAAO,IAADxF,EAAAC,EAAAC,EACxB3B,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MAiBR,MAAO,CAAE0I,kBAfiB,CACxB,CACEC,WAAY,qBACZd,QAAc,OAAL7H,QAAK,IAALA,GAAgB,QAAXyB,EAALzB,EAAO6B,iBAAS,IAAAJ,OAAX,EAALA,EAAkBiC,gBAE7B,CACEiF,WAAY,aACZd,QAAc,OAAL7H,QAAK,IAALA,GAAgB,QAAX0B,EAAL1B,EAAO6B,iBAAS,IAAAH,OAAX,EAALA,EAAkBiC,eAE7B,CACEgF,WAAY,aACZd,QAAc,OAAL7H,QAAK,IAALA,GAAgB,QAAX2B,EAAL3B,EAAO6B,iBAAS,IAAAF,OAAX,EAALA,EAAkBiC,gBAKjC,ECWA,EA1BsB,SAACxG,GACrB,IAAQsL,EAAsBE,IAAtBF,kBAER,OACE/L,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBF,SAClC8L,EAAkBpM,KAAI,SAAA0I,GAA8B,IAA3B2D,EAAU3D,EAAV2D,WAAYd,EAAO7C,EAAP6C,QACpC,OACE1K,EAAAA,EAAAA,MAAA,OAEEL,UAAS,sFAAAiF,OACiB,IAAxB3E,EAAMyL,cACF,sCACA,0BAEN9L,MAAO,CAAEC,OAAQ,OAAQS,MAAO,OAAQb,SAAA,CAEvC+L,GAEDhM,EAAAA,EAAAA,KAACmM,EAAO,CAACjB,QAASA,EAASkB,KAAMJ,MAV5BA,EAaX,KAGN,ECXA,EAlB+B,WAC7B,IAAMK,GAAgBhB,EAAAA,EAAAA,QAAO,MAC7BhN,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C6N,EAAa3N,EAAA,GAAE+N,EAAgB/N,EAAA,GAatC,MAAO,CAAE8N,cAAAA,EAAeH,cAAAA,EAAeK,aAXlB,WACnB,IAAMC,EAAUH,EAAcd,QAE9B,GAAIiB,EAAS,CACX,IAAQC,EAA0CD,EAA1CC,UAAWC,EAA+BF,EAA/BE,aAAcC,EAAiBH,EAAjBG,aAGjCL,EADuBG,GADFC,EAAeC,GACe,IAErD,CACF,EAGF,ECEA,EAdyB,SACvBC,GAEA,ICP+BvG,EDOvBhD,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MAEFwJ,EAAkBxJ,ICTOgD,EDSwB,OAALhD,QAAK,IAALA,OAAK,EAALA,EAAOgD,QCRpDwE,MAAMC,QAAQzE,GAGL,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAAS1G,KAAI,SAAC2G,GACnB,OAAW,OAANA,QAAM,IAANA,GAAAA,EAAQwG,eAAe,QAGrBxG,GAFLK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYL,GAAM,IAAEG,KAAM,IAG9B,IAPS,KDST1H,EAAAA,EAAAA,YAAU,WACJ8N,GACFD,EAAWC,EAEf,GAAG,CAAM,OAALxJ,QAAK,IAALA,OAAK,EAALA,EAAOgD,SACb,EEfM0G,EAAqB,SAACtG,GAC1B,OAAW,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMuG,QAAO,SAACC,EAAKzH,GAExB,OAAOyH,IADa,OAAHzH,QAAG,IAAHA,OAAG,EAAHA,EAAKsD,QAAS,EAEjC,GAAG,EACL,ECoCA,EApCuB,SACrBzC,EACA6G,GAEA,IAAAjJ,GAAsCC,EAAAA,EAAAA,KAA9BT,EAAWQ,EAAXR,YAAaC,EAAYO,EAAZP,aACrByJ,GAAsBC,EAAAA,EAAAA,MAAfC,GAAuC7O,EAAAA,EAAAA,GAAA2O,EAAA,GAA5B,GACV9J,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MACRiK,EDLiC,SAACjH,GAA4B,IAADkH,EAAAC,EAAAC,EAK7D,MAAO,CAAE1G,eAJcgG,EAA6B,QAAXQ,EAAClH,EAAQ,UAAE,IAAAkH,OAAA,EAAVA,EAAY9G,MAI7BO,cAHH+F,EAA6B,QAAXS,EAACnH,EAAQ,UAAE,IAAAmH,OAAA,EAAVA,EAAY/G,MAGbQ,cAFlB8F,EAA6B,QAAXU,EAACpH,EAAQ,UAAE,IAAAoH,OAAA,EAAVA,EAAYhH,MAGvD,CCAIiH,CAAoBrH,GADdU,EAAcuG,EAAdvG,eAAgBC,EAAasG,EAAbtG,cAAeC,EAAaqG,EAAbrG,eAGvClI,EAAAA,EAAAA,YAAU,WAC0B,IAAD+F,EAA7BuB,EAAQmF,OAAS,GAAKnI,GACxBgK,EAAY,CACVjK,KAAMK,EACNJ,MAAOK,EACPuF,WAAStC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJtD,GAAK,IACRgD,QAASA,EACTnB,WAASyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACC,OAALtD,QAAK,IAALA,OAAK,EAALA,EAAO6B,WAAS,IACnBG,cACO,OAALhC,QAAK,IAALA,GAAgB,QAAXyB,EAALzB,EAAO6B,iBAAS,IAAAJ,OAAX,EAALA,EAAkBK,UAClB4B,EACAC,EACAC,EACAA,EACFF,eAAAA,EACAC,cAAAA,EACAC,cAAAA,OAKV,GAAG,CAACiG,GACN,ECvCMS,EAAsB,SAACtH,EAAwBuH,GACnD,OAAc,OAAPvH,QAAO,IAAPA,OAAO,EAAPA,EAASwH,WAAU,SAACvH,GACzB,OAAOA,EAAOpG,KAAO0N,EAAOlD,WAC9B,GACF,EAQMoD,EAAiB,SAACC,EAA2BH,GACjD,IAAAI,EAAqBD,EAAcE,OAAOL,EAAOrE,MAAO,GACxD,OAD0D/K,EAAAA,EAAAA,GAAAwP,EAAA,GAAzC,EAEnB,EA0DaE,EAAiB,SAC5BC,EACA9H,EACAuG,GAEA,IAAQgB,EAAwBO,EAAxBP,OAAQQ,EAAgBD,EAAhBC,YAEXA,IAEHR,EAAOtE,cAAgB8E,EAAY1D,aACnCkD,EAAOrE,QAAU6E,EAAY7E,OAIJ,aAAvBqE,EAAOlD,cAEPkD,EAAOlD,cAAgB0D,EAAY1D,YAxEd,SACzBrE,EACAuH,EACAQ,EACAxB,GAEA,IAAMyB,EAAkBV,EAAoBtH,EAASuH,GAC/CU,EAlByB,SAACjI,EAAwB+H,GACxD,OAAc,OAAP/H,QAAO,IAAPA,OAAO,EAAPA,EAASwH,WAAU,SAACvH,GACzB,OAAOA,EAAOpG,KAAOkO,EAAY1D,WACnC,GACF,CAc+B6D,CAAyBlI,EAAS+H,GACzDL,EAAgB1H,IAAOqF,EAAAA,EAAAA,GAAQrF,EAAQgI,GAAiB5H,MACxD+H,EACJZ,EAAOlD,cAAgB0D,EAAYK,YAAU/C,EAAAA,EAAAA,GACrCrF,EAAQiI,GAAsB7H,MAClCsH,EAEAW,EAAaZ,EAAeC,EAAeH,GACjDY,EAAmBP,OAAOG,EAAY7E,MAAO,EAAGmF,GAEhD,IAAMC,GAAUjD,EAAAA,EAAAA,GAAOrF,GAEvBsI,EAAWN,IAAgB1H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBN,EAAQgI,IAAgB,IAC3B5H,KAAMsH,IAGRY,EAAWL,IAAqB3H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3BN,EAAQiI,IAAqB,IAChC7H,KAAM+H,IAGR5B,EAAW+B,EACb,CA2CIC,CAAmBvI,EAASuH,EAAQQ,EAAaxB,GAzC5B,SACvBvG,EACAuH,EACAQ,EACAxB,GAEA,IAAMiC,EAAgBT,EAAY7E,MAC5B8E,EAAkBV,EAAoBtH,EAASuH,GAE/CnH,GAAIiF,EAAAA,EAAAA,GAAOrF,EAAQgI,GAAiB5H,MAEpCiI,EAAaZ,EAAerH,EAAMmH,GACxCnH,EAAKwH,OAAOY,EAAe,EAAGH,GAE9B,IAAMC,GAAUjD,EAAAA,EAAAA,GAAOrF,GAEvBsI,EAAWN,IAAgB1H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBN,EAAQgI,IAAgB,IAC3B5H,KAAMA,IAGRmG,EAAW+B,EACb,CAqBIG,CAAiBzI,EAASuH,EAAQQ,EAAaxB,IAEnD,EC1CA,EAxCgB,WACd,IAAAmC,EACEC,IADM3C,EAAa0C,EAAb1C,cAAeH,EAAa6C,EAAb7C,cAAeK,EAAYwC,EAAZxC,aAE9B7L,GAAgBC,EAAAA,EAAAA,KAAhBD,YACA2C,GAAUqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IAA5DvB,MACRhF,GAA8BC,EAAAA,EAAAA,UAAwB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDgI,EAAO9H,EAAA,GAAEqO,EAAUrO,EAAA,GAC1BmJ,GAAoDpJ,EAAAA,EAAAA,WAAS,GAAMqJ,GAAAnJ,EAAAA,EAAAA,GAAAkJ,EAAA,GAA5DwF,EAAkBvF,EAAA,GAAEsH,EAAqBtH,EAAA,GAChDuH,EAAiBtC,GACjBuC,EAAe9I,EAAS6G,GAOxB,OACE1M,EAAAA,EAAAA,MAAA,OACEsJ,IAAKuC,EACL+C,SAAU7C,EACVpM,UAAU,0BACVC,MAAO,CACLiP,UACE3O,GAAe,IACX,oBACA,8BACNT,SAAA,EAEFD,EAAAA,EAAAA,KAACsP,EAAa,CAACpD,cAAeA,KAE9BlM,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAYC,MAAO,CAAEmP,UAAW,qBAAsBtP,UACnED,EAAAA,EAAAA,KAACwP,EAAAA,GAAe,CAACC,UApBD,SAACtB,GACrB9K,GAAS6K,EAAeC,EAAS9H,EAASuG,GAC1CqC,GAAsB,SAAArG,GAAI,OAAKA,CAAI,GACrC,EAiBgD3I,SAChC,OAAPoG,QAAO,IAAPA,OAAO,EAAPA,EAAS1G,KAAI,SAAC2G,EAAqBgE,GAClC,OAAOtK,EAAAA,EAAAA,KAAC0P,EAAM,CAAiB7I,UAAWyD,EAAKhE,OAAQA,GAAnCA,EAAOpG,GAC7B,UAKV,ECfA,EAjC0B,WACxB,IAAQ0C,GAAaD,EAAAA,EAAAA,MAAbC,SACRvE,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCsR,EAASpR,EAAA,GAAEqR,EAAUrR,EAAA,GAa5B,OAXAQ,EAAAA,EAAAA,YAAU,WACR6Q,GAAW,GACX,IAAMC,EAAYC,YAAW,WAC3BF,GAAW,EACb,IAEA,OAAO,WACLG,aAAaF,EACf,CACF,GAAG,CAACjN,KAGF5C,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAlB,SACG0P,IACCnP,EAAAA,EAAAA,MAAA,OACEL,UAAU,6BACVC,MAAO,CACLW,SAAU,SACVD,MAAO,QACPb,SAAA,EAEFD,EAAAA,EAAAA,KAACgQ,EAAY,KACbhQ,EAAAA,EAAAA,KAACiQ,EAAO,QAKlB,E,UCEA,EA5BwB,WACtBC,IAEA,IAUIC,EAVJC,GAAiD1L,EAAAA,EAAAA,KAC/C,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IADhCvB,EAAK+M,EAAL/M,MAAOgN,EAAaD,EAAbC,cAAeC,EAAcF,EAAdE,eAG9BC,GAA+C7L,EAAAA,EAAAA,KAC7C,SAACC,GAAgB,OAAKA,EAAM6L,SAAS,IAD/BC,EAAcF,EAAdE,eAAgBC,EAAkBH,EAAlBG,mBAGhBC,GAAoBjM,EAAAA,EAAAA,KAC1B,SAACC,GAAgB,OAAKA,EAAMiM,UAAU,IADhCD,gBAgBR,OATER,EADEG,GAAkBI,GACV1Q,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAc,CAAC5O,OAAQ6O,EAAAA,IACzBT,GAAiBI,GAAkBE,GAClC3Q,EAAAA,EAAAA,KAAC+Q,EAAAA,EAAY,CAAC9O,OAAQ6O,EAAAA,IACtBzN,GAAuB,MAAT,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOnD,KAGhBF,EAAAA,EAAAA,KAACgR,EAAiB,KAFlBhR,EAAAA,EAAAA,KAACiR,EAAgB,KAKtBjR,EAAAA,EAAAA,KAACkR,EAAAA,EAAc,CAAAjR,SAAEkQ,GAC1B,C,oECjCaW,EAAmB,SAACK,GAA2B,OAC1DnR,EAAAA,EAAAA,KAAA,OACEG,UAAU,0BACVC,MAAO,CACLU,MAAO,QACPT,OAAQ,QACRC,OAAQ,OACRC,gBAAiB,yBACjBN,SAEDkR,GACG,C","sources":["components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/IndexContainer.tsx","components/alert/Alert.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useHTTPState.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","hooks/useWindowWidth.tsx","hooks/updateReduxDatabase/useReduxMonthData.tsx","pages/monthPanel/indexMonthPanel/EmptyMonthRecord.tsx","pages/monthPanel/HoursSummary.tsx","pages/monthPanel/DayPrintData.tsx","pages/monthPanel/columnsDay/utilsClumnsDay.tsx","pages/monthPanel/columnsDay/ColumnsDay.tsx","pages/monthPanel/Column.tsx","pages/monthPanel/counter/Counter.tsx","pages/monthPanel/columnsHeader.tsx/useDataCoumnsHeader.tsx","pages/monthPanel/columnsHeader.tsx/ColumnsHeader.tsx","pages/monthPanel/columns/hooks/useScrollThumbPosition.tsx","pages/monthPanel/columns/hooks/useUpdateColumns.tsx","pages/monthPanel/columns/utils/utilsAddDaysToColumns.tsx","pages/monthPanel/columns/utils/utilsGetHoursFromColumns.tsx","pages/monthPanel/columns/hooks/useUpdateMonth.tsx","pages/monthPanel/columns/utils/utilsHandleDragDrop.tsx","pages/monthPanel/columns/Columns.tsx","pages/monthPanel/indexMonthPanel/MonthPanelContent.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n  useAutoLogout();\r\n\r\n  return (\r\n    <div>\r\n      {secondsRemaining + 1 <= 60 && (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-flex d-center\"\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div className=\"p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown\">\r\n            Wylogowanie nastąpi za\r\n            <div className=\"d-flex mx-auto w-fit-content\">\r\n              {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n            </div>\r\n            <div className=\"w-fit-content m-auto\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport useWindowWidth from \"../hooks/useWindowWidth\";\r\nimport AutoLogout from \"./autoLogout/AutoLogout\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  const { windowWidth } = useWindowWidth();\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"d-flex backgroundImage m-0\"\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <aside\r\n        style={{\r\n          width: windowWidth >= 500 ? \"30%\" : 0,\r\n          maxWidth: \"250px\",\r\n          height: \"100%\",\r\n        }}\r\n      ></aside>\r\n      <div\r\n        className=\"d-flex ps-1 flex-fill\"\r\n        style={{\r\n          width: windowWidth >= 500 ? \"70%\" : \"100%\",\r\n        }}\r\n      >\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport \"./_alert.scss\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  header: string;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      (e.target as HTMLElement)?.id !== \"opacityContainer\" &&\r\n      (e.target as HTMLElement)?.id !== \"noButton\"\r\n    )\r\n      return;\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.isPrinted ? (\r\n        <div\r\n          id=\"opacityContainer\"\r\n          className=\"fixed-top d-center \"\r\n          onClick={e => handleClose(e)}\r\n          style={{\r\n            height: \"100vh\",\r\n            zIndex: \"1060\",\r\n            backgroundColor: \"rgba(0,0,0,0.4)\",\r\n          }}\r\n        >\r\n          <div\r\n            className={`p-4 bg-white rounded-1 fs-3 fw-medium alertAnimationDown`}\r\n          >\r\n            {props.header}\r\n            <div className=\"w-fit-content m-auto\">\r\n              {props.header.includes(\"Usunąć\") ? (\r\n                <>\r\n                  <Button id=\"noButton\">Nie</Button>\r\n                  <Button\r\n                    onClick={props.action}\r\n                    className=\"bg-danger ms-4 border \"\r\n                  >\r\n                    Tak\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button id=\"noButton\" onClick={props.action}>\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger text-centerh\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"secondary\" className=\"fs-6\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { ReactNode } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ModelSuccess } from \"../sharedModels/modelSucces\";\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.slice(9);\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return { monthURLStringFormat };\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return { monthURLStringFormat };\r\n  }\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return { windowWidth };\r\n};\r\n\r\nexport default useWindowWidth;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getMonth,\r\n  getMonthError,\r\n  getMonthIsLoading,\r\n} from \"../../redux/storeFeatures/monthPanelSlice\";\r\nimport { useMonthDataQuery } from \"../../services/apiSliceMonths\";\r\nimport useURLValues from \"../useURLValues\";\r\n\r\n\r\nconst useReduxMonthData = () => {\r\n  const dispatch = useDispatch();\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { isMonthInURL } = useURLValues();\r\n\r\n  const year = isMonthInURL ? yearFromURL : \"\";\r\n  const month = isMonthInURL ? monthFromURL : \"\";\r\n\r\n  const { data, error, isLoading } = useMonthDataQuery({\r\n    year,\r\n    month,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getMonth(data));\r\n    dispatch(getMonthError(error));\r\n    dispatch(getMonthIsLoading(isLoading));\r\n  }, [data, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxMonthData;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\n\r\nconst EmptyMonthRecord = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  if (!month || month?.id === \"\") {\r\n    return (\r\n      <div\r\n        className=\"d-center fs-3 text-warning text-center\"\r\n        style={{\r\n          maxWidth: \"1000px\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        Brak danych z miesiąca {monthURLStringFormat}. Zapisz miesiąc w\r\n        ustawieniach.\r\n      </div>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nexport default EmptyMonthRecord;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\nconst HoursSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  return (\r\n    <div className=\"d-flex mx-auto fw-medium pb-2 w-fit-content\">\r\n      <div>Wszystkie {month?.calcHours?.allHours}&nbsp;-&nbsp;</div>\r\n\r\n      <div\r\n        className={`${\r\n          month && month?.calcHours?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n        }`}\r\n      >\r\n        {month && month?.calcHours?.currentHours} {\"\"}\r\n        {month && month?.calcHours?.currentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursSummary;\r\n","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\n\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n}\r\n\r\nconst DayPrintData = (props: Props) => {\r\n  let dateToPrint;\r\n\r\n  if (!props?.day?.date) {\r\n    return <div>Brak danych</div>;\r\n  } else {\r\n    const date = new Date(props.day.date);\r\n    dateToPrint = new Intl.DateTimeFormat(\"pl-PL\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(date);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between fs-7 \">\r\n          <div>{props.day?.userName}</div>\r\n\r\n          <div>\r\n            {props.day?.place === \"Poza\" ? (\r\n              <TbArrowBigRightLineFilled style={{ color: \"rgb(80,173,150)\" }} />\r\n            ) : (\r\n              <MdFactory style={{ color: \"rgb(255, 181, 9)\" }} />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex fw-medium justify-content-between\">\r\n          <div>{dateToPrint ? dateToPrint : \"\"}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DayPrintData;\r\n","import { ModelMonth } from \"../../../sharedModels/modelMonth\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\n\r\nexport const deleteDayById = (obj: ModelMonth, idToDelete: string) => {\r\n  const updatedColumns = obj.columns.map((column: ModelColumn) => {\r\n    const updatedDays = column?.days?.filter(day => day.id !== idToDelete);\r\n    return { ...column, days: updatedDays };\r\n  });\r\n  return { ...obj, columns: updatedColumns };\r\n};\r\n\r\nexport const calculateUpdatedCalcHours = (\r\n  month: ModelMonth | null,\r\n  columnIdx: number,\r\n  subtractedHours: number | undefined\r\n) => {\r\n  if (!month || !month.calcHours) {\r\n     return {\r\n       currentHours: 0,\r\n       submittedHours: 0,\r\n       acceptedHours: 0,\r\n       rejectedHours: 0,\r\n       allHours: 0,\r\n     };\r\n  }\r\n\r\n  const { calcHours } = month;\r\n\r\n  return {\r\n    ...calcHours,\r\n    currentHours:\r\n      columnIdx !== 2 && subtractedHours\r\n        ? calcHours.currentHours + subtractedHours\r\n        : calcHours.currentHours,\r\n    submittedHours:\r\n      columnIdx === 0 && subtractedHours\r\n        ? calcHours.submittedHours - subtractedHours\r\n        : calcHours.submittedHours,\r\n    acceptedHours:\r\n      columnIdx === 1 && subtractedHours\r\n        ? calcHours.acceptedHours - subtractedHours\r\n        : calcHours.acceptedHours,\r\n    rejectedHours:\r\n      columnIdx === 2 && subtractedHours\r\n        ? calcHours.rejectedHours - subtractedHours\r\n        : calcHours.rejectedHours,\r\n  };\r\n};","import { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\nimport useHTTPState from \"../../../hooks/useHTTPState\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useDeleteDayMutation } from \"../../../services/apiSliceMonths\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport DayPrintData from \"../DayPrintData\";\r\nimport { calculateUpdatedCalcHours, deleteDayById } from \"./utilsClumnsDay\";\r\nimport ButtonDay from \"../ButtonDay\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst ColumnsDay = (props: Props) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger\" />\r\n  );\r\n\r\n  const [columnIdx, setColumnIdx] = useState(\"\");\r\n  const [dayId, setDayId] = useState(\"\");\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const findDay = {\r\n    ...month?.columns[props.columnIdx].days?.find(day => {\r\n      return day?.id === props.day.id;\r\n    }),\r\n  };\r\n\r\n  const handleAlert = (idx: string, id: string) => {\r\n    setColumnIdx(idx);\r\n    setDayId(id);\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const deleteDayAsync = async () => {\r\n    if (findDay?.id === dayId) {\r\n      const subtractedHours = findDay?.hours;\r\n\r\n      month &&\r\n        (await deleteDay({\r\n          year: yearFromURL,\r\n          month: monthFromURL,\r\n          colIdx: props.columnIdx,\r\n          monthBody: {\r\n            ...month,\r\n            calcHours: calculateUpdatedCalcHours(\r\n              month,\r\n              +columnIdx,\r\n              subtractedHours\r\n            ),\r\n\r\n            columns: deleteDayById({ ...month }, dayId).columns,\r\n          },\r\n        }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white rounded border ${\r\n              snapshot.isDragging ? \"border-dark\" : \"border-dark-subtle\"\r\n            } `}\r\n          >\r\n            <Alert\r\n              action={deleteDayAsync}\r\n              isPrinted={isAlertPrinted}\r\n              setIsPrinted={setIsAlertPrinted}\r\n              header={\"Usunąć dzień?\"}\r\n            />\r\n            <div\r\n              className=\"px-1 py-2 py-sm-1 rounded\"\r\n              style={{\r\n                borderTop: `8px solid ${props.day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.8 : 1,\r\n              }}\r\n            >\r\n              <DayPrintData day={props.day} />\r\n\r\n              {/* <ButtonDay\r\n                columnIdx={props.columnIdx}\r\n                dayId={props.day.id}\r\n                day={props.day}\r\n              /> */}\r\n\r\n              <Button\r\n                onClick={() =>\r\n                  handleAlert(props.columnIdx.toString(), props.day.id)\r\n                }\r\n                className=\"d-flex justify-content-between  align-items-center w-100 p-0 bg-transparent border-0 fw-medium text-dark\"\r\n                disabled={success.isLoading}\r\n              >\r\n                <div>{props.day?.hours} h</div>\r\n                <div>{btnContent}</div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default ColumnsDay;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { ModelColumn } from \"../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../sharedModels/modelDay\";\r\nimport ColumnsDay from \"./columnsDay/ColumnsDay\";\r\n\r\ninterface Props {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n}\r\n\r\nconst Column = (props: Props) => {\r\n  return (\r\n    <div style={{ width: \"33%\" }}>\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={`p-1 h-100 overflow-hidden border border-1 border border-top-0`}\r\n              style={{\r\n                backgroundColor: snapshot.isDraggingOver\r\n                  ? \"rgba(0, 0, 0, 0.1)\"\r\n                  : \"rgba(255, 255, 255, 0.2)\",\r\n              }}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <ColumnsDay\r\n                        key={UUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_counter.scss\";\r\n\r\ntype Props = {\r\n  counter: any;\r\n  text: string;\r\n};\r\n\r\nconst Counter = (props: Props) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [counter, setCounter] = useState<number[]>([props.counter]);\r\n\r\n  const didMountRef = useRef(true);\r\n  const counterRef = useRef<number[]>();\r\n\r\n  useEffect(() => {\r\n    counterRef.current = counter;\r\n    if (\r\n      counterRef.current &&\r\n      counterRef.current.length > 0 &&\r\n      counterRef.current[counterRef.current.length - 1] === 0\r\n    ) {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [counter]);\r\n\r\n  useEffect(() => {\r\n    setCounter([props.counter]);\r\n    didMountRef.current = false;\r\n  }, [month?.id]);\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      setCounter(prev => [...prev, props?.counter ?? 0]);\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  }, [props.counter]);\r\n\r\n  return (\r\n    <div className=\"counter\">\r\n      <div\r\n        style={{\r\n          transform: `translateY(-${(counter.length - 1) * 20}px)`,\r\n          transition: \"transform 0.3s ease\",\r\n        }}\r\n      >\r\n        {counter.map((item, idx) => {\r\n          return (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                height: \"20px\",\r\n                marginLeft: \"3px\",\r\n              }}\r\n            >\r\n              {item}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useDataCoumnsHeader = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  const dataColumnsHeader = [\r\n    {\r\n      headerText: \"Złożone:\",\r\n      counter: month?.calcHours?.submittedHours,\r\n    },\r\n    {\r\n      headerText: \"Przyznane:\",\r\n      counter: month?.calcHours?.acceptedHours,\r\n    },\r\n    {\r\n      headerText: \"Odrzucone:\",\r\n      counter: month?.calcHours?.rejectedHours,\r\n    },\r\n  ];\r\n\r\n  return { dataColumnsHeader };\r\n};\r\n\r\nexport default useDataCoumnsHeader;\r\n","import Counter from \"../counter/Counter\";\r\nimport useDataCoumnsHeader from \"./useDataCoumnsHeader\";\r\n\r\ninterface Props {\r\n  thumbPosition: number;\r\n}\r\n\r\nconst ColumnsHeader = (props: Props) => {\r\n  const { dataColumnsHeader } = useDataCoumnsHeader();\r\n\r\n  return (\r\n    <div className=\"d-between sticky-top\">\r\n      {dataColumnsHeader.map(({ headerText, counter }) => {\r\n        return (\r\n          <div\r\n            key={headerText}\r\n            className={`text-dark-emphasis fs-responsive bg-white fw-medium p-1 d-flex align-items-center  ${\r\n              props.thumbPosition === 0\r\n                ? \"border-bottom border-3 border-white\"\r\n                : \"border-bottom border-3\"\r\n            }`}\r\n            style={{ height: \"35px\", width: \"33%\" }}\r\n          >\r\n            {headerText}\r\n\r\n            <Counter counter={counter} text={headerText} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColumnsHeader;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useScrollThumbPosition = () => {\r\n  const scrollableRef = useRef(null);\r\n  const [thumbPosition, setThumbPosition] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const element = scrollableRef.current;\r\n\r\n    if (element) {\r\n      const { scrollTop, scrollHeight, clientHeight } = element;\r\n      const maxScrollTop = scrollHeight - clientHeight;\r\n      const thumbPosition = (scrollTop / maxScrollTop) * 100;\r\n      setThumbPosition(thumbPosition);\r\n    }\r\n  };\r\n\r\n  return { scrollableRef, thumbPosition, handleScroll };\r\n};\r\n\r\nexport default useScrollThumbPosition;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { addDaysToColumns } from \"../utils/utilsAddDaysToColumns\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nconst useUpdateColumns = (\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n\r\n  const columnsWithDays = month && addDaysToColumns(month?.columns);\r\n\r\n  useEffect(() => {\r\n    if (columnsWithDays) {\r\n      setColumns(columnsWithDays);\r\n    }\r\n  }, [month?.columns]);\r\n};\r\n\r\nexport default useUpdateColumns;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column: ModelColumn) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n","import { ModelDay } from \"../../../../sharedModels/modelDay\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\n\r\nconst getHoursFromColumn = (days: ModelDay[]) => {\r\n  return days?.reduce((acu, day) => {\r\n    const dayHours = day?.hours || 0;\r\n    return acu + dayHours;\r\n  }, 0);\r\n};\r\n\r\nexport const getHoursFromColumns = (columns: ModelColumn[]) => {\r\n  const submittedHours = getHoursFromColumn(columns[0]?.days);\r\n  const acceptedHours = getHoursFromColumn(columns[1]?.days);\r\n  const rejectedHours = getHoursFromColumn(columns[2]?.days);\r\n\r\n  return { submittedHours, acceptedHours, rejectedHours };\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { getHoursFromColumns } from \"../utils/utilsGetHoursFromColumns\";\r\nimport useURLValues from \"../../../../hooks/useURLValues\";\r\nimport { useUpdateMonthMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\nconst useUpdateMonth = (\r\n  columns: ModelColumn[],\r\n  executeUpdateMonth: boolean\r\n) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const { submittedHours, acceptedHours, rejectedHours } =\r\n    getHoursFromColumns(columns);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0 && month) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calcHours: {\r\n            ...month?.calcHours,\r\n            currentHours:\r\n              month?.calcHours?.allHours -\r\n              submittedHours -\r\n              acceptedHours -\r\n              rejectedHours +\r\n              rejectedHours,\r\n            submittedHours,\r\n            acceptedHours,\r\n            rejectedHours,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [executeUpdateMonth]);\r\n};\r\n\r\nexport default useUpdateMonth;\r\n","import { ModelColumn } from \"../../../../sharedModels/modelColumn\";\r\nimport { ModelDay } from \"../../../../sharedModels/modelDay\";\r\n\r\nconst findSourceColumnIdx = (columns: ModelColumn[], source: any) => {\r\n  return columns?.findIndex((column: ModelColumn) => {\r\n    return column.id === source.droppableId;\r\n  });\r\n};\r\n\r\nconst findDestinationColumnIdx = (columns: ModelColumn[], destination: any) => {\r\n  return columns?.findIndex((column: ModelColumn) => {\r\n    return column.id === destination.droppableId;\r\n  });\r\n};\r\n\r\nconst findDeletedDay = (newSourceDays: ModelDay[], source: any) => {\r\n  const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n  return deletedDay;\r\n};\r\n\r\nconst moveItemFromColumn = (\r\n  columns: ModelColumn[],\r\n  source: any,\r\n  destination: any,\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n  const destinationColumnIdx = findDestinationColumnIdx(columns, destination);\r\n  const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n  const newDestinationDays =\r\n    source.droppableId !== destination.dropableId\r\n      ? [...columns[destinationColumnIdx].days]\r\n      : newSourceDays;\r\n\r\n  const deletedDay = findDeletedDay(newSourceDays, source);\r\n  newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n  const newColumns = [...columns];\r\n\r\n  newColumns[sourceColumnIdx] = {\r\n    ...columns[sourceColumnIdx],\r\n    days: newSourceDays,\r\n  };\r\n\r\n  newColumns[destinationColumnIdx] = {\r\n    ...columns[destinationColumnIdx],\r\n    days: newDestinationDays,\r\n  };\r\n\r\n  setColumns(newColumns);\r\n};\r\n\r\nconst moveItemInColumn = (\r\n  columns: ModelColumn[],\r\n  source: any,\r\n  destination: any,\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const destintionIdx = destination.index;\r\n  const sourceColumnIdx = findSourceColumnIdx(columns, source);\r\n\r\n  const days = [...columns[sourceColumnIdx].days];\r\n\r\n  const deletedDay = findDeletedDay(days, source);\r\n  days.splice(destintionIdx, 0, deletedDay);\r\n\r\n  const newColumns = [...columns];\r\n\r\n  newColumns[sourceColumnIdx] = {\r\n    ...columns[sourceColumnIdx],\r\n    days: days,\r\n  };\r\n\r\n  setColumns(newColumns);\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: any,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId === \"rejected\") return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    moveItemFromColumn(columns, source, destination, setColumns);\r\n  } else {\r\n    moveItemInColumn(columns, source, destination, setColumns);\r\n  }\r\n};\r\n","import { useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useWindowWidth from \"../../../hooks/useWindowWidth\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { ModelColumn } from \"../../../sharedModels/modelColumn\";\r\nimport Column from \"../Column\";\r\nimport ColumnsHeader from \"../columnsHeader.tsx/ColumnsHeader\";\r\nimport useScrollThumbPosition from \"./hooks/useScrollThumbPosition\";\r\nimport useUpdateColumns from \"./hooks/useUpdateColumns\";\r\nimport useUpdateMonth from \"./hooks/useUpdateMonth\";\r\nimport { handleDragDrop } from \"./utils/utilsHandleDragDrop\";\r\n\r\nconst rowStyles = \"d-flex justify-content-between\";\r\n\r\nconst Columns = () => {\r\n  const { scrollableRef, thumbPosition, handleScroll } =\r\n    useScrollThumbPosition();\r\n  const { windowWidth } = useWindowWidth();\r\n  const { month } = useSelector((state: RootState) => state.monthPanel);\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n  const [executeUpdateMonth, setExecuteUpdateMonth] = useState(false);\r\n  useUpdateColumns(setColumns);\r\n  useUpdateMonth(columns, executeUpdateMonth);\r\n\r\n  const handleDragEnd = (results: DropResult) => {\r\n    month && handleDragDrop(results, columns, setColumns);\r\n    setExecuteUpdateMonth(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={scrollableRef}\r\n      onScroll={handleScroll}\r\n      className=\"overflow-y-scroll h-100\"\r\n      style={{\r\n        maxHeight:\r\n          windowWidth >= 500\r\n            ? \"calc(100% - 32px)\"\r\n            : \"calc(100% - 32px - 2.5rem)\",\r\n      }}\r\n    >\r\n      <ColumnsHeader thumbPosition={thumbPosition} />\r\n\r\n      <div className=\"d-between\" style={{ minHeight: \"calc(100% - 35px)\" }}>\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n          {columns?.map((column: ModelColumn, idx: number) => {\r\n            return <Column key={column.id} columnIdx={idx} column={column} />;\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Columns;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport HoursSummary from \"../HoursSummary\";\r\nimport Columns from \"../columns/Columns\";\r\n\r\nconst MonthPanelContent = () => {\r\n  const { pathname } = useLocation();\r\n  const [isAnimate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAnimate(false);\r\n    const timeoutId = setTimeout(() => {\r\n      setAnimate(true);\r\n    });\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      {isAnimate && (\r\n        <div\r\n          className=\"pe-1 pb-1 opacityAnimation\"\r\n          style={{\r\n            maxWidth: \"1000px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <HoursSummary />\r\n          <Columns />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/IndexContainer\";\r\nimport useReduxMonthData from \"../../../hooks/updateReduxDatabase/useReduxMonthData\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport EmptyMonthRecord from \"./EmptyMonthRecord\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport MonthPanelContent from \"./MonthPanelContent\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\n\r\nconst IndexMonthPanel = () => {\r\n  useReduxMonthData();\r\n\r\n  const { month, monthErrorGet, monthIsLoading } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  let content;\r\n\r\n  if (monthIsLoading || listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (monthErrorGet || listUsersError || listMonthsError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else if (!month || month?.id === \"\") {\r\n    content = <EmptyMonthRecord />;\r\n  } else {\r\n    content = <MonthPanelContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n\r\n// const auth = getAuth();\r\n// onAuthStateChanged(auth, user => {\r\n//   if (user) {\r\n//     // User is signed in, see docs for a list of available properties\r\n//     // https://firebase.google.com/docs/reference/js/auth.user\r\n//     const uid = user.uid;\r\n\r\n//     // ...\r\n//   } else {\r\n//     // User is signed out\r\n//     // ...\r\n//   }\r\n// });\r\n","\r\n\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top d-center fs-4\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","_jsx","children","id","className","style","height","zIndex","backgroundColor","_jsxs","props","windowWidth","useWindowWidth","overflow","position","width","maxWidth","AutoLogout","dispatch","useDispatch","_Fragment","isPrinted","onClick","e","_e$target","_e$target2","target","setIsPrinted","printAlert","handleClose","header","includes","Button","action","styles","Spinner","animation","variant","success","btnText","btnContent","isLoading","size","monthURL","useLocation","pathname","slice","test","_Intl$DateTimeFormat","monthURLToDateFormat","monthURLStringFormat","Intl","DateTimeFormat","year","month","timeZone","format","split","yearFromURL","monthFromURL","isMonthInURL","window","innerWidth","setWindowWidth","handleResize","removeEventListener","_useURLValues","useURLValues","_useMonthDataQuery","useMonthDataQuery","data","error","getMonth","getMonthError","getMonthIsLoading","useSelector","state","monthPanel","useMonthURLToString","_month$calcHours","_month$calcHours2","_month$calcHours3","_month$calcHours4","calcHours","allHours","concat","currentHours","_props$day","dateToPrint","day","date","_props$day2","_props$day3","userName","place","TbArrowBigRightLineFilled","color","MdFactory","deleteDayById","obj","idToDelete","updatedColumns","columns","column","_column$days","updatedDays","days","filter","_objectSpread","calculateUpdatedCalcHours","columnIdx","subtractedHours","submittedHours","acceptedHours","rejectedHours","_month$columns$props$","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","deleteDay","useHTTPState","RiDeleteBin6Line","setColumnIdx","_useState3","_useState4","dayId","setDayId","_useState5","_useState6","isAlertPrinted","setIsAlertPrinted","findDay","find","deleteDayAsync","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","hours","t0","colIdx","monthBody","stop","apply","arguments","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","Alert","borderTop","userColor","opacity","DayPrintData","idx","toString","disabled","Droppable","droppableId","droppableProps","isDraggingOver","Array","isArray","ColumnsDay","UUID","placeholder","counter","setCounter","didMountRef","useRef","counterRef","current","length","_props$counter","_toConsumableArray","transform","transition","item","marginLeft","dataColumnsHeader","headerText","useDataCoumnsHeader","thumbPosition","Counter","text","scrollableRef","setThumbPosition","handleScroll","element","scrollTop","scrollHeight","clientHeight","setColumns","columnsWithDays","hasOwnProperty","getHoursFromColumn","reduce","acu","executeUpdateMonth","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","_getHoursFromColumns","_columns$","_columns$2","_columns$3","getHoursFromColumns","findSourceColumnIdx","source","findIndex","findDeletedDay","newSourceDays","_newSourceDays$splice","splice","handleDragDrop","results","destination","sourceColumnIdx","destinationColumnIdx","findDestinationColumnIdx","newDestinationDays","dropableId","deletedDay","newColumns","moveItemFromColumn","destintionIdx","moveItemInColumn","_useScrollThumbPositi","useScrollThumbPosition","setExecuteUpdateMonth","useUpdateColumns","useUpdateMonth","onScroll","maxHeight","ColumnsHeader","minHeight","DragDropContext","onDragEnd","Column","isAnimate","setAnimate","timeoutId","setTimeout","clearTimeout","HoursSummary","Columns","useReduxMonthData","content","_useSelector","monthErrorGet","monthIsLoading","_useSelector2","listUsers","listUsersError","listUsersIsLoading","listMonthsError","listMonths","RequestLoading","requestContainer","RequestError","MonthPanelContent","EmptyMonthRecord","IndexContainer","contentJSX"],"sourceRoot":""}