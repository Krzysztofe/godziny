{"version":3,"file":"static/js/749.c61d1863.chunk.js","mappings":"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","sources":["components/BorderInline.tsx","components/alert/buttonsAlert/ButtonAlertAccept.tsx","components/alert/buttonsAlert/ButtonAlertDelete.tsx","components/alert/Alert.tsx","components/buttonForm/ButtonForm.tsx","components/collapseContainer/collapseArrow/CollapseArrow.tsx","components/icons/IconTrash.tsx","components/autoLogout/useAutoLogout.tsx","components/autoLogout/AutoLogout.tsx","components/indexContainer/IndexContainer.tsx","components/inputs/inputError/InputError.tsx","components/inputs/inputsText/labelCover/InputsCover.tsx","components/inputs/inputsText/InputsTextLabel.tsx","components/inputs/inputsText/InputsText.tsx","components/listContainer/ListItemNoData.tsx","components/listContainer/stylesListContainer.tsx","components/requestStates/RequestError.tsx","components/requestStates/RequestLoading.tsx","hooks/useAlertDelete.tsx","hooks/useBtnContent.tsx","hooks/useMonthDates.tsx","components/listContainer/ListContainer.tsx","pages/settings/listMonths/useMonthDate.tsx","pages/settings/listMonths/buttonDeleteMonth/useDeleteMonthAsync.tsx","pages/settings/listMonths/buttonDeleteMonth/ButtonDeleteMonth.tsx","pages/settings/listMonths/monthTitle/MonthTitle.tsx","hooks/updateReduxDatabase/useReduxCalcHours.tsx","components/inputs/inputsRange/InputsRange.tsx","pages/settings/listMonths/formHours/FormHoursError.tsx","pages/settings/listMonths/formHours/formHoursTop/FormHoursTop.tsx","pages/settings/listMonths/formHours/useFormikHours.tsx","pages/settings/listMonths/formHours/FormHoursContext.tsx","pages/settings/listMonths/formHours/utilsRequestContainer.scss/utilsRequestContainer.tsx","pages/settings/listMonths/formHours/FormHoursContainer.tsx","pages/settings/listMonths/collapseFormHours/CollapseContent.tsx","pages/settings/listMonths/collapseFormHours/CollapseFormHours.tsx","pages/settings/listMonths/ListMonths.tsx","pages/settings/buttonDeleteUser/useDeleteUserAsync.tsx","pages/settings/buttonDeleteUser/ButtonDeleteUser.tsx","pages/settings/listUsers/ListUsers.tsx","pages/settings/settingsContent/SettinsContent.tsx","pages/settings/indexSettings/IndexSettings.tsx","utils/utilsCapitalizeFirstLetter.tsx","utils/utilsRequestContainer.tsx"],"sourcesContent":["const BorderInline = () => {\r\n  return <div className=\"border d-md-none\"></div>;\r\n};\r\n\r\nexport default BorderInline;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertAccept = (props: Props) => {\r\n  return (\r\n    <Button\r\n      id=\"noButton\"\r\n      className=\"_radius bg-primary border-0 px-5 ms-4\"\r\n      onClick={props.action}\r\n    >\r\n      Ok\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertAccept;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n};\r\n\r\nconst ButtonAlertDelete = (props: Props) => {\r\n  return (\r\n    <>\r\n      <Button id=\"noButton\" className=\"_radius bg-dark border-0 px-4 px-sm-5\">\r\n        Nie\r\n      </Button>\r\n      <Button\r\n        onClick={props.action}\r\n        className=\"_radius bg-primary border-0 px-4 px-sm-5 ms-4\"\r\n      >\r\n        Tak\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonAlertDelete;\r\n","import { printAlert } from \"../../redux/storeFeatures/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./_alert.scss\";\r\nimport ButtonAlertAccept from \"./buttonsAlert/ButtonAlertAccept\";\r\nimport ButtonAlertDelete from \"./buttonsAlert/ButtonAlertDelete\";\r\n\r\ntype Props = {\r\n  action: () => void;\r\n  isPrinted: boolean;\r\n  header: string;\r\n  setIsPrinted?: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst Alert = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (\r\n      ![\"opacityContainer\", \"noButton\"].includes((e.target as HTMLElement)?.id)\r\n    )\r\n      return;\r\n\r\n    if (props?.setIsPrinted) props?.setIsPrinted(false);\r\n    dispatch(printAlert(\"\"));\r\n  };\r\n\r\n  if (!props.isPrinted) return null;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"opacityContainer\"\r\n        className=\"fixed-top _d-center _alert\"\r\n        onClick={handleClose}\r\n      >\r\n        <div\r\n          className={`p-5 bg-white _radius text-center fs-2 fw-medium _anim-dropDown`}\r\n        >\r\n          {props.header}\r\n          <div className=\"_w-fitContent m-auto mt-4\">\r\n            {props.header.includes(\"Usunąć\") ? (\r\n              <ButtonAlertDelete action={props.action} />\r\n            ) : (\r\n              <ButtonAlertAccept action={props.action} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport \"./_buttonForm.scss\";\r\nimport useBtnContent from \"../../hooks/useBtnContent\";\r\nimport \"./_buttonForm.scss\";\r\n\r\ntype Props = {\r\n  isLoading: boolean;\r\n  text?: string;\r\n  styles?: string;\r\n};\r\n\r\nconst ButtonForm = (props: Props) => {\r\n  const buttonText = props.text ? <div>{props.text}</div> : <div>Zapisz</div>;\r\n  const { btnContent } = useBtnContent(props?.isLoading, buttonText);\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      variant=\"primary\"\r\n      disabled={props?.isLoading}\r\n      className={`_d-center w-50 p-0 py-1 mt-2 ms-auto _radius  _fw-semiBold _fs-primary _buttonForm position-relative ${props.styles}`}\r\n    >\r\n      <div className=\"invisible\">Z</div>\r\n      <div className=\"_buttonForm__content\">{btnContent}</div>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonForm;\r\n","import { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport \"./_collapseArrow.scss\";\r\n\r\ntype Props = {\r\n  isOpen: boolean;\r\n};\r\n\r\nconst CollapseArrow = (props: Props) => {\r\n  return (\r\n    <MdOutlineKeyboardArrowDown\r\n      className={`fs-1 _fw-light _collapseArrow h-100 ${\r\n        props.isOpen ? \"_collapseArrow--rotate\" : \"\"\r\n      }`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollapseArrow;\r\n","import { RiDeleteBin6Line } from \"react-icons/ri\";\r\n\r\nconst IconTrash = () => {\r\n  return <RiDeleteBin6Line className=\"text-light-emphasis fs-2 ms-auto\" />;\r\n};\r\n\r\nexport default IconTrash;\r\n","import { useEffect, useState } from \"react\";\r\nimport { auth } from \"../../data/firebaseConfig\";\r\n\r\nconst useAutoLogout = () => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(61);\r\n\r\n  let expireTime = 0;\r\n\r\n  const checkInactivity = () => {\r\n    const remaining = Math.max(0, Math.floor((expireTime - Date.now()) / 1000));\r\n    setSecondsRemaining(remaining);\r\n\r\n    if (expireTime < Date.now()) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  const updateExpireTime = () => {\r\n    expireTime = Date.now() + 5 * 60 * 1000;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      checkInactivity();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateExpireTime();\r\n    const events = [\"mousemove\", \"keypress\", \"click\", \"scroll\"];\r\n\r\n    events.map(event => {\r\n      return document.addEventListener(event, updateExpireTime);\r\n    });\r\n\r\n    return () => {\r\n      events.map(event => {\r\n        return document.addEventListener(event, updateExpireTime);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return { secondsRemaining };\r\n};\r\n\r\nexport default useAutoLogout;\r\n","import useAutoLogout from \"./useAutoLogout\";\r\nimport \"./_autoLogout.scss\";\r\n\r\nconst AutoLogout = () => {\r\n  const { secondsRemaining } = useAutoLogout();\r\n\r\n  if (secondsRemaining + 1 > 60) return null;\r\n\r\n  return (\r\n    <div className=\"fixed-top _d-center p-5 _autoLogout\">\r\n      <div className=\"p-4 bg-white text-center rounded-1 _fs-primary fw-semiBold _anim-dropDown\">\r\n        Wylogowanie nastąpi za\r\n        <div className=\"d-flex mx-auto _w-fitContent\">\r\n          {secondsRemaining + 1} <div>&nbsp;s.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoLogout;\r\n","import { ReactNode } from \"react\";\r\nimport AutoLogout from \"../autoLogout/AutoLogout\";\r\nimport \"./_indexContainer.scss\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst IndexContainer = (props: Props) => {\r\n  return (\r\n    <main className=\"d-flex m-0 bg-secondary _indexContainer \">\r\n      <aside className=\"_indexContainer__aside\"></aside>\r\n\r\n      <div className=\"_indexContainer__rightSide\">\r\n        <AutoLogout />\r\n        {props.children}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexContainer;\r\n","import { FormikTouched, FormikErrors } from \"formik\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport \"./_inputError.scss\"\r\n\r\ntype Props = {\r\n  value: string;\r\n  errors: FormikErrors<ModelDay>;\r\n  touched: FormikTouched<ModelDay>;\r\n};\r\n\r\nconst InputError = (props: Props) => {\r\n  return (\r\n    <div className=\"text-danger d-block mt-0 fs-5 _inputError\">\r\n      {props.touched[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched] &&\r\n        props.errors[props.value as keyof typeof props.touched]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputError;\r\n","import { useState } from \"react\";\r\nimport \"./_inputsCover.scss\";\r\n\r\ntype Props = {\r\n  text?: string;\r\n};\r\n\r\nconst InputsCover = (props: Props) => {\r\n  const [isPrinted, setPrinted] = useState(true);\r\n\r\n  const handleDelete = () => {\r\n    setPrinted(false);\r\n  };\r\n  \r\n  if (!isPrinted) return null;\r\n\r\n  return (\r\n    <div\r\n      onClick={handleDelete}\r\n      className=\"_inputsCover w-100 p-2  bg-secondary-light _fs-primary text-light-emphasis  _radius border\"\r\n    >\r\n      {props.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputsCover;\r\n","import Form from \"react-bootstrap/Form\";\r\nimport InputsCover from \"./labelCover/InputsCover\";\r\n\r\ntype Props = {\r\n  value: string;\r\n  labelCover?: string;\r\n};\r\n\r\nconst InputsTextLabel = (props: Props) => {\r\n  if (props.labelCover === undefined) return <></>;\r\n\r\n  return (\r\n    <Form.Label htmlFor={props.value} className=\"position-absolute w-100\">\r\n      <InputsCover text={props.labelCover} />\r\n    </Form.Label>\r\n  );\r\n};\r\n\r\nexport default InputsTextLabel;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { ModelDay } from \"../../../sharedModels/modelDay\";\r\nimport InputError from \"../inputError/InputError\";\r\nimport InputsTextLabel from \"./InputsTextLabel\";\r\nimport \"./_inputsText.scss\";\r\n\r\ntype Props = {\r\n  inputsData: {\r\n    value: string;\r\n    type: string;\r\n    label?: string;\r\n    labelCover?: string;\r\n    placeholder?: string;\r\n    isErrorPrint?: boolean;\r\n    min?: string;\r\n    max?: string;\r\n    styles?: string;\r\n  }[];\r\n};\r\n\r\nconst InputsText = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue, errors, touched } =\r\n    useFormikContext<ModelDay>();\r\n\r\n  return (\r\n    <>\r\n      {props.inputsData.map(\r\n        ({\r\n          value,\r\n          labelCover,\r\n          type,\r\n          isErrorPrint,\r\n          min,\r\n          max,\r\n          placeholder,\r\n          styles,\r\n        }) => {\r\n          return (\r\n            <Form.Group key={value} className=\" mt-2 position-relative\">\r\n              <InputsTextLabel value={value} labelCover={labelCover} />\r\n              <Form.Control\r\n                id={value}\r\n                type={type}\r\n                name={value}\r\n                value={values[value as keyof typeof values]}\r\n                onChange={e => setFieldValue(value, e.target.value)}\r\n                onBlur={handleBlur}\r\n                min={min}\r\n                max={max}\r\n                placeholder={placeholder}\r\n                size=\"sm\"\r\n                className={`text-light-emphasis bg-secondary-light _radius w-100 text-capitalize _cursor-pointer _fs-primary\r\n                   ${type === \"color\" ? \"_inputsColor p-0\" : \"py-2\"} ${styles}\r\n                `}\r\n              />\r\n\r\n              {isErrorPrint && (\r\n                <InputError value={value} errors={errors} touched={touched} />\r\n              )}\r\n            </Form.Group>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsText;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { dataStylesListItem } from \"./stylesListContainer\";\r\n\r\ntype Props = {\r\n  noData: boolean;\r\n  styles?: string;\r\n};\r\n\r\nconst ListItemNoData = (props: Props) => {\r\n  if (!props.noData) return null;\r\n\r\n  return (\r\n    <ListGroup.Item\r\n      className={`${dataStylesListItem} ${props.styles} text-warning`}\r\n    >\r\n      Brak danych\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nexport default ListItemNoData;\r\n","\r\n\r\nexport const dataStylesListItem =\r\n  \"p-0 mb-3 ps-2 pe-0 py-2 _fs-primary _radius\";\r\n","\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\n\r\nconst RequestError = (props:Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <div className=\"text-danger fs-1 text-center\">\r\n          Błąd. Odśwież stronę\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestError;\r\n","import { Spinner } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  styles: (contentJSX: React.ReactNode) => JSX.Element;\r\n};\r\n\r\nconst RequestLoading = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.styles(\r\n        <Spinner animation=\"border\" variant=\"primary\" className=\"fs-5\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RequestLoading;\r\n","import { useState } from \"react\";\r\nimport Alert from \"../components/alert/Alert\";\r\n\r\nconst useAlertDelete = (action: any, header: string) => {\r\n  const [isAlertPrinted, setIsAlertPrinted] = useState(false);\r\n\r\n  const handleAlert = () => {\r\n    setIsAlertPrinted(true);\r\n  };\r\n\r\n  const alert = (\r\n    <Alert\r\n      action={action}\r\n      isPrinted={isAlertPrinted}\r\n      setIsPrinted={setIsAlertPrinted}\r\n      header={header}\r\n    />\r\n  );\r\n\r\n  return {\r\n    handleAlert,\r\n    alert,\r\n  };\r\n};\r\n\r\nexport default useAlertDelete;\r\n","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst useBtnContent = (isLoading: boolean, btn: JSX.Element) => {\r\n  let btnContent: JSX.Element = btn;\r\n\r\n  if (isLoading) {\r\n    btnContent = (\r\n      <Spinner\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        variant=\"primary\"\r\n        className=\"text-dark\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useBtnContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const databaseMonthsDatesToString =\r\n    listMonths &&\r\n    [...listMonths]?.map((monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    });\r\n\r\n  return { databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { ReactNode } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport ListItemNoData from \"./ListItemNoData\";\r\n\r\ntype Props = {\r\n  header: string;\r\n  listContent: any[] | undefined | null;\r\n  children: ReactNode;\r\n};\r\n\r\nconst ListContainer = (props: Props) => {\r\n  const noData = !props.listContent || props.listContent?.length === 0;\r\n  const headerCounter = !props.listContent ? 0 : props.listContent?.length\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"fs-2 py-4 text-center _fw-regular\">\r\n        {props.header}: {headerCounter}\r\n      </h3>\r\n\r\n      <ListGroup className=\"border-0 p-0\">\r\n        <ListItemNoData noData={noData} />\r\n\r\n        {props.children}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\nconst useMonthDate = (idx: number) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const monthDate = listMonths && listMonths[idx];\r\n\r\n  return { monthDate };\r\n};\r\n\r\nexport default useMonthDate;\r\n","import useMonthDate from \"../useMonthDate\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setCollapseIndex } from \"../../../../redux/storeFeatures/listMonthsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useDeleteMonthMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { useEffect } from \"react\";\r\nimport { getUpdateMonthError } from \"../../../../redux/storeFeatures/monthPanelSlice\";\r\n\r\nconst useDeleteMonthAsync = (monthIdx: number) => {\r\n  const dispatch = useDispatch();\r\n  const { monthDate } = useMonthDate(monthIdx);\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const [deleteMonth, success] = useDeleteMonthMutation();\r\n\r\n  const deleteMonthAsync = async () => {\r\n    if (monthDate && listMonths?.includes(monthDate)) {\r\n      dispatch(setCollapseIndex(-1));\r\n      const year = monthDate.slice(0, 4);\r\n      const month = monthDate.slice(-2);\r\n      await deleteMonth({ year: year, month: month });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getUpdateMonthError(success.isError));\r\n  }, [success.isError]);\r\n\r\n\r\n  return { deleteMonthAsync, success };\r\n};\r\n\r\nexport default useDeleteMonthAsync;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useBtnContent from \"../../../../hooks/useBtnContent\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport useAlertDelete from \"../../../../hooks/useAlertDelete\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport useDeleteMonthAsync from \"./useDeleteMonthAsync\";\r\nimport IconTrash from \"../../../../components/icons/IconTrash\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst ButtonDeleteMonth = (props: Props) => {\r\n  const { deleteMonthAsync, success } = useDeleteMonthAsync(props.idx);\r\n  const { btnContent } = useBtnContent(success.isLoading, <IconTrash />);\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n\r\n  const { handleAlert, alert } = useAlertDelete(\r\n    deleteMonthAsync,\r\n    \"Usunąć miesiąc?\"\r\n  );\r\n\r\n  const print = listMonths && monthDate === listMonths[props.idx];\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        disabled={success.isLoading}\r\n        onClick={handleAlert}\r\n        className=\"py-0 _d-center ms-auto bg-transparent border-0\"\r\n      >\r\n        {print ? btnContent : <IconTrash />}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteMonth;\r\n","import { ImArrowLeft } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { capitalizeFirstLetter } from \"../../../../utils/utilsCapitalizeFirstLetter\";\r\nimport useMonthDates from \"../../../../hooks/useMonthDates\";\r\nimport \"./_monthTitle.scss\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\nconst MonthTitle = (props: Props) => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n\r\n  const title =\r\n    databaseMonthsDatesToString &&\r\n    capitalizeFirstLetter(databaseMonthsDatesToString[props.idx]);\r\n\r\n  return (\r\n    <div className=\"_monthTitle _fs-primary\">\r\n      <Link\r\n        to={`/${listMonths?.[props.idx]}`}\r\n        className=\"text-decoration-none _fw-regular text-dark _align-center\"\r\n      >\r\n        <ImArrowLeft className=\" text-light-emphasis me-1\" />\r\n        <div className=\"_text-noWrap\">{title}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthTitle;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCalcHoursQuery } from \"../../services/apiSliceMonths\";\r\nimport {\r\n  getCalcHours,\r\n  getCalcHoursError,\r\n  getCalcHoursIsLoading,\r\n} from \"../../redux/storeFeatures/calcHursSlice\";\r\n\r\nconst useReduxCalcHours = (yearValue: string, monthValue: string) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    data: calcHours,\r\n    isLoading,\r\n    error,\r\n  } = useCalcHoursQuery({\r\n    year: yearValue ?? \"\",\r\n    month: monthValue ?? \"\",\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getCalcHours(calcHours));\r\n\r\n    dispatch(getCalcHoursError(error));\r\n\r\n    dispatch(getCalcHoursIsLoading(isLoading));\r\n  }, [calcHours, error, isLoading, dispatch]);\r\n};\r\n\r\nexport default useReduxCalcHours;\r\n","import { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./_inputsRange..scss\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  inputsValues: string[];\r\n};\r\n\r\nconst InputsRange = (props: Props) => {\r\n  const { values, handleBlur, setFieldValue } =\r\n    useFormikContext<ModelFormValues>();\r\n\r\n  const gradientValue = values.allHours / 3.2;\r\n  const gradientBackground: string = `linear-gradient(to right,  rgb(110, 110, 110)${gradientValue}%, rgb(239, 239, 239) ${gradientValue}%)`;\r\n\r\n  return (\r\n    <>\r\n      {props.inputsValues.map(value => {\r\n        return (\r\n          <Form.Group\r\n            key={value}\r\n            className=\"mt-2 d-flex align-items-center w-100\"\r\n          >\r\n            <Form.Range\r\n              name={value}\r\n              min={0}\r\n              max={320}\r\n              value={values[value as keyof typeof values]}\r\n              onChange={e => setFieldValue(value, e.target.value)}\r\n              onBlur={handleBlur}\r\n              className=\"form-range _inputsRange medium position-relative\"\r\n              style={{\r\n                background: gradientBackground,\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsRange;\r\n","import { useFormikContext } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\n\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\ntype Props = {\r\n  calcHours?: ModelCalcHours;\r\n};\r\n\r\nconst FormHoursError = (props: Props) => {\r\n  const { values } = useFormikContext<ModelFormValues>();\r\n  const { calcHours } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n  let content = \"\";\r\n\r\n  if (calcHours) {\r\n    if (\r\n      calcHours?.submittedHours + calcHours?.acceptedHours >\r\n      +values?.allHours\r\n    ) {\r\n      content = `Min. ${\r\n        calcHours?.submittedHours + calcHours?.acceptedHours\r\n      } h`;\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-danger fs-5\">{content}</div>;\r\n};\r\n\r\nexport default FormHoursError;\r\n","import { useSelector } from \"react-redux\";\r\nimport InputsText from \"../../../../../components/inputs/inputsText/InputsText\";\r\nimport { RootState } from \"../../../../../redux/store\";\r\nimport \"./_formHoursTop.scss\";\r\n\r\nconst FormHoursTop = () => {\r\n  const { calcHours } = useSelector((state: RootState) => state.calcHours);\r\n\r\n  const dataInputsText = [\r\n    {\r\n      value: \"allHours\",\r\n      type: \"number\",\r\n      isErrorPrint: false,\r\n      styles: \"ps-1 pt-0 pb-0 pl-0 fs-4 mt-0 _fw-semiBold\",\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"_d-between align-items-center fs-4 mb-3 position-relative\">\r\n        <div className=\"\">0 h </div>\r\n        <div className=\"_formHoursTop__summary\">\r\n          Zapisane: {calcHours?.allHours} h\r\n        </div>\r\n        <div className=\"d-flex align-items-center ms-sm-4 _formHoursTop__input\">\r\n          <InputsText inputsData={dataInputsText} /> &nbsp;\r\n          <div className=\"align-self-center mt-2\">h</div>\r\n        </div>\r\n        <div>320 h</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormHoursTop;\r\n","import { useSelector } from \"react-redux\";\r\nimport { useAddAllHoursMutation } from \"../../../../services/apiSliceMonths\";\r\nimport { ModelCalcHours } from \"../../../../sharedModels/modelCalcHours\";\r\nimport { RootState } from \"../../../../redux/store\";\r\n\r\ntype ModelFormValues = {\r\n  allHours: number;\r\n};\r\n\r\nconst useFormikHours = (\r\n \r\n  yearValue: string,\r\n  monthValue: string\r\n) => {\r\n  const [addAllHours, success] = useAddAllHoursMutation();\r\n  const {calcHours} = useSelector((state:RootState) => state.calcHours);\r\n\r\n  const initialValues = { allHours: 0 };\r\n\r\n  const onSubmit = async (values: ModelFormValues) => {\r\n    if (calcHours) {\r\n      if (\r\n        calcHours?.submittedHours + calcHours?.acceptedHours >\r\n        +values?.allHours\r\n      )\r\n        return;\r\n    }\r\n\r\n    calcHours &&\r\n      values.allHours &&\r\n      yearValue &&\r\n      monthValue &&\r\n      (await addAllHours({\r\n        year: yearValue,\r\n        month: monthValue,\r\n        calcHours: {\r\n          ...calcHours,\r\n          allHours: +values.allHours,\r\n          currentHours:\r\n            +values.allHours -\r\n            calcHours.acceptedHours -\r\n            calcHours.submittedHours,\r\n        },\r\n      }));\r\n  };\r\n\r\n  return { initialValues, onSubmit, success };\r\n};\r\n\r\nexport default useFormikHours;\r\n","import { Form, Formik } from \"formik\";\r\nimport ButtonForm from \"../../../../components/buttonForm/ButtonForm\";\r\nimport InputsRange from \"../../../../components/inputs/inputsRange/InputsRange\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport FormHoursError from \"./FormHoursError\";\r\nimport FormHoursTop from \"./formHoursTop/FormHoursTop\";\r\nimport useFormikHours from \"./useFormikHours\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst FormHoursContext = (props: Props) => {\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = monthDate?.slice(5) ?? \"\";\r\n  const { initialValues, onSubmit, success } = useFormikHours(\r\n    yearValue,\r\n    monthValue\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form className=\"py-2 pe-2\">\r\n        <FormHoursTop />\r\n        <InputsRange inputsValues={[\"allHours\"]} />\r\n        <div className=\"_d-between align-items-center mt-2 \">\r\n          <div className=\"mt-2\">\r\n            <FormHoursError />\r\n          </div>\r\n          <ButtonForm isLoading={success.isLoading} />\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default FormHoursContext;\r\n","import \"./_utilsRequestContainer.scss\";\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div className=\"_d-center fs-6 _requestContainer\">{contentJSX}</div>\r\n);\r\n","import { useSelector } from \"react-redux\";\r\nimport RequestError from \"../../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../../components/requestStates/RequestLoading\";\r\nimport useReduxCalcHours from \"../../../../hooks/updateReduxDatabase/useReduxCalcHours\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport useMonthDate from \"../useMonthDate\";\r\nimport FormHoursContext from \"./FormHoursContext\";\r\nimport { requestContainer } from \"./utilsRequestContainer.scss/utilsRequestContainer\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst FormHoursContainer = (props: Props) => {\r\n  const { monthDate } = useMonthDate(props.idx);\r\n  const yearValue = monthDate?.slice(0, 4) ?? \"\";\r\n  const monthValue = monthDate?.slice(5) ?? \"\";\r\n  useReduxCalcHours(yearValue, monthValue);\r\n  const { calcHoursIsLoading, calcHoursError } = useSelector(\r\n    (state: RootState) => state.calcHours\r\n  );\r\n\r\n  let content;\r\n\r\n  if (calcHoursIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (calcHoursError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <FormHoursContext idx={props.idx} />;\r\n  }\r\n\r\n  return <> {content} </>;\r\n};\r\n\r\nexport default FormHoursContainer;\r\n","import Collapse from \"react-bootstrap/Collapse\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport FormHoursContainer from \"../formHours/FormHoursContainer\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst CollapseContent = (props: Props) => {\r\n  const { openCollapseIndex } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const isOpen = props.idx === openCollapseIndex;\r\n\r\n  return (\r\n    <Collapse in={isOpen}>\r\n      <div className=\"pe-1\">\r\n        {isOpen ? (\r\n          <FormHoursContainer idx={props.idx} />\r\n        ) : (\r\n          <div style={{ height: \"88px\" }}></div>\r\n        )}\r\n      </div>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default CollapseContent;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CollapseArrow from \"../../../../components/collapseContainer/collapseArrow/CollapseArrow\";\r\nimport { RootState } from \"../../../../redux/store\";\r\nimport { setCollapseIndex } from \"../../../../redux/storeFeatures/listMonthsSlice\";\r\nimport ButtonDeleteMonth from \"../buttonDeleteMonth/ButtonDeleteMonth\";\r\nimport MonthTitle from \"../monthTitle/MonthTitle\";\r\nimport CollapseContent from \"./CollapseContent\";\r\nimport \"./_colapseFormHours.scss\";\r\n\r\ntype Props = {\r\n  idx: number;\r\n};\r\n\r\nconst CollapseFormHours = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const { openCollapseIndex } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n\r\n  const isOpen = props.idx === openCollapseIndex;\r\n\r\n  const handleTogle = (idx: number) => {\r\n    dispatch(setCollapseIndex(idx));\r\n    isOpen && dispatch(setCollapseIndex(-1));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <MonthTitle idx={props.idx} />\r\n        <Button\r\n          onClick={() => {\r\n            handleTogle(props.idx);\r\n          }}\r\n          aria-expanded={isOpen}\r\n          aria-controls=\"example-collapse-text\"\r\n          size=\"sm\"\r\n          className={`_radius _text-noWrap _fs-primary _fw-semiBold border-0 p-0 ps-1 pe-4 position-relative`}\r\n        >\r\n          Zapisz godziny\r\n          <CollapseArrow isOpen={isOpen} />\r\n        </Button>\r\n        <ButtonDeleteMonth idx={props.idx} />\r\n      </div>\r\n      <CollapseContent idx={props.idx} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseFormHours;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport CollapseFormHours from \"./collapseFormHours/CollapseFormHours\";\r\nimport { dataStylesListItem } from \"../../../components/listContainer/stylesListContainer\";\r\n\r\nconst ListMonths = () => {\r\n  const { databaseMonthsDatesToString } = useMonthDates();\r\n\r\n  return (\r\n    <>\r\n      {databaseMonthsDatesToString?.map(\r\n        (monthDateToString: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item\r\n              key={monthDateToString}\r\n              className={dataStylesListItem}\r\n            >\r\n              <CollapseFormHours idx={idx} />\r\n            </ListGroup.Item>\r\n          );\r\n        }\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListMonths;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { ModelUser } from \"../../../sharedModels/modelUser\";\r\nimport { useDeleteUserMutation } from \"../../../services/apiSliceUsers\";\r\n\r\nconst useDeleteUserAsync = (userName: string) => {\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n  const [deleteUser, success] = useDeleteUserMutation();\r\n\r\n  const deleteUserAsync = async () => {\r\n    if (userName) {\r\n      const userBodyPUTRequest = listUsers?.filter(\r\n        (user: ModelUser) => user?.userName !== userName\r\n      );\r\n      userBodyPUTRequest && (await deleteUser(userBodyPUTRequest));\r\n    }\r\n  };\r\n\r\n  return { deleteUserAsync, success };\r\n};\r\n\r\nexport default useDeleteUserAsync;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport useBtnContent from \"../../../hooks/useBtnContent\";\r\nimport useAlertDelete from \"../../../hooks/useAlertDelete\";\r\nimport { ModelUser } from \"../../../sharedModels/modelUser\";\r\nimport useDeleteUserAsync from \"../buttonDeleteUser/useDeleteUserAsync\";\r\nimport IconTrash from \"../../../components/icons/IconTrash\";\r\n\r\ntype Props = {\r\n  user: ModelUser;\r\n};\r\n\r\nconst ButtonDeleteUser = (props: Props) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const { deleteUserAsync, success } = useDeleteUserAsync(userName);\r\n  const { btnContent } = useBtnContent(success.isLoading, <IconTrash />);\r\n  const { alert, handleAlert } = useAlertDelete(\r\n    deleteUserAsync,\r\n    `Usunąć użytkownika ?`\r\n  );\r\n\r\n  const getUserName = (name: string) => setUserName(name);\r\n\r\n  const print = userName === props.user.userName;\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Button\r\n        onClick={() => {\r\n          getUserName(props.user?.userName);\r\n          handleAlert();\r\n        }}\r\n        disabled={success.isLoading}\r\n        className=\"py-0 _d-center ms-auto bg-transparent border-0\"\r\n      >\r\n        {print ? btnContent : <IconTrash />}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonDeleteUser;\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { dataStylesListItem } from \"../../../components/listContainer/stylesListContainer\";\r\nimport ButtonDeleteUser from \"../buttonDeleteUser/ButtonDeleteUser\";\r\n\r\nconst ListUsers = () => {\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  return (\r\n    <>\r\n      {listUsers?.map(user => {\r\n        return (\r\n          <ListGroup.Item\r\n            key={user.userName}\r\n            className={`${dataStylesListItem} d-flex`}\r\n            style={{\r\n              borderLeft: `8px solid ${user.userColor}`,\r\n              color: user.userColor,\r\n            }}\r\n          >\r\n            <div className=\"ms-2\">{user.userName}</div>\r\n            <ButtonDeleteUser user={user} />\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListUsers;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListContainer from \"../../../components/listContainer/ListContainer\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport ListMonths from \"../listMonths/ListMonths\";\r\nimport ListUsers from \"../listUsers/ListUsers\";\r\nimport \"./_settingsContent.scss\";\r\nimport BorderInline from \"../../../components/BorderInline\";\r\n\r\n\r\nconst SettinsContent = () => {\r\n  const { listMonths } = useSelector((state: RootState) => state.listMonths);\r\n  const { listUsers } = useSelector((state: RootState) => state.listUsers);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"_settingsContent pb-4\">\r\n        <BorderInline />\r\n        <ListContainer header={\"Zapisane miesiące\"} listContent={listMonths}>\r\n          <ListMonths />\r\n        </ListContainer>\r\n\r\n        <ListContainer header={\"Zapisani użytkownicy\"} listContent={listUsers}>\r\n          <ListUsers />\r\n        </ListContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettinsContent;\r\n","import { useSelector } from \"react-redux\";\r\nimport IndexContainer from \"../../../components/indexContainer/IndexContainer\";\r\nimport RequestError from \"../../../components/requestStates/RequestError\";\r\nimport RequestLoading from \"../../../components/requestStates/RequestLoading\";\r\nimport { requestContainer } from \"../../../utils/utilsRequestContainer\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport SettinsContent from \"../settingsContent/SettinsContent\";\r\n\r\nconst IndexSettings = () => {\r\n  const { listUsersError, listUsersIsLoading } = useSelector(\r\n    (state: RootState) => state.listUsers\r\n  );\r\n  const { listMonthsError } = useSelector(\r\n    (state: RootState) => state.listMonths\r\n  );\r\n  const { updateMonthError } = useSelector(\r\n    (state: RootState) => state.monthPanel\r\n  );\r\n\r\n  let content;\r\n\r\n  if (listUsersIsLoading) {\r\n    content = <RequestLoading styles={requestContainer} />;\r\n  } else if (updateMonthError || listMonthsError || listUsersError) {\r\n    content = <RequestError styles={requestContainer} />;\r\n  } else {\r\n    content = <SettinsContent />;\r\n  }\r\n\r\n  return <IndexContainer>{content}</IndexContainer>;\r\n};\r\n\r\nexport default IndexSettings;\r\n","export const capitalizeFirstLetter = (inputString: string) => {\r\n  return inputString\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word?.charAt(0)?.toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n","\r\n\r\nexport const requestContainer = (contentJSX: React.ReactNode) => (\r\n  <div\r\n    className=\"fixed-top _d-center fs-4 _requestContainer\"\r\n    style={{\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      zIndex: \"1060\",\r\n      backgroundColor: \"rgba(255,255,255,0.4)\",\r\n    }}\r\n  >\r\n    {contentJSX}\r\n  </div>\r\n);\r\n"],"names":["_jsx","className","props","Button","id","onClick","action","children","_jsxs","_Fragment","dispatch","useDispatch","isPrinted","e","_e$target","includes","target","setIsPrinted","printAlert","header","ButtonAlertDelete","ButtonAlertAccept","buttonText","text","btnContent","useBtnContent","isLoading","type","variant","disabled","concat","styles","MdOutlineKeyboardArrowDown","isOpen","RiDeleteBin6Line","_useState","useState","_useState2","_slicedToArray","secondsRemaining","setSecondsRemaining","expireTime","updateExpireTime","Date","now","useEffect","interval","setInterval","remaining","Math","max","floor","auth","signOut","checkInactivity","clearInterval","events","map","event","document","addEventListener","useAutoLogout","AutoLogout","touched","value","errors","setPrinted","undefined","labelCover","Form","Label","htmlFor","InputsCover","_useFormikContext","useFormikContext","values","handleBlur","setFieldValue","inputsData","_ref","isErrorPrint","min","placeholder","Group","InputsTextLabel","Control","name","onChange","onBlur","size","InputError","noData","ListGroup","Item","dataStylesListItem","Spinner","animation","isAlertPrinted","setIsAlertPrinted","handleAlert","alert","Alert","btn","listMonths","useSelector","state","databaseMonthsDatesToString","_toConsumableArray","monthDate","monthToDateFormat","Intl","DateTimeFormat","year","month","timeZone","format","_props$listContent","_props$listContent2","listContent","length","headerCounter","ListItemNoData","idx","monthIdx","useMonthDate","_useDeleteMonthMutati","useDeleteMonthMutation","_useDeleteMonthMutati2","deleteMonth","success","deleteMonthAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","setCollapseIndex","slice","stop","apply","arguments","getUpdateMonthError","isError","_useDeleteMonthAsync","useDeleteMonthAsync","IconTrash","_useAlertDelete","useAlertDelete","print","useMonthDates","title","capitalizeFirstLetter","Link","to","ImArrowLeft","yearValue","monthValue","_useCalcHoursQuery","useCalcHoursQuery","calcHours","data","error","getCalcHours","getCalcHoursError","getCalcHoursIsLoading","gradientValue","allHours","gradientBackground","inputsValues","Range","style","background","content","submittedHours","acceptedHours","InputsText","_useAddAllHoursMutati","useAddAllHoursMutation","_useAddAllHoursMutati2","addAllHours","onSubmit","abrupt","t0","_objectSpread","currentHours","_x","initialValues","_monthDate$slice","_monthDate$slice2","_useFormikHours","useFormikHours","Formik","FormHoursTop","InputsRange","FormHoursError","ButtonForm","requestContainer","contentJSX","useReduxCalcHours","_useSelector","calcHoursIsLoading","calcHoursError","RequestLoading","RequestError","FormHoursContext","openCollapseIndex","Collapse","in","FormHoursContainer","height","MonthTitle","CollapseArrow","ButtonDeleteMonth","CollapseContent","monthDateToString","CollapseFormHours","userName","listUsers","_useDeleteUserMutatio","useDeleteUserMutation","_useDeleteUserMutatio2","deleteUser","deleteUserAsync","userBodyPUTRequest","filter","user","setUserName","_useDeleteUserAsync","useDeleteUserAsync","_props$user","borderLeft","userColor","color","ButtonDeleteUser","BorderInline","ListContainer","ListMonths","ListUsers","listUsersError","listUsersIsLoading","listMonthsError","updateMonthError","monthPanel","SettinsContent","IndexContainer","inputString","toLowerCase","split","word","_word$charAt","charAt","toUpperCase","join","width","zIndex","backgroundColor"],"sourceRoot":""}