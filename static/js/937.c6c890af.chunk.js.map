{"version":3,"file":"static/js/937.c6c890af.chunk.js","mappings":"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","sources":["data/dataCurrentDates.tsx","hooks/useHTTPState.tsx","hooks/useMonthDates.tsx","hooks/useMonthURLToString.tsx","hooks/useURLValues.tsx","pages/monthPanel/monthPanelColmns/utilsMonthPanelColumns.tsx","hooks/useHoursSum.tsx","pages/monthPanel/MonthPanelDayPrintData.tsx","pages/monthPanel/MonthPanelDay.tsx","pages/monthPanel/MonthPanelColumn.tsx","pages/monthPanel/monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader.tsx","pages/monthPanel/monthPanelColmns/useScrollThumbPosition.tsx","pages/monthPanel/monthPanelColmns/MonthPanelColumns.tsx","components/sidebar/sidebarMonthList/SidebarMonthsList.tsx","components/sidebar/SidebarMonthCollapse.tsx","pages/monthPanel/monthPanelHeader/MonthPanelHeader.tsx","pages/monthPanel/indexMonthPanel/useHTTPIndexMonthPanel.tsx","pages/monthPanel/indexMonthPanel/IndexMonthPanel.tsx","pages/monthPanel/monthPanelHeader/MonthPanelHeaderSummary.tsx","utils/alertHelpers.tsx"],"sourcesContent":["const today = new Date();\r\n\r\nconst formatDate = (date: Date) => {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst futureDateInNext14Days = new Date(today.getTime() + 14 * 24 * 60 * 60 * 1000);\r\nconst futureDateInNext60Days = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000);\r\n\r\nexport const currYearDigits = today.getFullYear();\r\nexport const currMonthDigits = String(today.getMonth() + 1).padStart(2, \"0\");\r\nexport const currDayDigits = String(today.getDate()).padStart(2, \"0\");\r\nexport const currDateDigits = formatDate(today);\r\n\r\nexport const dateInNext14Days = formatDate(futureDateInNext14Days);\r\nexport const dateInNext60Days = formatDate(futureDateInNext60Days);\r\n\r\n\r\n\r\nexport const currMonthDateToString = new Intl.DateTimeFormat(\"pl-PL\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  timeZone: \"UTC\",\r\n}).format(today);\r\n","import Swal from \"sweetalert2\";\r\nimport { useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface ModelSuccess {\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  error?: any;\r\n}\r\n\r\nconst useHTTPState = (success: ModelSuccess, btnText: string | ReactNode) => {\r\n  useEffect(() => {\r\n    if (success.isError) {\r\n      const error = success.error;\r\n      const errMsg = error && \"status\" in error && error.status && error.status;\r\n\r\n      Swal.fire({\r\n        text: `Błąd: ${errMsg || \"\"}`,\r\n        confirmButtonColor: \"rgb(31, 180, 255)\",\r\n      });\r\n    }\r\n  }, [success.isError]);\r\n\r\n  let btnContent: string | ReactNode = btnText;\r\n\r\n  if (success.isLoading) {\r\n    btnContent = (\r\n      <Spinner animation=\"border\" size=\"sm\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return { btnContent };\r\n};\r\n\r\nexport default useHTTPState;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useMonthDates = () => {\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n\r\n  const sortedInfoMonths = infoMonths && [...infoMonths]?.sort(\r\n    (a: string, b: string) => {\r\n      const dateA = new Date(a).getTime();\r\n      const dateB = new Date(b).getTime();\r\n\r\n      return dateA - dateB;\r\n    }\r\n  );\r\n\r\n \r\n\r\n  const databaseMonthsDatesToString = sortedInfoMonths?.map(\r\n    (monthDate: string) => {\r\n      const monthToDateFormat = new Date(monthDate);\r\n      return new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      }).format(monthToDateFormat);\r\n    }\r\n  );\r\n\r\n  return { sortedInfoMonths, databaseMonthsDatesToString };\r\n};\r\n\r\nexport default useMonthDates;\r\n","import { useParams } from \"react-router-dom\";\r\n\r\nconst useMonthURLToString = () => {\r\n  const { monthURL } = useParams();\r\n\r\n  const isMonthInURL = monthURL && /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  if (isMonthInURL) {\r\n    const monthURLToDateFormat = monthURL && new Date(monthURL);\r\n    const monthURLStringFormat =\r\n      monthURLToDateFormat &&\r\n      new Intl.DateTimeFormat(\"pl-PL\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        timeZone: \"UTC\",\r\n      })?.format(monthURLToDateFormat);\r\n    return {monthURLStringFormat};\r\n  } else {\r\n    const monthURLStringFormat = \"\";\r\n    return {monthURLStringFormat};\r\n  }\r\n\r\n};\r\n\r\nexport default useMonthURLToString;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useURLValues = () => {\r\n  const { pathname } = useLocation();\r\n  const monthURL = pathname.split(\"/\").slice(-1)[0];\r\n  const yearFromURL = monthURL?.slice(0, 4);\r\n  const monthFromURL = monthURL?.slice(-2);\r\n\r\n  const isMonthInURL = /^\\d{4}-\\d{2}$/.test(monthURL);\r\n\r\n  return { monthURL, yearFromURL, monthFromURL, isMonthInURL };\r\n};\r\n\r\nexport default useURLValues;\r\n","import { ModelColumn } from \"../../../components/sidebar/sidebarMonthForm/dataSidebarMonthForm\";\r\n\r\nexport const addDaysToColumns = (columns: ModelColumn[]) => {\r\n  if (!Array.isArray(columns)) {\r\n    return [];\r\n  }\r\n  return columns?.map((column: ModelColumn) => {\r\n    if (!column?.hasOwnProperty(\"days\")) {\r\n      return { ...column, days: [] };\r\n    }\r\n    return column;\r\n  });\r\n};\r\n\r\nexport const handleDragDrop = (\r\n  results: any,\r\n  columns: ModelColumn[],\r\n  setColumns: React.Dispatch<React.SetStateAction<ModelColumn[]>>\r\n) => {\r\n  const { source, destination } = results;\r\n\r\n  if (!destination) return;\r\n  if (\r\n    source.draggableId === destination.droppableId &&\r\n    source.index !== destination.index\r\n  )\r\n    return;\r\n\r\n  if (source.droppableId !== destination.droppableId) {\r\n    const sourceColumnIdx = columns?.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const destinationColumnIdx = columns?.findIndex((column: any) => {\r\n      return column.id === destination.droppableId;\r\n    });\r\n\r\n    const newSourceDays = columns && [...columns[sourceColumnIdx].days];\r\n\r\n    const newDestinationDays =\r\n      source.droppableId !== destination.dropableId\r\n        ? [...columns[destinationColumnIdx].days]\r\n        : newSourceDays;\r\n\r\n    const [deletedDay] = newSourceDays.splice(source.index, 1);\r\n    newDestinationDays.splice(destination.index, 0, deletedDay);\r\n\r\n    const newCoulmns = [...columns];\r\n\r\n    newCoulmns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: newSourceDays,\r\n    };\r\n\r\n    newCoulmns[destinationColumnIdx] = {\r\n      ...columns[destinationColumnIdx],\r\n      days: newDestinationDays,\r\n    };\r\n\r\n    setColumns(newCoulmns);\r\n  } else {\r\n    const destintionIdx = destination.index;\r\n\r\n    const sourceColumnIdx = columns.findIndex((column: any) => {\r\n      return column.id === source.droppableId;\r\n    });\r\n\r\n    const days = [...columns[sourceColumnIdx].days];\r\n    const [deletedDay] = days.splice(source.index, 1);\r\n    days.splice(destintionIdx, 0, deletedDay);\r\n\r\n    const newColumns = [...columns];\r\n\r\n    newColumns[sourceColumnIdx] = {\r\n      ...columns[sourceColumnIdx],\r\n      days: days,\r\n    };\r\n\r\n    setColumns(newColumns);\r\n  }\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { ModelDay } from \"../components/sidebar/sidebarMonthForm/dataSidebarMonthForm\";\r\nimport { addDaysToColumns } from \"../pages/monthPanel/monthPanelColmns/utilsMonthPanelColumns\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst useHoursSum = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n\r\n  let submittedHoursSum = 0;\r\n  let acceptedHoursSum = 0;\r\n  let rejectedHoursSum = 0;\r\n\r\n  const columnsWithDays = addDaysToColumns(month?.columns);\r\n\r\n  for (const column of columnsWithDays) {\r\n    const columnDays = column.days || [];\r\n    const columnHoursSum = columnDays.reduce(\r\n      (sum: number, day: ModelDay | null) => {\r\n        const dayHours = day?.hours ?? 0;\r\n        return sum + dayHours;\r\n      },\r\n      0\r\n    );\r\n\r\n    switch (column.id) {\r\n      case \"submitted\":\r\n        submittedHoursSum = columnHoursSum;\r\n        break;\r\n      case \"accepted\":\r\n        acceptedHoursSum = columnHoursSum;\r\n        break;\r\n      case \"rejected\":\r\n        rejectedHoursSum = columnHoursSum;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return { submittedHoursSum, acceptedHoursSum, rejectedHoursSum };\r\n};\r\n\r\nexport default useHoursSum;\r\n","import { MdFactory } from \"react-icons/md\";\r\nimport { TbArrowBigRightLineFilled } from \"react-icons/tb\";\r\nimport { ModelDay } from \"../../components/sidebar/sidebarMonthForm/dataSidebarMonthForm\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n}\r\n\r\nconst MonthPanelDayPrintData = (props: Props) => {\r\n  let dateToPrint;\r\n\r\n  if (!props?.day?.date) {\r\n    return <div>Brak danych</div>;\r\n  } else {\r\n    const date = new Date(props.day.date);\r\n    dateToPrint = new Intl.DateTimeFormat(\"pl-PL\", {\r\n      day: \"numeric\",\r\n      month: \"short\",\r\n    }).format(date);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"d-flex justify-content-between fs-7\">\r\n          <div>{props.day?.userName}</div>\r\n\r\n          <div>\r\n            {props.day?.place === \"Poza\" ? (\r\n              <TbArrowBigRightLineFilled style={{ color: \"rgb(80,173,150)\" }} />\r\n            ) : (\r\n              <MdFactory style={{ color: \"rgb(255, 181, 9)\" }} />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex fw-medium justify-content-between\">\r\n          <div>{dateToPrint ? dateToPrint : \"\"}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MonthPanelDayPrintData;\r\n","import { Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FiClock } from \"react-icons/fi\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ModelDay } from \"../../components/sidebar/sidebarMonthForm/dataSidebarMonthForm\";\r\nimport useHTTPState from \"../../hooks/useHTTPState\";\r\nimport useURLValues from \"../../hooks/useURLValues\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { useDeleteDayMutation } from \"../../services/apiSliceMonths\";\r\nimport { alertHelper } from \"../../utils/alertHelpers\";\r\nimport MonthPanelDayPrintData from \"./MonthPanelDayPrintData\";\r\n\r\ninterface Props {\r\n  day: ModelDay;\r\n  columnIdx: number;\r\n  dayIdx: number;\r\n}\r\n\r\nconst MonthPanelDay = (props: Props) => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const [deleteDay, success] = useDeleteDayMutation();\r\n  const { btnContent } = useHTTPState(\r\n    success,\r\n    <RiDeleteBin6Line className=\"text-danger\" />\r\n  );\r\n\r\n  const handleDelete = async (idx: number, id: string) => {\r\n    Swal.fire(alertHelper(\"Chcesz usuniąć dzień\")).then(async result => {\r\n      if (result.isConfirmed) {\r\n        const daysBodyPUTRequest = month?.columns[idx]?.days?.filter(\r\n          (day: ModelDay) => {\r\n            return day?.id !== id;\r\n          }\r\n        );\r\n\r\n        await deleteDay({\r\n          year: yearFromURL,\r\n          month: monthFromURL,\r\n          colIdx: props.columnIdx,\r\n          daysBody: daysBodyPUTRequest || [],\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  console.log(\"\", props.day?.userColor);\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={props.day && props?.day?.id}\r\n      index={props.dayIdx}\r\n      isDragDisabled={false}\r\n    >\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <div\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className={`mb-2 bg-white rounded border ${\r\n              snapshot.isDragging\r\n                ? \"border-secondary-subtle\"\r\n                : \"border-transparent\"\r\n            } `}\r\n          >\r\n            <div\r\n              className=\"mb-2 px-1 py-2 py-sm-1\"\r\n              style={{\r\n                borderTop: `8px solid ${props.day?.userColor}`,\r\n                opacity: snapshot.isDragging ? 0.8 : 1,\r\n              }}\r\n            >\r\n              <MonthPanelDayPrintData day={props.day} />\r\n\r\n              <Button\r\n                onClick={() => handleDelete(props.columnIdx, props.day.id)}\r\n                className=\"d-flex justify-content-between  align-items-center w-100 p-0 bg-transparent border-0\"\r\n                disabled={success.isLoading}\r\n              >\r\n                <div className=\"d-flex align-items-center fs-7\">\r\n                  {props.day?.hours} h\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">{btnContent}</div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default MonthPanelDay;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { ModelColumn, ModelDay } from \"../../components/sidebar/sidebarMonthForm/dataSidebarMonthForm\";\r\nimport MonthPanelDay from \"./MonthPanelDay\";\r\n\r\ninterface Props {\r\n  column: ModelColumn;\r\n  columnIdx: number;\r\n}\r\n\r\nconst MonthPanelColumn = (props: Props) => {\r\n  return (\r\n    <Col className=\"p-0\">\r\n      <Droppable droppableId={props.column.id}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={`p-1 h-100 ${\r\n                snapshot.isDraggingOver ? \"bg-dark-subtle\" : \"bg-primary\"\r\n              }`}\r\n            >\r\n              {Array.isArray(props.column.days)\r\n                ? props.column.days.map((day: ModelDay, idx: number) => {\r\n                    return (\r\n                      <MonthPanelDay\r\n                        key={crypto.randomUUID()}\r\n                        day={day}\r\n                        columnIdx={props.columnIdx}\r\n                        dayIdx={idx}\r\n                      />\r\n                    );\r\n                  })\r\n                : []}\r\n              {provided.placeholder}\r\n            </div>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumn;\r\n","import Col from \"react-bootstrap/Col\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ninterface Props {\r\n  thumbPosition: number;\r\n}\r\n\r\nconst MonthPanelColumnsHeader = (props: Props) => {\r\n  \r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n\r\n  return (\r\n    <>\r\n      {[\r\n        {\r\n          headerText: \"Złożone:\",\r\n          counter: month?.calc?.submittedHours,\r\n        },\r\n        {\r\n          headerText: \"Przyznane:\",\r\n          counter: month?.calc?.acceptedHours,\r\n        },\r\n        {\r\n          headerText: \"Odrzucone:\",\r\n          counter: month?.calc?.rejectedHours,\r\n        },\r\n      ].map(({ headerText, counter }) => {\r\n        return (\r\n          <Col\r\n            key={headerText}\r\n            className={`bg-primary text-dark-emphasis fw-medium p-1 ${\r\n              props.thumbPosition === 0\r\n                ? \"border-bottom border-2 border-primary\"\r\n                : \" border-bottom border-2 border-white\"\r\n            }`}\r\n            style={{ fontSize: \"clamp(0.8rem, 3.4vw, 1rem)\" }}\r\n          >\r\n            {headerText} {\"\"}\r\n            {counter}\r\n          </Col>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumnsHeader;\r\n","import { useRef, useState } from \"react\";\r\n\r\nconst useScrollThumbPosition = () => {\r\n  const scrollableRef = useRef(null);\r\n  const [thumbPosition, setThumbPosition] = useState(0);\r\n\r\n  const handleScroll = () => {\r\n    const element = scrollableRef.current;\r\n\r\n    if (element) {\r\n      const { scrollTop, scrollHeight, clientHeight } = element;\r\n      const maxScrollTop = scrollHeight - clientHeight;\r\n      const thumbPosition = (scrollTop / maxScrollTop) * 100;\r\n      setThumbPosition(thumbPosition);\r\n    }\r\n  };\r\n\r\n  return { scrollableRef, thumbPosition, handleScroll };\r\n};\r\n\r\nexport default useScrollThumbPosition;\r\n","import { useEffect, useState } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ModelColumn } from \"../../../components/sidebar/sidebarMonthForm/dataSidebarMonthForm\";\r\nimport useHoursSum from \"../../../hooks/useHoursSum\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { useUpdateMonthMutation } from \"../../../services/apiSliceMonths\";\r\nimport MonthPanelColumn from \"../MonthPanelColumn\";\r\nimport MonthPanelColumnsHeader from \"../monthPanelColumnsHeader.tsx/MonthPanelColumnsHeader\";\r\nimport { addDaysToColumns, handleDragDrop } from \"./utilsMonthPanelColumns\";\r\nimport useScrollThumbPosition from \"./useScrollThumbPosition\";\r\n\r\nconst MonthPanelColumns = () => {\r\n  const { yearFromURL, monthFromURL } = useURLValues();\r\n  const [updateMonth] = useUpdateMonthMutation();\r\n  const { submittedHoursSum, acceptedHoursSum, rejectedHoursSum } =\r\n    useHoursSum();\r\n\r\n  const { scrollableRef, thumbPosition, handleScroll } =\r\n    useScrollThumbPosition();\r\n\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n\r\n  const columnsWithDays = addDaysToColumns(month?.columns);\r\n\r\n  const [columns, setColumns] = useState<ModelColumn[]>([]);\r\n\r\n  useEffect(() => {\r\n    setColumns(columnsWithDays);\r\n  }, [month]);\r\n\r\n  useEffect(() => {\r\n    if (columns.length > 0) {\r\n      updateMonth({\r\n        year: yearFromURL,\r\n        month: monthFromURL,\r\n        monthBody: {\r\n          ...month,\r\n          columns: columns,\r\n          calc: {\r\n            ...month?.calc,\r\n            currentHours:\r\n              (month?.calc?.allHours ?? 0) -\r\n              submittedHoursSum -\r\n              acceptedHoursSum -\r\n              rejectedHoursSum +\r\n              rejectedHoursSum,\r\n            submittedHours: submittedHoursSum,\r\n            acceptedHours: acceptedHoursSum,\r\n            rejectedHours: rejectedHoursSum,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [columns]);\r\n\r\n  const handleDragEnd = (results: DropResult) => {\r\n    handleDragDrop(results, columns, setColumns);\r\n  };\r\n\r\n  const rowStyles =\r\n    \"col-sm-8 col-md-9 col-xl-8 d-flex column-gap-1 ms-sm-auto mx-xl-auto  px-1\";\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      ref={scrollableRef}\r\n      onScroll={handleScroll}\r\n      className=\" mb-1 overflow-y-scroll\"\r\n    >\r\n      <div>\r\n        <Row className={`${rowStyles} sticky-top  `}>\r\n          <MonthPanelColumnsHeader thumbPosition={thumbPosition} />\r\n        </Row>\r\n\r\n        <Row className={rowStyles} style={{ height: \"fit-content\" }}>\r\n          <DragDropContext onDragEnd={handleDragEnd}>\r\n            {columns?.map((column: ModelColumn, idx: number) => {\r\n              return (\r\n                <MonthPanelColumn\r\n                  key={column.id}\r\n                  column={column}\r\n                  columnIdx={idx}\r\n                />\r\n              );\r\n            })}\r\n          </DragDropContext>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MonthPanelColumns;\r\n","import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useMonthDates from \"../../../hooks/useMonthDates\";\r\nimport useURLValues from \"../../../hooks/useURLValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport \"./_monthList.scss\";\r\n\r\nconst SidebarMonthsList = () => {\r\n  const { sortedInfoMonths, databaseMonthsDatesToString } = useMonthDates();\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n  const { monthURL, isMonthInURL } = useURLValues();\r\n\r\n  const monthURLToDateFormat = isMonthInURL ? new Date(monthURL) : null;\r\n\r\n  const curMonthURLStringFormat =\r\n    monthURLToDateFormat &&\r\n    new Intl.DateTimeFormat(\"pl-PL\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      timeZone: \"UTC\",\r\n    }).format(monthURLToDateFormat);\r\n\r\n  return (\r\n    <ListGroup className=\"monthListContainer bg-white rounded-0 border border-primary\">\r\n      {!infoMonths || infoMonths.length === 0 ? (\r\n        <p className=\"py-1 px-2 text-warning text-center\">Brak danych</p>\r\n      ) : (\r\n        databaseMonthsDatesToString?.map((month: string, idx: number) => {\r\n          return (\r\n            <ListGroup.Item key={month} className=\"border-0 p-0 px-1\">\r\n              <Link\r\n                to={`/${sortedInfoMonths?.[idx]}`}\r\n                className={`${\r\n                  curMonthURLStringFormat !== month || !curMonthURLStringFormat\r\n                    ? \"text-reset\"\r\n                    : \"text-warning\"\r\n                } text-decoration-none text-capitalize`}\r\n              >\r\n                {month}\r\n              </Link>\r\n            </ListGroup.Item>\r\n          );\r\n        })\r\n      )}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default SidebarMonthsList;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport SidebarMonthsList from \"./sidebarMonthList/SidebarMonthsList\";\r\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\r\nimport useMonthURLToString from \"../../hooks/useMonthURLToString\";\r\n\r\nconst SidebarMonthCollapse = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n        size=\"sm\"\r\n        className=\"p-0 px-1 border border-primary w-100 mt-1 text-start bg-white fw-medium d-flex justify-content-between align-items-center\"\r\n      >\r\n        {monthURLStringFormat}\r\n        <MdOutlineKeyboardArrowDown\r\n          className=\"fs-3 me-1\"\r\n          style={{\r\n            transform: `${open ? \"rotate(180deg)\" : \"\"} `,\r\n            transitionDuration: \"320ms\",\r\n          }}\r\n        />\r\n      </Button>\r\n      <Collapse in={open}>\r\n        <div>\r\n          <SidebarMonthsList />\r\n        </div>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarMonthCollapse;\r\n","import Container from \"react-bootstrap/Container\";\r\nimport MonthPanelHeaderCollapse from \"./MonthPanelHeaderCollapse\";\r\nimport MonthPanelHeaderSummary from \"./MonthPanelHeaderSummary\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport SidebarMonthCollapse from \"../../../components/sidebar/SidebarMonthCollapse\";\r\n\r\nconst MonthPanelHeader = () => {\r\n  return (\r\n    <header className=\"me-3\">\r\n      <Container fluid>\r\n        <Row className=\"col-sm-8 col-md-9 col-xl-8 col-xxl-8 ms-sm-auto mx-xl-auto px-1 \">\r\n          <SidebarMonthCollapse />\r\n          <MonthPanelHeaderSummary />\r\n        </Row>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MonthPanelHeader;\r\n","import { useSelector } from \"react-redux\";\r\nimport { currMonthDateToString } from \"../../../data/dataCurrentDates\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport MonthPanelColumns from \"../monthPanelColmns/MonthPanelColumns\";\r\nimport MonthPanelHeader from \"../monthPanelHeader/MonthPanelHeader\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst useHTTPMonthPanel = () => {\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n  const { month, error, isLoading } = useSelector(\r\n    (state: RootState) => state.monthsPanel\r\n  );\r\n\r\n\r\n  let panelContent \r\n\r\n  if (isLoading) {\r\n    panelContent = (\r\n      <Spinner animation=\"border\" variant=\"secondary\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  } else if (error) {\r\n    if (\"status\" in error) {\r\n      const errMsg = \"status\" in error && error.status;\r\n\r\n      panelContent = (\r\n        <h3 className=\"text-danger mx-auto \">\r\n          <> Błąd: {errMsg} </>\r\n        </h3>\r\n      );\r\n    }\r\n  } else if (!infoMonths || infoMonths?.length === 0) {\r\n    panelContent = (\r\n      <h5 className=\"text-warning\">\r\n        Brak miesięcy zapisanych w bazie danych. Zapisz miesiąc za pomocą\r\n        formularza\r\n      </h5>\r\n    );\r\n  } else if (!month || month?.id===\"\") {\r\n    panelContent = (\r\n      <h3 className=\"text-warning\">\r\n        Brak danych z miesiąca {currMonthDateToString}. Zapisz miesiąc za pomocą\r\n        formularza\r\n      </h3>\r\n    );\r\n  } else {\r\n    panelContent = (\r\n      <>\r\n        <MonthPanelHeader />\r\n        <MonthPanelColumns />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return { panelContent };\r\n};\r\n\r\nexport default useHTTPMonthPanel;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport useHTTPIndexMonthPanel from \"./useHTTPIndexMonthPanel\";\r\nimport \"./_bgImage.scss\"\r\n\r\n\r\nconst IndexMonthPanel = () => {\r\n  const { infoMonths } = useSelector((state: RootState) => state.infoMonths);\r\n\r\n  const { month, error, isLoading } = useSelector(\r\n    (state: RootState) => state.monthsPanel\r\n  );\r\n\r\n  const { panelContent } = useHTTPIndexMonthPanel();\r\n\r\n  let mainStyles = \"d-flex flex-column backgroundImage\";\r\n\r\n  if (isLoading && !month) {\r\n    mainStyles = \"d-flex align-items-center justify-content-center\";\r\n  }\r\n\r\n  else if (error || !month || !infoMonths || infoMonths?.length === 0) {\r\n    mainStyles =\r\n      \"d-flex justify-content-end align-items-center p-1 pe-sm-5 col-sm-7 col-md-8 ms-auto mx-xxl-auto\";\r\n  }\r\n\r\n  return (\r\n    <main className={mainStyles} style={{ height: \"100vh\"}}>\r\n      {panelContent}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexMonthPanel;\r\n","import { useSelector } from \"react-redux\";\r\nimport useMonthURLToString from \"../../../hooks/useMonthURLToString\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport SidebarMonthCollapse from \"../../../components/sidebar/SidebarMonthCollapse\";\r\n\r\nconst MonthPanelHeaderSummary = () => {\r\n  const { month } = useSelector((state: RootState) => state.monthsPanel);\r\n  const { monthURLStringFormat } = useMonthURLToString();\r\n\r\n  return (\r\n    <>\r\n   \r\n      {/* <div className=\"text-capitalize fw-medium mt-2 text-center d-md-none\">\r\n        {monthURLStringFormat}\r\n      </div> */}\r\n\r\n      <div className=\" d-flex justify-content-center my-2 fw-medium position-relative\">\r\n        <div className=\"text-capitalize fw-medium d-none d-md-block  position-absolute end-0\">\r\n          {monthURLStringFormat}\r\n        </div>\r\n\r\n        <div className=\"col-3 text-end\">Wszystkie</div>\r\n        <div className=\"mx-2\">\r\n          {month?.calc?.allHours} -{\" \"}\r\n          <span\r\n            className={`${month?.calc?.currentHours <= 0 ? \"text-danger\" : \"\"}`}\r\n          >\r\n            {month?.calc?.currentHours}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className={`col-3 ${\r\n            month?.calc?.currentHours <= 0 ? \"text-danger\" : \"\"\r\n          }`}\r\n        >\r\n          {month?.calc?.currentHours < 0 ? \"Brak\" : \"Dostępne\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MonthPanelHeaderSummary;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const alertHelper = (message: string) => {\r\n  return {\r\n    title: message,\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Tak\",\r\n    cancelButtonText: \"Nie\",\r\n  };\r\n};\r\n\r\nexport const alert = (error:string) => {\r\n  Swal.fire({\r\n    text: `Błąd ${error}`,\r\n    confirmButtonColor: \"rgb(31, 180, 255)\",\r\n  });\r\n}\r\n"],"names":["today","Date","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","futureDateInNext14Days","getTime","futureDateInNext60Days","currYearDigits","currMonthDigits","dateInNext14Days","dateInNext60Days","currMonthDateToString","Intl","DateTimeFormat","timeZone","format","success","btnText","useEffect","isError","error","errMsg","status","Swal","text","confirmButtonColor","btnContent","isLoading","_jsx","Spinner","animation","size","variant","children","className","_ref","infoMonths","useSelector","state","sortedInfoMonths","_toConsumableArray","sort","a","b","databaseMonthsDatesToString","map","monthDate","monthToDateFormat","monthURL","useParams","test","_Intl$DateTimeFormat","monthURLToDateFormat","monthURLStringFormat","useLocation","pathname","split","slice","yearFromURL","monthFromURL","isMonthInURL","addDaysToColumns","columns","Array","isArray","column","hasOwnProperty","_objectSpread","days","_step","monthsPanel","submittedHoursSum","acceptedHoursSum","rejectedHoursSum","columnsWithDays","_iterator","_createForOfIteratorHelper","s","n","done","value","columnHoursSum","reduce","sum","_day$hours","hours","id","err","e","f","props","_props$day","dateToPrint","_props$day2","_props$day3","_jsxs","_Fragment","userName","place","TbArrowBigRightLineFilled","style","color","MdFactory","_useURLValues","useURLValues","_useDeleteDayMutation","useDeleteDayMutation","_useDeleteDayMutation2","_slicedToArray","deleteDay","useHTTPState","RiDeleteBin6Line","handleDelete","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","idx","wrap","_context2","prev","next","alertHelper","then","_ref2","_callee","result","_month$columns$idx","_month$columns$idx$da","daysBodyPUTRequest","_context","isConfirmed","filter","colIdx","columnIdx","daysBody","stop","_x3","apply","arguments","_x","_x2","console","log","userColor","Draggable","draggableId","index","dayIdx","isDragDisabled","provided","snapshot","_props$day4","draggableProps","dragHandleProps","ref","innerRef","isDragging","borderTop","opacity","MonthPanelDayPrintData","Button","onClick","disabled","Col","Droppable","droppableId","droppableProps","isDraggingOver","MonthPanelDay","crypto","randomUUID","placeholder","_month$calc","_month$calc2","_month$calc3","headerText","counter","calc","submittedHours","acceptedHours","rejectedHours","thumbPosition","fontSize","scrollableRef","useRef","_useState","useState","_useState2","setThumbPosition","handleScroll","element","current","scrollTop","scrollHeight","clientHeight","_useUpdateMonthMutati","useUpdateMonthMutation","updateMonth","_useHoursSum","useHoursSum","_useScrollThumbPositi","useScrollThumbPosition","setColumns","_month$calc$allHours","length","monthBody","currentHours","allHours","rowStyles","Container","fluid","onScroll","Row","MonthPanelColumnsHeader","height","DragDropContext","onDragEnd","results","source","destination","sourceColumnIdx","findIndex","destinationColumnIdx","newSourceDays","newDestinationDays","dropableId","_newSourceDays$splice","splice","deletedDay","newCoulmns","destintionIdx","_days$splice","newColumns","handleDragDrop","MonthPanelColumn","_useMonthDates","useMonthDates","curMonthURLStringFormat","ListGroup","Item","Link","to","open","setOpen","useMonthURLToString","MdOutlineKeyboardArrowDown","transform","transitionDuration","Collapse","in","SidebarMonthsList","SidebarMonthCollapse","MonthPanelHeaderSummary","panelContent","_useSelector2","MonthPanelHeader","MonthPanelColumns","useHTTPIndexMonthPanel","mainStyles","_month$calc4","_month$calc5","message","title","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText","alert"],"sourceRoot":""}